{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/system/menus/menu-action.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/system/menus/menu-action.vue","mtime":1576046267483},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*import {\n  getActionsByMenu,\n  updateAction,\n  addAction,\n  removeAction,\n} from '@/api/action'*/\nexport default {\n  name: 'MenuAction',\n  props: {\n    value: Object\n  },\n\n  data() {\n    const validateEn = (rule, value, callback) => {\n      let reg = /^[_a-zA-Z0-9]+$/;\n\n      if (value === '') {\n        callback(new Error('功能标识不能为空'));\n      } else if (value !== '' && !reg.test(value)) {\n        callback(new Error('只允许字母、数字、下划线'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      modalVisible: false,\n      saving: false,\n      loading: false,\n      current: 'form1',\n      forms: ['form1', 'form2'],\n      modalTitle: '',\n      confirmModal: false,\n      selectApis: [],\n      formItemRules: {\n        actionCode: [{\n          required: true,\n          validator: validateEn,\n          message: '功能编码不能为空',\n          trigger: 'blur'\n        }],\n        actionName: [{\n          required: true,\n          message: '功能名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      formItem: {\n        actionId: '',\n        actionCode: '',\n        actionName: '',\n        authorityIds: [],\n        status: 1,\n        menuId: '',\n        priority: 0,\n        actionDesc: ''\n      },\n      columns: [{\n        title: '功能名称',\n        slot: 'status',\n        width: 150\n      }, {\n        title: '功能编码',\n        key: 'actionCode'\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        width: 160\n      }],\n      data: []\n    };\n  },\n\n  methods: {\n    handleModal(data, step) {\n      if (data) {\n        this.formItem = Object.assign({}, this.formItem, data);\n      }\n\n      if (!step) {\n        step = this.forms[0];\n      }\n\n      if (step === this.forms[0]) {\n        this.modalTitle = data ? '编辑功能 - ' + this.value.menuName + ' > ' + data.actionName : '添加功能 - ' + this.value.menuName;\n        this.modalVisible = true;\n        this.formItem.actionCode = this.formItem.actionId ? this.formItem.actionCode : this.value.menuCode;\n      }\n\n      if (step === this.forms[1]) {\n        this.modalTitle = data ? '接口授权 - ' + this.value.menuName + ' > ' + data.actionName : '接口授权';\n        this.handleLoadActionApi(this.formItem.actionId);\n      }\n\n      this.current = step;\n      this.formItem.status = this.formItem.status + '';\n    },\n\n    handleReset() {\n      const newData = {\n        actionId: '',\n        actionCode: '',\n        actionName: '',\n        authorityIds: [],\n        status: 1,\n        priority: 0,\n        actionDesc: ''\n      };\n      this.formItem = newData; //重置验证\n\n      this.forms.map(form => {\n        this.$refs[form].resetFields();\n      });\n      this.current = this.forms[0];\n      this.modalVisible = false;\n      this.saving = false;\n    },\n\n    handleSubmit() {\n      if (this.current === this.forms[0]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n\n            if (this.formItem.actionId) {\n              updateAction(this.formItem).then(res => {\n                this.handleReset();\n                this.handleSearch();\n\n                if (res.code === 0) {\n                  this.$Message.success('保存成功');\n                }\n              }).finally(() => {\n                this.saving = false;\n              });\n            } else {\n              addAction(this.formItem).then(res => {\n                this.handleReset();\n                this.handleSearch();\n\n                if (res.code === 0) {\n                  this.$Message.success('保存成功');\n                }\n              }).finally(() => {\n                this.saving = false;\n              });\n            }\n          }\n        });\n      }\n\n      if (this.current === this.forms[1]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n            grantAuthorityAction({\n              actionId: this.formItem.actionId,\n              authorityIds: this.formItem.authorityIds\n            }).then(res => {\n              this.handleReset();\n              this.handleSearch();\n\n              if (res.code === 0) {\n                this.$Message.success('绑定成功');\n              }\n            }).finally(() => {\n              this.saving = false;\n            });\n          }\n        });\n      }\n    },\n\n    handleSearch() {\n      if (!this.value || !this.value.menuId) {\n        return;\n      }\n\n      this.formItem.menuId = this.value.menuId;\n      this.loading = true;\n      getActionsByMenu(this.formItem.menuId).then(res => {\n        this.data = res.data;\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n\n    handleRemove(data) {\n      this.$Modal.confirm({\n        title: '确定删除吗？',\n        onOk: () => {\n          removeAction(data.actionId).then(res => {\n            this.handleSearch();\n\n            if (res.code === 0) {\n              this.pageInfo.page = 1;\n              this.$Message.success('删除成功');\n            }\n          });\n        }\n      });\n    },\n\n    handleLoadActionApi(actionId) {\n      if (!actionId) {\n        return;\n      }\n\n      const that = this;\n      const p1 = getAuthorityApi('');\n      const p2 = getAuthorityAction(actionId);\n      Promise.all([p1, p2]).then(function (values) {\n        let res1 = values[0];\n        let res2 = values[1];\n\n        if (res1.code === 0) {\n          res1.data.map(item => {\n            item.key = item.authorityId;\n            item.label = `${item.prefix.replace('/**', '')}${item.path} - ${item.apiName}`;\n            item.disabled = item.path === '/**';\n          });\n          that.selectApis = res1.data;\n        }\n\n        if (res2.code === 0) {\n          const result = [];\n          res2.data.map(item => {\n            if (!result.includes(item.authorityId)) {\n              result.push(item.authorityId);\n            }\n          });\n          that.formItem.authorityIds = result;\n        }\n\n        that.modalVisible = true;\n      });\n    },\n\n    transferRender(item) {\n      return `<span  title=\"${item.label}\">${item.label}</span>`;\n    },\n\n    handleTransferChange(newTargetKeys, direction, moveKeys) {\n      if (newTargetKeys.indexOf('1') != -1) {\n        this.formItem.authorityIds = ['1'];\n      } else {\n        this.formItem.authorityIds = newTargetKeys;\n      }\n    }\n\n  },\n  watch: {\n    value(val) {\n      this.handleSearch();\n    }\n\n  },\n  mounted: function () {}\n};",{"version":3,"sources":["menu-action.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"search-con search-con-top\">\n      <ButtonGroup>\n        <Button\n          :disabled=\"value.menuId && value.menuId!=='0' && !value.hasChild && hasAuthority('systemMenuEdit')?false:true\"\n          class=\"search-btn\" type=\"primary\" @click=\"handleModal()\">\n          <span>添加功能按钮</span>\n        </Button>\n      </ButtonGroup>\n    </div>\n    <Alert type=\"info\" show-icon>请绑定相关接口资源。否则请求网关服务器将提示<code>\"权限不足,拒绝访问!\"</code></Alert>\n    <Table border :columns=\"columns\" :data=\"data\" :loading=\"loading\">\n      <template slot=\"status\" slot-scope=\"{ row }\">\n        <Badge v-if=\"row.status===1\" status=\"success\"/>\n        <Badge v-else=\"\" status=\"error\"/>\n        <span>{{row.actionName}}</span>\n      </template>\n      <template slot=\"action\" slot-scope=\"{ row }\">\n        <a :disabled=\"hasAuthority('systemMenuEdit')?false:true\" @click=\"handleModal(row)\">编辑</a> &nbsp;\n        <a :disabled=\"hasAuthority('systemMenuEdit')?false:true\" @click=\"handleModal(row,forms[1])\">接口权限</a> &nbsp;\n        <a :disabled=\"hasAuthority('systemMenuEdit')?false:true\" @click=\"handleRemove(row)\">删除</a>\n      </template>\n    </Table>\n    <Modal v-model=\"modalVisible\"\n           :title=\"modalTitle\"\n           width=\"40\"\n           @on-cancel=\"handleReset\">\n      <div>\n        <Form ref=\"form1\" v-show=\"current=='form1'\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n          <FormItem label=\"上级菜单\">\n            <Input disabled v-model=\"value.menuName\"></Input>\n          </FormItem>\n          <FormItem label=\"功能标识\" prop=\"actionCode\">\n            <Input v-model=\"formItem.actionCode\" placeholder=\"请输入内容\"></Input>\n            <span>菜单标识+自定义标识.默认后缀：View、Edit</span>\n          </FormItem>\n          <FormItem label=\"功能名称\" prop=\"actionName\">\n            <Input v-model=\"formItem.actionName\" placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem label=\"优先级\">\n            <InputNumber v-model=\"formItem.priority\"></InputNumber>\n          </FormItem>\n          <FormItem label=\"状态\">\n            <RadioGroup v-model=\"formItem.status\" type=\"button\">\n              <Radio label=\"0\">禁用</Radio>\n              <Radio label=\"1\">启用</Radio>\n            </RadioGroup>\n          </FormItem>\n          <FormItem label=\"描述\">\n            <Input v-model=\"formItem.actionDesc\" type=\"textarea\" placeholder=\"请输入内容\"></Input>\n          </FormItem>\n        </Form>\n        <Form ref=\"form2\" v-show=\"current=='form2'\" :model=\"formItem\" :rules=\"formItemRules\">\n          <FormItem prop=\"authorities\">\n            <Transfer\n              :data=\"selectApis\"\n              :list-style=\"{width: '45%',height: '480px'}\"\n              :titles=\"['选择接口', '已选择接口']\"\n              :render-format=\"transferRender\"\n              :target-keys=\"formItem.authorityIds\"\n              @on-change=\"handleTransferChange\"\n              filterable>\n            </Transfer>\n          </FormItem>\n        </Form>\n        <div class=\"drawer-footer\">\n          <Button type=\"default\" @click=\"handleReset\">取消</Button>&nbsp;\n          <Button type=\"primary\" @click=\"handleSubmit\" :loading=\"saving\">保存</Button>\n        </div>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\n  /*import {\n    getActionsByMenu,\n    updateAction,\n    addAction,\n    removeAction,\n  } from '@/api/action'*/\n\n\n  export default {\n    name: 'MenuAction',\n    props: {\n      value: Object\n    },\n    data () {\n      const validateEn = (rule, value, callback) => {\n        let reg = /^[_a-zA-Z0-9]+$/\n        if (value === '') {\n          callback(new Error('功能标识不能为空'))\n        } else if (value !== '' && !reg.test(value)) {\n          callback(new Error('只允许字母、数字、下划线'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        modalVisible: false,\n        saving: false,\n        loading: false,\n        current: 'form1',\n        forms: [\n          'form1',\n          'form2'\n        ],\n        modalTitle: '',\n        confirmModal: false,\n        selectApis: [],\n        formItemRules: {\n          actionCode: [\n            {required: true, validator: validateEn, message: '功能编码不能为空', trigger: 'blur'}\n          ],\n          actionName: [\n            {required: true, message: '功能名称不能为空', trigger: 'blur'}\n          ]\n        },\n        formItem: {\n          actionId: '',\n          actionCode: '',\n          actionName: '',\n          authorityIds: [],\n          status: 1,\n          menuId: '',\n          priority: 0,\n          actionDesc: ''\n        },\n        columns: [\n          {\n            title: '功能名称',\n            slot: 'status',\n            width: 150\n          },\n          {\n            title: '功能编码',\n            key: 'actionCode'\n          },\n          {\n            title: '操作',\n            slot: 'action',\n            fixed: 'right',\n            width: 160\n          }\n        ],\n        data: []\n      }\n    },\n    methods: {\n      handleModal (data, step) {\n        if (data) {\n          this.formItem = Object.assign({}, this.formItem, data)\n        }\n        if (!step) {\n          step = this.forms[0]\n        }\n        if (step === this.forms[0]) {\n          this.modalTitle = data ? '编辑功能 - ' + this.value.menuName + ' > ' + data.actionName : '添加功能 - ' + this.value.menuName\n          this.modalVisible = true\n          this.formItem.actionCode = this.formItem.actionId ? this.formItem.actionCode : this.value.menuCode\n        }\n        if (step === this.forms[1]) {\n          this.modalTitle = data ? '接口授权 - ' + this.value.menuName + ' > ' + data.actionName : '接口授权'\n          this.handleLoadActionApi(this.formItem.actionId)\n        }\n        this.current = step\n        this.formItem.status = this.formItem.status + ''\n      },\n      handleReset () {\n        const newData = {\n          actionId: '',\n          actionCode: '',\n          actionName: '',\n          authorityIds: [],\n          status: 1,\n          priority: 0,\n          actionDesc: ''\n        }\n        this.formItem = newData\n        //重置验证\n        this.forms.map(form => {\n          this.$refs[form].resetFields()\n        })\n        this.current = this.forms[0]\n        this.modalVisible = false\n        this.saving = false\n      },\n      handleSubmit () {\n        if (this.current === this.forms[0]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              if (this.formItem.actionId) {\n                updateAction(this.formItem).then(res => {\n                  this.handleReset()\n                  this.handleSearch()\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                  }\n                }).finally(() => {\n                  this.saving = false\n                })\n              } else {\n                addAction(this.formItem).then(res => {\n                  this.handleReset()\n                  this.handleSearch()\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                  }\n                }).finally(() => {\n                  this.saving = false\n                })\n              }\n            }\n          })\n        }\n        if (this.current === this.forms[1]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              grantAuthorityAction({\n                actionId: this.formItem.actionId,\n                authorityIds: this.formItem.authorityIds\n              }).then(res => {\n                this.handleReset()\n                this.handleSearch()\n                if (res.code === 0) {\n                  this.$Message.success('绑定成功')\n                }\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          })\n        }\n\n      },\n      handleSearch () {\n        if (!this.value || !this.value.menuId) {\n          return\n        }\n        this.formItem.menuId = this.value.menuId\n        this.loading = true\n        getActionsByMenu(this.formItem.menuId).then(res => {\n          this.data = res.data\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      handleRemove (data) {\n        this.$Modal.confirm({\n          title: '确定删除吗？',\n          onOk: () => {\n            removeAction(data.actionId).then(res => {\n              this.handleSearch()\n              if (res.code === 0) {\n                this.pageInfo.page = 1\n                this.$Message.success('删除成功')\n              }\n            })\n          }\n        })\n      },\n      handleLoadActionApi (actionId) {\n        if (!actionId) {\n          return\n        }\n        const that = this\n        const p1 = getAuthorityApi('')\n        const p2 = getAuthorityAction(actionId)\n        Promise.all([p1, p2]).then(function (values) {\n          let res1 = values[0]\n          let res2 = values[1]\n          if (res1.code === 0) {\n            res1.data.map(item => {\n              item.key = item.authorityId\n              item.label = `${item.prefix.replace('/**', '')}${item.path} - ${item.apiName}`\n              item.disabled = item.path === '/**'\n            })\n            that.selectApis = res1.data\n          }\n          if (res2.code === 0) {\n            const result = []\n            res2.data.map(item => {\n              if (!result.includes(item.authorityId)) {\n                result.push(item.authorityId)\n              }\n            })\n            that.formItem.authorityIds = result\n          }\n          that.modalVisible = true\n        })\n      },\n      transferRender (item) {\n        return `<span  title=\"${item.label}\">${item.label}</span>`\n      },\n      handleTransferChange (newTargetKeys, direction, moveKeys) {\n        if (newTargetKeys.indexOf('1') != -1) {\n          this.formItem.authorityIds = ['1']\n        } else {\n          this.formItem.authorityIds = newTargetKeys\n        }\n      },\n    },\n    watch: {\n      value (val) {\n        this.handleSearch()\n      }\n    },\n    mounted: function () {\n    }\n  }\n</script>\n"],"sourceRoot":"src/view/module/system/menus"}]}