{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/components/main/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/components/main/main.vue","mtime":1577554020749},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SideMenu from './components/side-menu/side-menu';\nimport HeaderBar from './components/header-bar';\nimport TagsNav from './components/tags-nav';\nimport User from './components/user';\nimport ABackTop from './components/a-back-top';\nimport Fullscreen from './components/fullscreen';\nimport Language from './components/language';\nimport ErrorStore from './components/error-store';\nimport siderTrigger from './components/header-bar/sider-trigger';\nimport customBreadCrumb from './components/header-bar/custom-bread-crumb';\nimport { mapMutations, mapActions, mapGetters } from 'vuex';\nimport { getNewTagList, getNextRoute, routeEqual } from '@/libs/util';\nimport minLogo from '@/assets/images/logo-min.png';\nimport maxLogo from '@/assets/images/logo.png';\nimport './main.less';\nimport Layout from \"../../../node_modules/iview/src/components/layout/layout\";\nexport default {\n  name: 'Main',\n  components: {\n    Layout,\n    SideMenu,\n    HeaderBar,\n    Language,\n    TagsNav,\n    Fullscreen,\n    ErrorStore,\n    User,\n    ABackTop,\n    customBreadCrumb,\n    siderTrigger\n  },\n\n  data() {\n    return {\n      value1: false,\n      collapsed: false,\n      layout: '',\n      minLogo,\n      maxLogo,\n      isFullscreen: false,\n      screenWidth: 0,\n      userInfo: JSON.parse(window.localStorage.getItem('userInfo'))\n    };\n  },\n\n  computed: { ...mapGetters(['errorCount']),\n\n    breadCrumbList() {\n      return this.$store.state.app.breadCrumbList;\n    },\n\n    headerLogoClass() {\n      return ['main-layout-header-logo', this.collapsed ? 'main-layout-header-logo-collapsed' : ''];\n    },\n\n    mainClass() {\n      return ['main-layout-content', this.collapsed ? 'main-layout-content-collapsed' : ''];\n    },\n\n    tagNavList() {\n      return this.$store.state.app.tagNavList;\n    },\n\n    tagRouter() {\n      return this.$store.state.app.tagRouter;\n    },\n\n    userAvatar() {\n      return this.$store.state.user.avatarImgPath;\n    },\n\n    userName() {\n      return this.userInfo.username; //'我是吉米小绵羊啊'\n    },\n\n    menuList() {\n      return this.$store.getters.menuList;\n    },\n\n    local() {\n      return this.$store.state.app.local;\n    },\n\n    hasReadErrorPage() {\n      return this.$store.state.app.hasReadErrorPage;\n    }\n\n  },\n  methods: { ...mapMutations(['setBreadCrumb', 'setTagNavList', 'addTag', 'setLocal']),\n    ...mapActions(['handleLogin']),\n\n    turnToPage(route) {\n      let {\n        name,\n        params,\n        query\n      } = {};\n      if (typeof route === 'string') name = route;else {\n        name = route.name;\n        params = route.params;\n        query = route.query;\n      }\n\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1]);\n        return;\n      }\n\n      this.$router.push({\n        name,\n        params,\n        query\n      });\n    },\n\n    changeLayout(layout) {\n      if (!layout) {\n        layout = 'left';\n      }\n\n      localStorage.setItem(\"layout\", layout);\n      this.$Message.info(\"选择布局:\" + layout);\n      this.layout = layout;\n    },\n\n    handleCollapsedChange(state) {\n      this.collapsed = state;\n    },\n\n    handleCloseTag(res, type, route) {\n      if (type === 'all') {\n        this.turnToPage(this.$config.homeName);\n      } else if (routeEqual(this.$route, route)) {\n        if (type !== 'others') {\n          const nextRoute = getNextRoute(this.tagNavList, route);\n          this.$router.push(nextRoute);\n        }\n      }\n\n      this.setTagNavList(res);\n    },\n\n    handleClick(item) {\n      this.turnToPage(item);\n    },\n\n    setLayout() {\n      let layout = localStorage.getItem(\"layout\");\n\n      if (!layout) {\n        layout = 'left';\n        localStorage.setItem(\"layout\", layout);\n      }\n\n      this.layout = layout;\n    }\n\n  },\n  watch: {\n    screenWidth(val) {\n      const that = this;\n\n      if (val < 768) {\n        // 小于768强制折叠\n        that.handleCollapsedChange(true);\n      } else {\n        that.handleCollapsedChange(false);\n      }\n    },\n\n    '$route'(newRoute) {\n      const {\n        name,\n        query,\n        params,\n        meta\n      } = newRoute;\n      this.addTag({\n        route: {\n          name,\n          query,\n          params,\n          meta\n        },\n        type: 'push'\n      });\n      this.setBreadCrumb(newRoute);\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute)); //this.$refs['sideMenu'].updateOpenName(newRoute.name)\n    }\n\n  },\n\n  mounted() {\n    const that = this; // 宽度适应\n\n    that.screenWidth = document.body.clientWidth;\n\n    window.onresize = () => {\n      return (() => {\n        that.screenWidth = document.body.clientWidth;\n      })();\n    }; // 设置布局\n\n\n    this.setLayout(); // 初始化设置面包屑导航和标签导航\n\n    this.setTagNavList();\n    this.addTag({\n      route: this.$store.state.app.homeRoute\n    });\n    this.setBreadCrumb(this.$route); // 设置初始语言\n    //this.setLocal(this.$i18n.locale)\n    // 如果当前打开页面不在标签栏中，跳到homeName页\n\n    if (!this.tagNavList.find(item => item.name === this.$route.name)) {\n      this.$router.push({\n        name: this.$config.homeName\n      });\n    }\n  }\n\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template >\n  <Layout style=\"height: 100%\" class=\"skin-blue\">\n    <Layout v-if=\"layout === 'toptest'\" style=\"height: 100%\" class=\"main-layout-top\">\n      <Header class=\"main-layout-header\">\n        <div class=\"main-layout-logo\">\n          <img v-show=\"!collapsed\" class=\"max-logo\" :src=\"maxLogo\"  key=\"max-logo\" />\n          <img v-show=\"collapsed\" class=\"min-logo\" :src=\"minLogo\" key=\"min-logo\" />\n        </div>\n        <side-menu accordion ref=\"sideMenu\"  mode=\"horizontal\" :active-name=\"$route.name\"  @on-select=\"turnToPage\"\n         ></side-menu>\n      </Header>\n        <Content :class=\"mainClass\" :style=\"{margin: '70px 20px', background: '#fff', minHeight: '500px'}\">\n          <Layout class=\"main-layout-content-wrapper\">\n            <custom-bread-crumb class=\"main-layout-bread-crumb\" v-show=\"screenWidth>768\" show-icon :list=\"breadCrumbList\"></custom-bread-crumb>\n            <div class=\"main-layout-tag-nav-wrapper\">\n              <tags-nav :value=\"$route\" @input=\"handleClick\" :list=\"tagNavList\" @on-close=\"handleCloseTag\"/>\n            </div>\n            <Content class=\"main-layout-view-wrapper\">\n              <keep-alive>\n                <router-view/>\n              </keep-alive>\n              <ABackTop :height=\"100\" :bottom=\"80\" :right=\"50\" container=\".main-layout-view-wrapper\"></ABackTop>\n            </Content>\n          </Layout>\n        </Content>\n    </Layout>\n\n    <Layout v-else=\"\" style=\"height: 100%\" class=\"main-layout-left\">\n      <Sider hide-trigger collapsible :width=\"220\" :collapsed-width=\"64\" v-model=\"collapsed\" class=\"left-sider\"\n             :style=\"{overflow: 'hidden'}\">\n        <div class=\"main-layout-logo\">\n          <img v-show=\"!collapsed\" class=\"max-logo\" :src=\"maxLogo\"  key=\"max-logo\" />\n          <img v-show=\"collapsed\" class=\"min-logo\" :src=\"minLogo\" key=\"min-logo\" />\n        </div>\n        <side-menu accordion ref=\"sideMenu\" :active-name=\"$route.name\" :collapsed=\"collapsed\" @on-select=\"turnToPage\"\n          :menu-list=\"menuList\">\n        </side-menu>\n      </Sider>\n      <Layout>\n      <Header class=\"main-layout-header\">\n          <sider-trigger :collapsed=\"collapsed\" icon=\"md-menu\" @on-change=\"handleCollapsedChange\"></sider-trigger>\n          <custom-bread-crumb class=\"main-layout-bread-crumb\" v-show=\"screenWidth>768\" show-icon :list=\"breadCrumbList\"></custom-bread-crumb>\n          <ul class=\"main-layout-header-bar\">\n            <li>\n              <fullscreen :screenWidth=\"screenWidth\" v-model=\"isFullscreen\"/>\n            </li>\n            <li>\n              <error-store v-if=\"$config.plugin['error-store'] && $config.plugin['error-store'].showInHeader\"  :has-read=\"hasReadErrorPage\" :count=\"errorCount\"></error-store>\n            </li>\n            <li>\n              <language v-if=\"$config.useI18n\" @on-lang-change=\"setLocal\" style=\"margin-right: 10px;\" :lang=\"local\"/>\n            </li>\n            <li>\n              <user :user-avatar=\"userAvatar\" :user-name=\"userName\"/>\n            </li>\n            <li>\n              <Icon @click.native=\"value1 = true\" type=\"md-settings\" :size=\"18\"></Icon>\n            </li>\n          </ul>\n        </Header>\n        <Content :class=\"mainClass\">\n          <Layout class=\"main-layout-content-wrapper\">\n              <div class=\"main-layout-tag-nav-wrapper\">\n                <tags-nav :value=\"$route\" @input=\"handleClick\" :list=\"tagNavList\" @on-close=\"handleCloseTag\"/>\n              </div>\n              <Content class=\"main-layout-view-wrapper\">\n                <keep-alive>\n                  <router-view/>\n                </keep-alive>\n                <ABackTop :height=\"100\" :bottom=\"80\" :right=\"50\" container=\".main-layout-view-wrapper\"></ABackTop>\n              </Content>\n          </Layout>\n        </Content>\n      </Layout>\n    </Layout>\n    <Drawer :closable=\"false\" width=\"300\" v-model=\"value1\">\n      <h3>导航布局</h3>\n      <div>\n        <p @click=\"changeLayout('left')\" style=\"display: inline-block;margin-left: 20px;cursor: pointer\"><img src=\"../../assets/images/layout-left.svg\"/></p>\n        <p @click=\"changeLayout('top')\" style=\"display: inline-block;margin-left: 20px;cursor: pointer\"><img src=\"../../assets/images/layout-top.svg\"/></p>\n      </div>\n    </Drawer>\n  </Layout>\n</template>\n<script>\n  import SideMenu from './components/side-menu/side-menu'\n  import HeaderBar from './components/header-bar'\n  import TagsNav from './components/tags-nav'\n  import User from './components/user'\n  import ABackTop from './components/a-back-top'\n  import Fullscreen from './components/fullscreen'\n  import Language from './components/language'\n  import ErrorStore from './components/error-store'\n  import siderTrigger from './components/header-bar/sider-trigger'\n  import customBreadCrumb from './components/header-bar/custom-bread-crumb'\n  import {mapMutations, mapActions, mapGetters} from 'vuex'\n  import {getNewTagList, getNextRoute, routeEqual} from '@/libs/util'\n  import minLogo from '@/assets/images/logo-min.png'\n  import maxLogo from '@/assets/images/logo.png'\n  import './main.less'\n  import Layout from \"../../../node_modules/iview/src/components/layout/layout\";\n  export default {\n    name: 'Main',\n    components: {\n      Layout, \n\t\t\tSideMenu,\n      HeaderBar,\n      Language,\n      TagsNav,\n      Fullscreen,\n      ErrorStore,\n      User,\n      ABackTop,\n      customBreadCrumb,\n      siderTrigger\n    },\n    data () {\n      return {\n        value1: false,\n        collapsed: false,\n        layout:'',\n        minLogo,\n        maxLogo,\n        isFullscreen: false,\n        screenWidth: 0,\n        userInfo: JSON.parse(window.localStorage.getItem('userInfo')),\n      }\n    },\n    computed: {\n      ...mapGetters([\n        'errorCount'\n      ]),\n      breadCrumbList () {\n        return this.$store.state.app.breadCrumbList\n      },\n      headerLogoClass () {\n        return [\n          'main-layout-header-logo',\n          this.collapsed ? 'main-layout-header-logo-collapsed' : ''\n        ]\n      },\n      mainClass () {\n        return [\n          'main-layout-content',\n          this.collapsed ? 'main-layout-content-collapsed' : ''\n        ]\n      },\n      tagNavList () {\n        return this.$store.state.app.tagNavList\n      },\n      tagRouter () {\n        return this.$store.state.app.tagRouter\n      },\n      userAvatar () {\n        return this.$store.state.user.avatarImgPath\n      },\n      userName () {\n        return this.userInfo.username //'我是吉米小绵羊啊'\n      },\n      menuList () {\n        return this.$store.getters.menuList\n      },\n      local () {\n        return this.$store.state.app.local\n      },\n      hasReadErrorPage () {\n        return this.$store.state.app.hasReadErrorPage\n      }\n    },\n    methods: {\n      ...mapMutations([\n        'setBreadCrumb',\n        'setTagNavList',\n        'addTag',\n        'setLocal'\n      ]),\n      ...mapActions([\n        'handleLogin'\n      ]),\n      turnToPage (route) {\n        let {name, params, query} = {}\n        if (typeof route === 'string') name = route\n        else {\n          name = route.name\n          params = route.params\n          query = route.query\n        }\n        if (name.indexOf('isTurnByHref_') > -1) {\n          window.open(name.split('_')[1])\n          return\n        }\n        this.$router.push({\n          name,\n          params,\n          query\n        })\n      },\n      changeLayout(layout){\n        if(!layout){\n          layout = 'left'\n        }\n        localStorage.setItem(\"layout\",layout);\n        this.$Message.info(\"选择布局:\"+layout)\n        this.layout = layout\n      },\n      handleCollapsedChange (state) {\n        this.collapsed = state\n      },\n      handleCloseTag (res, type, route) {\n        if (type === 'all') {\n          this.turnToPage(this.$config.homeName)\n        } else if (routeEqual(this.$route, route)) {\n          if (type !== 'others') {\n            const nextRoute = getNextRoute(this.tagNavList, route)\n            this.$router.push(nextRoute)\n          }\n        }\n        this.setTagNavList(res)\n      },\n      handleClick (item) {\n        this.turnToPage(item)\n      },\n      setLayout(){\n        let layout = localStorage.getItem(\"layout\");\n        if(!layout){\n          layout = 'left'\n          localStorage.setItem(\"layout\",layout);\n        }\n        this.layout = layout\n      }\n    },\n    watch: {\n      screenWidth(val) {\n        const  that = this;\n        if (val < 768) {\n          // 小于768强制折叠\n          that.handleCollapsedChange(true)\n        } else {\n          that.handleCollapsedChange(false)\n        }\n      },\n      '$route' (newRoute) {\n        const {name, query, params, meta} = newRoute\n        this.addTag({\n          route: {name, query, params, meta},\n          type: 'push'\n        })\n        this.setBreadCrumb(newRoute)\n        this.setTagNavList(getNewTagList(this.tagNavList, newRoute))\n        //this.$refs['sideMenu'].updateOpenName(newRoute.name)\n      }\n    },\n    mounted () {\n      const that = this\n      // 宽度适应\n      that.screenWidth = document.body.clientWidth\n      window.onresize = () => {\n        return (() => {\n          that.screenWidth = document.body.clientWidth\n        })()\n      }\n      // 设置布局\n      this.setLayout()\n      // 初始化设置面包屑导航和标签导航\n      this.setTagNavList()\n      this.addTag({\n        route: this.$store.state.app.homeRoute\n      })\n      this.setBreadCrumb(this.$route)\n      // 设置初始语言\n      //this.setLocal(this.$i18n.locale)\n      // 如果当前打开页面不在标签栏中，跳到homeName页\n      if (!this.tagNavList.find(item => item.name === this.$route.name)) {\n        this.$router.push({\n          name: this.$config.homeName\n        })\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components/main"}]}