{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/src/libs/util.js","dependencies":[{"path":"/Users/yanglina/wadmin/src/libs/util.js","mtime":1577514676385},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Cookies from 'js-cookie'; // cookie保存的天数\n\nimport config from '@/config';\nimport { forEach, hasOneOf, objEqual } from '@/libs/tools';\nexport const TOKEN_KEY = 'token';\nexport const setToken = (token, auto) => {\n  if (auto) {\n    Cookies.set(TOKEN_KEY, token, {\n      expires: config.cookieExpires || 1\n    });\n  } else {\n    Cookies.set(TOKEN_KEY, token);\n  }\n};\nexport const getToken = () => {\n  const token = Cookies.get(TOKEN_KEY);\n\n  if (token && token !== 'undefined') {\n    return token;\n  } else {\n    return false;\n  }\n};\nexport const hasChild = item => {\n  return item.children && item.children.length !== 0;\n};\n\nconst showThisMenuEle = (item, access) => {\n  if (item.meta && item.meta.access && item.meta.access.length) {\n    if (hasOneOf(item.meta.access, access)) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return true;\n  }\n};\n/**\n * @param {Array} list 通过路由列表得到菜单列表\n * @returns {Array}\n */\n\n\nexport const getMenuByRouter = (list, access) => {\n  let res = [];\n  forEach(list, item => {\n    if (!item.meta || item.meta && !item.meta.hideInMenu) {\n      let obj = {\n        icon: item.meta && item.meta.icon || '',\n        name: item.name,\n        meta: item.meta\n      };\n\n      if ((hasChild(item) || item.meta && item.meta.showAlways) && showThisMenuEle(item, access)) {\n        obj.children = getMenuByRouter(item.children, access);\n      }\n\n      if (item.meta && item.meta.href) obj.href = item.meta.href;\n      if (showThisMenuEle(item, access)) res.push(obj);\n    }\n  });\n  return res;\n};\n/**\n * @param {Array} routeMetched 当前路由metched\n * @returns {Array}\n */\n\nexport const getBreadCrumbList = (route, homeRoute) => {\n  let homeItem = { ...homeRoute,\n    icon: homeRoute.meta.icon\n  };\n  let routeMetched = route.matched;\n  if (routeMetched.some(item => item.name === homeRoute.name)) return [homeItem];\n  let res = routeMetched.filter(item => {\n    return item.meta === undefined || !item.meta.hide;\n  }).map(item => {\n    let meta = { ...item.meta\n    };\n    if (meta.title && typeof meta.title === 'function') meta.title = meta.title(route);\n    let obj = {\n      icon: item.meta && item.meta.icon || '',\n      name: item.name,\n      meta: meta\n    };\n    return obj;\n  });\n  res = res.filter(item => {\n    return !item.meta.hideInMenu;\n  });\n  return [{ ...homeItem,\n    to: homeRoute.path\n  }, ...res];\n};\nexport const getRouteTitleHandled = route => {\n  let router = { ...route\n  };\n  let meta = { ...route.meta\n  };\n  let title = '';\n\n  if (meta.title) {\n    if (typeof meta.title === 'function') {\n      title = meta.title(router);\n    } else {\n      title = meta.title;\n    }\n  }\n\n  meta.title = title;\n  router.meta = meta;\n  return router;\n};\nexport const showTitle = (item, vm) => {\n  let title = item.meta.title;\n\n  if (vm.$config.useI18n) {\n    if (title.includes('{{') && title.includes('}}') && vm.$config.useI18n) {\n      title = title.replace(/({{[\\s\\S]+?}})/, (m, str) => str.replace(/{{([\\s\\S]*)}}/, (m, _) => vm.$t(_.trim())));\n    } else {\n      title = vm.$t(item.name);\n    }\n  } else {\n    title = item.meta && item.meta.title || item.name;\n  }\n\n  return title;\n};\n/**\n * @description 本地存储和获取标签导航列表\n */\n\nexport const setTagNavListInLocalstorage = list => {\n  localStorage.tagNaveList = JSON.stringify(list);\n};\n/**\n * @returns {Array} 其中的每个元素只包含路由原信息中的name, path, meta三项\n */\n\nexport const getTagNavListFromLocalstorage = () => {\n  const list = localStorage.tagNaveList;\n  return list ? JSON.parse(list) : [];\n};\n/**\n * @param {Array} routers 路由列表数组\n * @description 用于找到路由列表中name为home的对象\n */\n\nexport const getHomeRoute = (routers, homeName = 'home') => {\n  let i = -1;\n  let len = routers.length;\n  let homeRoute = {};\n\n  while (++i < len) {\n    let item = routers[i];\n\n    if (item.children && item.children.length) {\n      let res = getHomeRoute(item.children, homeName);\n      if (res.name) return res;\n    } else {\n      if (item.name === homeName) homeRoute = item;\n    }\n  }\n\n  return homeRoute;\n};\n/**\n * @param {*} list 现有标签导航列表\n * @param {*} newRoute 新添加的路由原信息对象\n * @description 如果该newRoute已经存在则不再添加\n */\n\nexport const getNewTagList = (list, newRoute) => {\n  const {\n    name,\n    path,\n    meta\n  } = newRoute;\n  let newList = [...list];\n\n  if (newList.findIndex(item => item.name === name) >= 0) {\n    return newList;\n  } else {\n    newList.push({\n      name,\n      path,\n      meta\n    });\n  }\n\n  return newList;\n};\n/**\n * @param {*} access 用户权限数组，如 ['super_admin', 'admin']\n * @param {*} route 路由列表\n */\n\nconst hasAccess = (access, route) => {\n  if (route.meta && route.meta.access) {\n    return hasOneOf(access, route.meta.access);\n  } else {\n    return true;\n  }\n};\n/**\n * 权鉴\n * @param {*} name 即将跳转的路由name\n * @param {*} access 用户权限数组\n * @param {*} routes 路由列表\n * @description 用户是否可跳转到该页\n */\n\n\nexport const canTurnTo = (name, access, routes) => {\n  const routePermissionJudge = list => {\n    return list.some(item => {\n      if (item.children && item.children.length) {\n        return routePermissionJudge(item.children);\n      } else if (item.name === name) {//return hasAccess(access, item)\n      }\n    });\n  };\n\n  return routePermissionJudge(routes);\n};\n/**\n * @param {String} url\n * @description 从URL中解析参数\n */\n\nexport const getParams = url => {\n  let paramObj = {};\n\n  if (url.indexOf('?') != -1) {\n    const keyValueArr = url.split('?')[1].split('&');\n    keyValueArr.forEach(item => {\n      const keyValue = item.split('=');\n      paramObj[keyValue[0]] = keyValue[1];\n    });\n  }\n\n  return paramObj;\n};\n/**\n * @param {Array} list 标签列表\n * @param {String} name 当前关闭的标签的name\n */\n\nexport const getNextRoute = (list, route) => {\n  let res = {};\n\n  if (list.length === 2) {\n    res = getHomeRoute(list);\n  } else {\n    const index = list.findIndex(item => routeEqual(item, route));\n\n    if (index === list.length - 1) {\n      res = list[list.length - 2];\n    } else {\n      res = list[index + 1];\n    }\n  }\n\n  return res;\n};\n/**\n * @param {Number} times 回调函数需要执行的次数\n * @param {Function} callback 回调函数\n */\n\nexport const doCustomTimes = (times, callback) => {\n  let i = -1;\n\n  while (++i < times) {\n    callback(i);\n  }\n};\n/**\n * @param {Object} file 从上传组件得到的文件对象\n * @returns {Promise} resolve参数是解析后的二维数组\n * @description 从Csv文件中解析出表格，解析成二维数组\n */\n\nexport const getArrayFromFile = file => {\n  let nameSplit = file.name.split('.');\n  let format = nameSplit[nameSplit.length - 1];\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n    reader.readAsText(file); // 以文本格式读取\n\n    let arr = [];\n\n    reader.onload = function (evt) {\n      let data = evt.target.result; // 读到的数据\n\n      let pasteData = data.trim();\n      arr = pasteData.split(/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g).map(row => {\n        return row.split('\\t');\n      }).map(item => {\n        return item[0].split(',');\n      });\n\n      if (format === 'csv') {\n        resolve(arr);\n      } else {\n        reject(new Error('[Format Error]:你上传的不是Csv文件'));\n      }\n    };\n  });\n};\n/**\n * @param {Array} array 表格数据二维数组\n * @returns {Object} { columns, tableData }\n * @description 从二维数组中获取表头和表格数据，将第一行作为表头，用于在iView的表格中展示数据\n */\n\nexport const getTableDataFromArray = array => {\n  let columns = [];\n  let tableData = [];\n\n  if (array.length > 1) {\n    let titles = array.shift();\n    columns = titles.map(item => {\n      return {\n        title: item,\n        key: item\n      };\n    });\n    tableData = array.map(item => {\n      let res = {};\n      item.forEach((col, i) => {\n        res[titles[i]] = col;\n      });\n      return res;\n    });\n  }\n\n  return {\n    columns,\n    tableData\n  };\n};\nexport const findNodeUpper = (ele, tag) => {\n  if (ele.parentNode) {\n    if (ele.parentNode.tagName === tag.toUpperCase()) {\n      return ele.parentNode;\n    } else {\n      return findNodeUpper(ele.parentNode, tag);\n    }\n  }\n};\nexport const findNodeUpperByClasses = (ele, classes) => {\n  let parentNode = ele.parentNode;\n\n  if (parentNode) {\n    let classList = parentNode.classList;\n\n    if (classList && classes.every(className => classList.contains(className))) {\n      return parentNode;\n    } else {\n      return findNodeUpperByClasses(parentNode, classes);\n    }\n  }\n};\nexport const findNodeDownward = (ele, tag) => {\n  const tagName = tag.toUpperCase();\n\n  if (ele.childNodes.length) {\n    let i = -1;\n    let len = ele.childNodes.length;\n\n    while (++i < len) {\n      let child = ele.childNodes[i];\n\n      if (child.tagName === tagName) {\n        return child;\n      } else {\n        return findNodeDownward(child, tag);\n      }\n    }\n  }\n};\nexport const showByAccess = (access, canViewAccess) => {\n  return hasOneOf(canViewAccess, access);\n};\n/**\n * @description 根据name/params/query判断两个路由对象是否相等\n * @param {*} route1 路由对象\n * @param {*} route2 路由对象\n */\n\nexport const routeEqual = (route1, route2) => {\n  const params1 = route1.params || {};\n  const params2 = route2.params || {};\n  const query1 = route1.query || {};\n  const query2 = route2.query || {};\n  return route1.name === route2.name && objEqual(params1, params2) && objEqual(query1, query2);\n};\n/**\n * 判断打开的标签列表里是否已存在这个新添加的路由对象\n */\n\nexport const routeHasExist = (tagNavList, routeItem) => {\n  let len = tagNavList.length;\n  let res = false;\n  doCustomTimes(len, index => {\n    if (routeEqual(tagNavList[index], routeItem)) res = true;\n  });\n  return res;\n};\nexport const localSave = (key, value) => {\n  localStorage.setItem(key, value);\n};\nexport const localRead = key => {\n  return localStorage.getItem(key) || '';\n}; // scrollTop animation\n\nexport const scrollTop = (el, from = 0, to, duration = 500, endCallback) => {\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }\n\n  const difference = Math.abs(from - to);\n  const step = Math.ceil(difference / duration * 50);\n\n  const scroll = (start, end, step) => {\n    if (start === end) {\n      endCallback && endCallback();\n      return;\n    }\n\n    let d = start + step > end ? end : start + step;\n\n    if (start > end) {\n      d = start - step < end ? end : start - step;\n    }\n\n    if (el === window) {\n      window.scrollTo(d, d);\n    } else {\n      el.scrollTop = d;\n    }\n\n    window.requestAnimationFrame(() => scroll(d, end, step));\n  };\n\n  scroll(from, to, step);\n};\n/**\n * @description 根据当前跳转的路由设置显示在浏览器标签的title\n * @param {Object} routeItem 路由对象\n * @param {Object} vm Vue实例\n */\n\nexport const setTitle = (routeItem, vm) => {\n  const handledRoute = getRouteTitleHandled(routeItem);\n  const pageTitle = showTitle(handledRoute, vm);\n  const resTitle = pageTitle ? `${title} - ${pageTitle}` : title;\n  window.document.title = resTitle;\n};\n/**\n *  验证url\n * @param str_url\n * @returns {boolean}\n */\n\nexport const isURL = url => {\n  let strRegex = '((https|http|ftp|rtsp|mms)?://)';\n  let re = new RegExp(strRegex);\n  return re.test(url);\n};\n/**\n * 格式化路由菜单\n * @param array\n * @returns {Array}\n */\n\nexport const formatRouters = (array, access) => {\n  let opt = {\n    primaryKey: 'menuId',\n    parentKey: 'parentId',\n    startPid: '0'\n  };\n  let menus = listConvertTree(array, opt);\n  let routers = filterRouter(menus, access, []);\n  const error_404 = {\n    path: '*',\n    name: 'error_404',\n    meta: {\n      hideInMenu: true\n    },\n    component: () => new Promise(resolve => {\n      require.ensure([], require => {\n        resolve(require('@/view/error-page/404.vue'));\n      });\n    })\n  }; // 放到最后\n\n  routers.push(error_404);\n  return routers;\n};\nexport const filterRouter = (array, access, routers) => {\n  let list = array.map(item => {\n    let path = startWith(item.path, '/') ? item.path.substring(1) : item.path;\n    let url = item.scheme + item.path;\n    let router = {\n      // 使用菜单id不使用menuCode防止修改后,刷新后缓存的页面无法找到\n      name: `${item.menuCode}`,\n      path: url,\n      meta: {\n        access: access,\n        hideInMenu: false,\n        title: item.menuName,\n        notCache: true,\n        icon: item.icon || 'md-document',\n        hideInBread: false\n      },\n      children: []\n    };\n\n    if (item.parentId === 0 || item.parentId === '0') {\n      // 根节点\n      router.path = '/';\n\n      router.component = resolve => {\n        require(['_c/main'], resolve);\n      };\n\n      if (!hasChild(item)) {\n        // 非根节点\n        if (item.target === '_blank') {\n          // 新窗口打开,使用meta.href\n          router.meta.href = url;\n        } else {\n          if (item.scheme === '/') {\n            // 内部组件\n            router.component = resolve => {\n              require([`@/view/module/${path}.vue`], resolve);\n            };\n          } else {\n            // 传递iframe路径参数\n            router.path = `/iframe?src=${encodeURIComponent(url)}`; // frame组件\n\n            router.component = resolve => {\n              require([`_c/iframe-view`], resolve);\n            };\n          }\n        }\n      }\n    } else {\n      // 非根节点\n      if (item.target === '_blank') {\n        // 新窗口打开,使用meta.href\n        router.meta.href = url;\n      } else {\n        if (item.scheme === '/') {\n          // 内部组件\n          router.component = resolve => {\n            require([`@/view/module/${path}.vue`], resolve);\n          };\n        } else {\n          // 传递iframe路径参数\n          router.path = `/iframe?src=${encodeURIComponent(url)}`; // frame组件\n\n          router.component = resolve => {\n            require([`_c/iframe-view`], resolve);\n          };\n        }\n      } // 多级菜单\n\n\n      if (hasChild(item)) {\n        router.component = resolve => {\n          require(['_c/parent-view'], resolve);\n        };\n      }\n    }\n\n    if (hasChild(item)) {\n      router.children.push(...filterRouter(item.children, access, []));\n    }\n\n    return router;\n  });\n  routers.push(...list);\n  return routers;\n};\n/**\n * 将普通列表无限递归转换为树\n * @param  {[type]} list       [普通的列表，必须包括 opt.primaryKey 指定的键和 opt.parentKey 指定的键]\n * @param {[type]} opt [配置参数，支持 primaryKey(主键 默认id) parentKey(父级id对应键 默认pid) nameKey(节点标题对应的key 默认name) valueKey(节点值对应的key 默认id) checkedKey(节点是否选中的字段 默认checked，传入数组则判断主键是否在此数组中) startPid(第一层扫描的PID 默认0) currentDept(当前层 默认0) maxDept(最大递归层 默认100) childKey(递归完成后子节点对应键 默认list) deptPrefix(根据层级重复的前缀 默认'')]\n * @return {[type]}            [description]\n */\n\nexport const listConvertTree = (array, opt) => {\n  let obj = {\n    primaryKey: opt.primaryKey || 'id',\n    parentKey: opt.parentKey || 'pid',\n    startPid: opt.startPid || 0,\n    currentDept: opt.currentDept || 0,\n    maxDept: opt.maxDept || 100,\n    childKey: opt.childKey || 'children'\n  };\n  return listToTree(array, obj.startPid, obj.currentDept, obj);\n};\nexport const listConvertGroup = (array, groupKey) => {\n  var map = {},\n      dest = [];\n\n  for (var i = 0; i < array.length; i++) {\n    var ai = array[i];\n\n    if (!map[ai[groupKey]]) {\n      const obj = {};\n      obj[groupKey] = ai[groupKey];\n      obj['children'] = [ai];\n      dest.push(obj);\n      map[ai[groupKey]] = ai;\n    } else {\n      for (var j = 0; j < dest.length; j++) {\n        var dj = dest[j];\n\n        if (dj[groupKey] == ai[groupKey]) {\n          dj['children'].push(ai);\n          break;\n        }\n      }\n    }\n  }\n\n  return dest;\n};\nexport const updateTreeNode = (nodes, primaryKey, value, data) => {\n  const update = list => {\n    return list.some(item => {\n      if (item[primaryKey] && item[primaryKey] === value) {\n        Object.assign(item, data);\n        return true;\n      } else if (item.children && item.children.length > 0) {\n        return update(item.children);\n      } else {\n        return false;\n      }\n    });\n  };\n\n  return update(nodes);\n};\n/**\n *  实际的递归函数，将会变化的参数抽取出来\n * @param list\n * @param startPid\n * @param currentDept\n * @param opt\n * @returns {Array}\n */\n\nexport const listToTree = (array, startPid, currentDept, opt) => {\n  if (opt.maxDept < currentDept) {\n    return [];\n  }\n\n  let child = [];\n\n  if (array && array.length > 0) {\n    child = array.map(item => {\n      // 筛查符合条件的数据（主键 = startPid）\n      if (typeof item[opt.parentKey] !== 'undefined' && item[opt.parentKey] === startPid) {\n        // 满足条件则递归\n        let nextChild = listToTree(array, item[opt.primaryKey], currentDept + 1, opt); // 节点信息保存\n\n        if (nextChild.length > 0) {\n          item['hasChild'] = true;\n          item[opt.childKey] = nextChild;\n        } else {\n          item['hasChild'] = false;\n        }\n\n        return item;\n      }\n    }).filter(item => {\n      return item !== undefined;\n    });\n  }\n\n  return child;\n};\nexport const startWith = (str, prefix) => {\n  let reg = new RegExp('^' + prefix);\n  return reg.test(str);\n};\nexport const endWith = (str, suffix) => {\n  let reg = new RegExp(suffix + '$');\n  return reg.test(str);\n};\n/**\n * 判断终端以及浏览器\n * userAgent string User-Agent信息\n */\n\nexport const readUserAgent = ua => {\n  let data = {\n    terminal: '',\n    browser: '',\n    terminalType: {}\n  };\n  data.terminalType = {\n    trident: ua.indexOf('Trident') > -1,\n    // IE内核\n    presto: ua.indexOf('Presto') > -1,\n    // opera内核\n    webKit: ua.indexOf('AppleWebKit') > -1,\n    // 苹果、谷歌内核\n    gecko: ua.indexOf('Gecko') > -1 && ua.indexOf('KHTML') == -1,\n    // 火狐内核\n    mobile: !!ua.match(/AppleWebKit.*Mobile.*/),\n    // 是否为移动终端\n    ios: !!ua.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/),\n    // ios终端\n    android: ua.indexOf('Android') > -1 || ua.indexOf('Adr') > -1,\n    // android终端\n    iPhone: ua.indexOf('iPhone') > -1,\n    // 是否为iPhone或者QQHD浏览器\n    iPad: ua.indexOf('iPad') > -1,\n    // 是否iPad\n    webApp: ua.indexOf('Safari') == -1,\n    // 是否web应该程序，没有头部与底部\n    weixin: ua.indexOf('MicroMessenger') > -1,\n    // 是否微信 （2015-01-22新增）\n    qq: ua.match(/\\sQQ/i) == ' qq' // 是否QQ\n\n  };\n\n  if (data.terminalType.ios || data.terminalType.iPhone || data.terminalType.iPad) {\n    data.terminal = '苹果';\n  } else if (data.terminalType.android) {\n    data.terminal = '安卓';\n  } else {\n    data.terminal = 'PC';\n  }\n\n  if (/msie/i.test(ua) && !/opera/.test(ua)) {\n    data.browser = 'IE';\n  } else if (/firefox/i.test(ua)) {\n    data.browser = 'Firefox';\n  } else if (/chrome/i.test(ua) && /webkit/i.test(ua) && /mozilla/i.test(ua)) {\n    data.browser = 'Chrome';\n  } else if (/opera/i.test(ua)) {\n    data.browser = 'Opera';\n  } else if (/iPad/i.test(ua)) {\n    data.browser = 'iPad';\n  } else if (/webkit/i.test(ua) && !(/chrome/i.test(ua) && /webkit/i.test(ua) && /mozilla/i.test(ua))) {\n    data.browser = 'Safari';\n  } else {\n    data.browser = '未知';\n  }\n\n  return data;\n};",{"version":3,"sources":["/Users/yanglina/wadmin/src/libs/util.js"],"names":["Cookies","config","forEach","hasOneOf","objEqual","TOKEN_KEY","setToken","token","auto","set","expires","cookieExpires","getToken","get","hasChild","item","children","length","showThisMenuEle","access","meta","getMenuByRouter","list","res","hideInMenu","obj","icon","name","showAlways","href","push","getBreadCrumbList","route","homeRoute","homeItem","routeMetched","matched","some","filter","undefined","hide","map","title","to","path","getRouteTitleHandled","router","showTitle","vm","$config","useI18n","includes","replace","m","str","_","$t","trim","setTagNavListInLocalstorage","localStorage","tagNaveList","JSON","stringify","getTagNavListFromLocalstorage","parse","getHomeRoute","routers","homeName","i","len","getNewTagList","newRoute","newList","findIndex","hasAccess","canTurnTo","routes","routePermissionJudge","getParams","url","paramObj","indexOf","keyValueArr","split","keyValue","getNextRoute","index","routeEqual","doCustomTimes","times","callback","getArrayFromFile","file","nameSplit","format","Promise","resolve","reject","reader","FileReader","readAsText","arr","onload","evt","data","target","result","pasteData","row","Error","getTableDataFromArray","array","columns","tableData","titles","shift","key","col","findNodeUpper","ele","tag","parentNode","tagName","toUpperCase","findNodeUpperByClasses","classes","classList","every","className","contains","findNodeDownward","childNodes","child","showByAccess","canViewAccess","route1","route2","params1","params","params2","query1","query","query2","routeHasExist","tagNavList","routeItem","localSave","value","setItem","localRead","getItem","scrollTop","el","from","duration","endCallback","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","difference","Math","abs","step","ceil","scroll","start","end","d","scrollTo","setTitle","handledRoute","pageTitle","resTitle","document","isURL","strRegex","re","RegExp","test","formatRouters","opt","primaryKey","parentKey","startPid","menus","listConvertTree","filterRouter","error_404","component","startWith","substring","scheme","menuCode","menuName","notCache","hideInBread","parentId","require","encodeURIComponent","currentDept","maxDept","childKey","listToTree","listConvertGroup","groupKey","dest","ai","j","dj","updateTreeNode","nodes","update","Object","assign","nextChild","prefix","reg","endWith","suffix","readUserAgent","ua","terminal","browser","terminalType","trident","presto","webKit","gecko","mobile","match","ios","android","iPhone","iPad","webApp","weixin","qq"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie'\n// cookie保存的天数\nimport config from '@/config'\nimport { forEach, hasOneOf, objEqual } from '@/libs/tools'\n\nexport const TOKEN_KEY = 'token'\n\nexport const setToken = (token, auto) => {\n  if (auto) {\n    Cookies.set(TOKEN_KEY, token, { expires: config.cookieExpires || 1 })\n  } else {\n    Cookies.set(TOKEN_KEY, token)\n  }\n}\n\nexport const getToken = () => {\n  const token = Cookies.get(TOKEN_KEY)\n  if (token && token !== 'undefined') {\n    return token\n  } else {\n    return false\n  }\n}\n\nexport const hasChild = (item) => {\n  return item.children && item.children.length !== 0\n}\n\nconst showThisMenuEle = (item, access) => {\n  if (item.meta && item.meta.access && item.meta.access.length) {\n    if (hasOneOf(item.meta.access, access)) {\n      return true\n    } else {\n      return false\n    }\n  } else {\n    return true\n  }\n}\n\n/**\n * @param {Array} list 通过路由列表得到菜单列表\n * @returns {Array}\n */\nexport const getMenuByRouter = (list, access) => {\n  let res = []\n  forEach(list, item => {\n    if (!item.meta || (item.meta && !item.meta.hideInMenu)) {\n      let obj = {\n        icon: (item.meta && item.meta.icon) || '',\n        name: item.name,\n        meta: item.meta\n      }\n      if ((hasChild(item) || (item.meta && item.meta.showAlways)) && showThisMenuEle(item, access)) {\n        obj.children = getMenuByRouter(item.children, access)\n      }\n      if (item.meta && item.meta.href) obj.href = item.meta.href\n      if (showThisMenuEle(item, access)) res.push(obj)\n    }\n  })\n  return res\n}\n\n/**\n * @param {Array} routeMetched 当前路由metched\n * @returns {Array}\n */\nexport const getBreadCrumbList = (route, homeRoute) => {\n  let homeItem = { ...homeRoute, icon: homeRoute.meta.icon }\n  let routeMetched = route.matched\n  if (routeMetched.some(item => item.name === homeRoute.name)) return [homeItem]\n  let res = routeMetched.filter(item => {\n    return item.meta === undefined || !item.meta.hide\n  }).map(item => {\n    let meta = { ...item.meta }\n    if (meta.title && typeof meta.title === 'function') meta.title = meta.title(route)\n    let obj = {\n      icon: (item.meta && item.meta.icon) || '',\n      name: item.name,\n      meta: meta\n    }\n    return obj\n  })\n  res = res.filter(item => {\n    return !item.meta.hideInMenu\n  })\n  return [{ ...homeItem, to: homeRoute.path }, ...res]\n}\n\nexport const getRouteTitleHandled = (route) => {\n  let router = { ...route }\n  let meta = { ...route.meta }\n  let title = ''\n  if (meta.title) {\n    if (typeof meta.title === 'function') {\n      title = meta.title(router)\n    } else {\n      title = meta.title\n    }\n  }\n  meta.title = title\n  router.meta = meta\n  return router\n}\n\nexport const showTitle = (item, vm) => {\n  let title = item.meta.title\n  if (vm.$config.useI18n) {\n    if (title.includes('{{') && title.includes('}}') && vm.$config.useI18n) {\n      title = title.replace(/({{[\\s\\S]+?}})/, (m, str) => str.replace(/{{([\\s\\S]*)}}/, (m, _) => vm.$t(_.trim())))\n    } else {\n      title = vm.$t(item.name)\n    }\n  } else {\n    title = (item.meta && item.meta.title) || item.name\n  }\n  return title\n}\n\n/**\n * @description 本地存储和获取标签导航列表\n */\nexport const setTagNavListInLocalstorage = list => {\n  localStorage.tagNaveList = JSON.stringify(list)\n}\n/**\n * @returns {Array} 其中的每个元素只包含路由原信息中的name, path, meta三项\n */\nexport const getTagNavListFromLocalstorage = () => {\n  const list = localStorage.tagNaveList\n  return list ? JSON.parse(list) : []\n}\n\n/**\n * @param {Array} routers 路由列表数组\n * @description 用于找到路由列表中name为home的对象\n */\nexport const getHomeRoute = (routers, homeName = 'home') => {\n  let i = -1\n  let len = routers.length\n  let homeRoute = {}\n  while (++i < len) {\n    let item = routers[i]\n    if (item.children && item.children.length) {\n      let res = getHomeRoute(item.children, homeName)\n      if (res.name) return res\n    } else {\n      if (item.name === homeName) homeRoute = item\n    }\n  }\n  return homeRoute\n}\n\n/**\n * @param {*} list 现有标签导航列表\n * @param {*} newRoute 新添加的路由原信息对象\n * @description 如果该newRoute已经存在则不再添加\n */\nexport const getNewTagList = (list, newRoute) => {\n  const { name, path, meta } = newRoute\n  let newList = [...list]\n  if (newList.findIndex(item => item.name === name) >= 0) {\n    return newList\n  } else {\n    newList.push({ name, path, meta })\n  }\n  return newList\n}\n\n/**\n * @param {*} access 用户权限数组，如 ['super_admin', 'admin']\n * @param {*} route 路由列表\n */\nconst hasAccess = (access, route) => {\n  if (route.meta && route.meta.access) {\n    return hasOneOf(access, route.meta.access)\n  } else {\n    return true\n  }\n}\n\n/**\n * 权鉴\n * @param {*} name 即将跳转的路由name\n * @param {*} access 用户权限数组\n * @param {*} routes 路由列表\n * @description 用户是否可跳转到该页\n */\nexport const canTurnTo = (name, access, routes) => {\n  const routePermissionJudge = (list) => {\n    return list.some(item => {\n      if (item.children && item.children.length) {\n        return routePermissionJudge(item.children)\n      } else if (item.name === name) {\n        //return hasAccess(access, item)\n      }\n    })\n  }\n  return routePermissionJudge(routes)\n}\n\n/**\n * @param {String} url\n * @description 从URL中解析参数\n */\nexport const getParams = url => {\n  let paramObj = {}\n  if (url.indexOf('?') != -1) {\n    const keyValueArr = url.split('?')[1].split('&')\n    keyValueArr.forEach(item => {\n      const keyValue = item.split('=')\n      paramObj[keyValue[0]] = keyValue[1]\n    })\n  }\n  return paramObj\n}\n\n/**\n * @param {Array} list 标签列表\n * @param {String} name 当前关闭的标签的name\n */\nexport const getNextRoute = (list, route) => {\n  let res = {}\n  if (list.length === 2) {\n    res = getHomeRoute(list)\n  } else {\n    const index = list.findIndex(item => routeEqual(item, route))\n    if (index === list.length - 1) {\n      res = list[list.length - 2]\n    } else {\n      res = list[index + 1]\n    }\n  }\n  return res\n}\n\n/**\n * @param {Number} times 回调函数需要执行的次数\n * @param {Function} callback 回调函数\n */\nexport const doCustomTimes = (times, callback) => {\n  let i = -1\n  while (++i < times) {\n    callback(i)\n  }\n}\n\n/**\n * @param {Object} file 从上传组件得到的文件对象\n * @returns {Promise} resolve参数是解析后的二维数组\n * @description 从Csv文件中解析出表格，解析成二维数组\n */\nexport const getArrayFromFile = (file) => {\n  let nameSplit = file.name.split('.')\n  let format = nameSplit[nameSplit.length - 1]\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader()\n    reader.readAsText(file) // 以文本格式读取\n    let arr = []\n    reader.onload = function (evt) {\n      let data = evt.target.result // 读到的数据\n      let pasteData = data.trim()\n      arr = pasteData.split((/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g)).map(row => {\n        return row.split('\\t')\n      }).map(item => {\n        return item[0].split(',')\n      })\n      if (format === 'csv') {\n        resolve(arr)\n      } else {\n        reject(new Error('[Format Error]:你上传的不是Csv文件'))\n      }\n    }\n  })\n}\n\n/**\n * @param {Array} array 表格数据二维数组\n * @returns {Object} { columns, tableData }\n * @description 从二维数组中获取表头和表格数据，将第一行作为表头，用于在iView的表格中展示数据\n */\nexport const getTableDataFromArray = (array) => {\n  let columns = []\n  let tableData = []\n  if (array.length > 1) {\n    let titles = array.shift()\n    columns = titles.map(item => {\n      return {\n        title: item,\n        key: item\n      }\n    })\n    tableData = array.map(item => {\n      let res = {}\n      item.forEach((col, i) => {\n        res[titles[i]] = col\n      })\n      return res\n    })\n  }\n  return {\n    columns,\n    tableData\n  }\n}\n\nexport const findNodeUpper = (ele, tag) => {\n  if (ele.parentNode) {\n    if (ele.parentNode.tagName === tag.toUpperCase()) {\n      return ele.parentNode\n    } else {\n      return findNodeUpper(ele.parentNode, tag)\n    }\n  }\n}\n\nexport const findNodeUpperByClasses = (ele, classes) => {\n  let parentNode = ele.parentNode\n  if (parentNode) {\n    let classList = parentNode.classList\n    if (classList && classes.every(className => classList.contains(className))) {\n      return parentNode\n    } else {\n      return findNodeUpperByClasses(parentNode, classes)\n    }\n  }\n}\n\nexport const findNodeDownward = (ele, tag) => {\n  const tagName = tag.toUpperCase()\n  if (ele.childNodes.length) {\n    let i = -1\n    let len = ele.childNodes.length\n    while (++i < len) {\n      let child = ele.childNodes[i]\n      if (child.tagName === tagName) {\n        return child\n      } else {\n        return findNodeDownward(child, tag)\n      }\n    }\n  }\n}\n\nexport const showByAccess = (access, canViewAccess) => {\n  return hasOneOf(canViewAccess, access)\n}\n\n/**\n * @description 根据name/params/query判断两个路由对象是否相等\n * @param {*} route1 路由对象\n * @param {*} route2 路由对象\n */\nexport const routeEqual = (route1, route2) => {\n  const params1 = route1.params || {}\n  const params2 = route2.params || {}\n  const query1 = route1.query || {}\n  const query2 = route2.query || {}\n  return (route1.name === route2.name) && objEqual(params1, params2) && objEqual(query1, query2)\n}\n\n/**\n * 判断打开的标签列表里是否已存在这个新添加的路由对象\n */\nexport const routeHasExist = (tagNavList, routeItem) => {\n  let len = tagNavList.length\n  let res = false\n  doCustomTimes(len, (index) => {\n    if (routeEqual(tagNavList[index], routeItem)) res = true\n  })\n  return res\n}\n\nexport const localSave = (key, value) => {\n  localStorage.setItem(key, value)\n}\n\nexport const localRead = (key) => {\n  return localStorage.getItem(key) || ''\n}\n\n// scrollTop animation\nexport const scrollTop = (el, from = 0, to, duration = 500, endCallback) => {\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = (\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function (callback) {\n        return window.setTimeout(callback, 1000 / 60)\n      }\n    )\n  }\n  const difference = Math.abs(from - to)\n  const step = Math.ceil(difference / duration * 50)\n\n  const scroll = (start, end, step) => {\n    if (start === end) {\n      endCallback && endCallback()\n      return\n    }\n\n    let d = (start + step > end) ? end : start + step\n    if (start > end) {\n      d = (start - step < end) ? end : start - step\n    }\n\n    if (el === window) {\n      window.scrollTo(d, d)\n    } else {\n      el.scrollTop = d\n    }\n    window.requestAnimationFrame(() => scroll(d, end, step))\n  }\n  scroll(from, to, step)\n}\n\n/**\n * @description 根据当前跳转的路由设置显示在浏览器标签的title\n * @param {Object} routeItem 路由对象\n * @param {Object} vm Vue实例\n */\nexport const setTitle = (routeItem, vm) => {\n  const handledRoute = getRouteTitleHandled(routeItem)\n  const pageTitle = showTitle(handledRoute, vm)\n  const resTitle = pageTitle ? `${title} - ${pageTitle}` : title\n  window.document.title = resTitle\n}\n\n/**\n *  验证url\n * @param str_url\n * @returns {boolean}\n */\nexport const isURL = (url) => {\n  let strRegex = '((https|http|ftp|rtsp|mms)?://)'\n  let re = new RegExp(strRegex)\n  return re.test(url)\n}\n\n/**\n * 格式化路由菜单\n * @param array\n * @returns {Array}\n */\nexport const formatRouters = (array, access) => {\n  let opt = {\n    primaryKey: 'menuId',\n    parentKey: 'parentId',\n    startPid: '0'\n  }\n  let menus = listConvertTree(array, opt)\n  let routers = filterRouter(menus, access, [])\n  const error_404 = {\n    path: '*',\n    name: 'error_404',\n    meta: {\n      hideInMenu: true\n    },\n    component: () => import('@/view/error-page/404.vue')\n  }\n  // 放到最后\n  routers.push(error_404)\n  return routers\n}\n\nexport const filterRouter = (array, access, routers) => {\n  let list = array.map(item => {\n    let path = startWith(item.path, '/') ? item.path.substring(1) : item.path\n    let url = item.scheme + item.path\n    let router = {\n      // 使用菜单id不使用menuCode防止修改后,刷新后缓存的页面无法找到\n      name: `${item.menuCode}`,\n      path: url,\n      meta: {\n        access: access,\n        hideInMenu: false,\n        title: item.menuName,\n        notCache: true,\n        icon: item.icon || 'md-document',\n        hideInBread: false\n      },\n      children: []\n    }\n    if (item.parentId === 0 || item.parentId === '0') {\n      // 根节点\n      router.path = '/'\n      router.component = (resolve) => {\n        require(['_c/main'], resolve)\n      }\n      if (!hasChild(item)) {\n        // 非根节点\n        if (item.target === '_blank') {\n          // 新窗口打开,使用meta.href\n          router.meta.href = url\n        } else {\n          if (item.scheme === '/') {\n            // 内部组件\n            router.component = (resolve) => {\n              require([`@/view/module/${path}.vue`], resolve)\n            }\n          } else {\n            // 传递iframe路径参数\n            router.path = `/iframe?src=${encodeURIComponent(url)}`\n            // frame组件\n            router.component = (resolve) => {\n              require([`_c/iframe-view`], resolve)\n            }\n          }\n        }\n      }\n    } else {\n      // 非根节点\n      if (item.target === '_blank') {\n        // 新窗口打开,使用meta.href\n        router.meta.href = url\n      } else {\n        if (item.scheme === '/') {\n          // 内部组件\n          router.component = (resolve) => {\n            require([`@/view/module/${path}.vue`], resolve)\n          }\n        } else {\n          // 传递iframe路径参数\n          router.path = `/iframe?src=${encodeURIComponent(url)}`\n          // frame组件\n          router.component = (resolve) => {\n            require([`_c/iframe-view`], resolve)\n          }\n        }\n      }\n      // 多级菜单\n      if (hasChild(item)) {\n        router.component = (resolve) => {\n          require(['_c/parent-view'], resolve)\n        }\n      }\n    }\n    if (hasChild(item)) {\n      router.children.push(...filterRouter(item.children, access, []))\n    }\n    return router\n  }\n  )\n  routers.push(...list)\n  return routers\n}\n\n/**\n * 将普通列表无限递归转换为树\n * @param  {[type]} list       [普通的列表，必须包括 opt.primaryKey 指定的键和 opt.parentKey 指定的键]\n * @param {[type]} opt [配置参数，支持 primaryKey(主键 默认id) parentKey(父级id对应键 默认pid) nameKey(节点标题对应的key 默认name) valueKey(节点值对应的key 默认id) checkedKey(节点是否选中的字段 默认checked，传入数组则判断主键是否在此数组中) startPid(第一层扫描的PID 默认0) currentDept(当前层 默认0) maxDept(最大递归层 默认100) childKey(递归完成后子节点对应键 默认list) deptPrefix(根据层级重复的前缀 默认'')]\n * @return {[type]}            [description]\n */\nexport const listConvertTree = (array, opt) => {\n  let obj = {\n    primaryKey: opt.primaryKey || 'id',\n    parentKey: opt.parentKey || 'pid',\n    startPid: opt.startPid || 0,\n    currentDept: opt.currentDept || 0,\n    maxDept: opt.maxDept || 100,\n    childKey: opt.childKey || 'children'\n  }\n  return listToTree(array, obj.startPid, obj.currentDept, obj)\n}\n\nexport const listConvertGroup = (array, groupKey) => {\n  var map = {},\n    dest = []\n  for (var i = 0; i < array.length; i++) {\n    var ai = array[i]\n    if (!map[ai[groupKey]]) {\n      const obj = {}\n      obj[groupKey] = ai[groupKey]\n      obj['children'] = [ai]\n      dest.push(obj)\n      map[ai[groupKey]] = ai\n    } else {\n      for (var j = 0; j < dest.length; j++) {\n        var dj = dest[j]\n        if (dj[groupKey] == ai[groupKey]) {\n          dj['children'].push(ai)\n          break\n        }\n      }\n    }\n  }\n  return dest\n}\n\nexport const updateTreeNode = (nodes, primaryKey, value, data) => {\n  const update = (list) => {\n    return list.some(item => {\n      if (item[primaryKey] && item[primaryKey] === value) {\n        Object.assign(item, data)\n        return true\n      } else if (item.children && item.children.length > 0) {\n        return update(item.children)\n      } else {\n        return false\n      }\n    })\n  }\n  return update(nodes)\n}\n\n/**\n *  实际的递归函数，将会变化的参数抽取出来\n * @param list\n * @param startPid\n * @param currentDept\n * @param opt\n * @returns {Array}\n */\nexport const listToTree = (array, startPid, currentDept, opt) => {\n  if (opt.maxDept < currentDept) {\n    return []\n  }\n  let child = []\n  if (array && array.length > 0) {\n    child = array.map(item => {\n      // 筛查符合条件的数据（主键 = startPid）\n      if (typeof item[opt.parentKey] !== 'undefined' && item[opt.parentKey] === startPid) {\n        // 满足条件则递归\n        let nextChild = listToTree(array, item[opt.primaryKey], currentDept + 1, opt)\n        // 节点信息保存\n        if (nextChild.length > 0) {\n          item['hasChild'] = true\n          item[opt.childKey] = nextChild\n        } else {\n          item['hasChild'] = false\n        }\n        return item\n      }\n    }).filter(item => {\n      return item !== undefined\n    })\n  }\n  return child\n}\n\nexport const startWith = (str, prefix) => {\n  let reg = new RegExp('^' + prefix)\n  return reg.test(str)\n}\n\nexport const endWith = (str, suffix) => {\n  let reg = new RegExp(suffix + '$')\n  return reg.test(str)\n}\n\n/**\n * 判断终端以及浏览器\n * userAgent string User-Agent信息\n */\nexport const readUserAgent = (ua) => {\n  let data = {\n    terminal: '',\n    browser: '',\n    terminalType: {}\n  }\n  data.terminalType = {\n    trident: ua.indexOf('Trident') > -1, // IE内核\n    presto: ua.indexOf('Presto') > -1, // opera内核\n    webKit: ua.indexOf('AppleWebKit') > -1, // 苹果、谷歌内核\n    gecko: ua.indexOf('Gecko') > -1 && ua.indexOf('KHTML') == -1, // 火狐内核\n    mobile: !!ua.match(/AppleWebKit.*Mobile.*/), // 是否为移动终端\n    ios: !!ua.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/), // ios终端\n    android: ua.indexOf('Android') > -1 || ua.indexOf('Adr') > -1, // android终端\n    iPhone: ua.indexOf('iPhone') > -1, // 是否为iPhone或者QQHD浏览器\n    iPad: ua.indexOf('iPad') > -1, // 是否iPad\n    webApp: ua.indexOf('Safari') == -1, // 是否web应该程序，没有头部与底部\n    weixin: ua.indexOf('MicroMessenger') > -1, // 是否微信 （2015-01-22新增）\n    qq: ua.match(/\\sQQ/i) == ' qq' // 是否QQ\n  }\n  if (data.terminalType.ios || data.terminalType.iPhone || data.terminalType.iPad) {\n    data.terminal = '苹果'\n  } else if (data.terminalType.android) {\n    data.terminal = '安卓'\n  } else {\n    data.terminal = 'PC'\n  }\n  if (/msie/i.test(ua) && !/opera/.test(ua)) {\n    data.browser = 'IE'\n  } else if (/firefox/i.test(ua)) {\n    data.browser = 'Firefox'\n  } else if (/chrome/i.test(ua) && /webkit/i.test(ua) && /mozilla/i.test(ua)) {\n    data.browser = 'Chrome'\n  } else if (/opera/i.test(ua)) {\n    data.browser = 'Opera'\n  } else if (/iPad/i.test(ua)) {\n    data.browser = 'iPad'\n  } else if (/webkit/i.test(ua) && !(/chrome/i.test(ua) && /webkit/i.test(ua) && /mozilla/i.test(ua))) {\n    data.browser = 'Safari'\n  } else {\n    data.browser = '未知'\n  }\n  return data\n}\n"]}]}