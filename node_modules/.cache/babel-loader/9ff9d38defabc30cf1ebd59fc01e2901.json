{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/system/role/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/system/role/index.vue","mtime":1577606509721},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { deleteRole, deleteBatch, getUserInfo, getRoleInfo, getRoleList, permissionSave, getPermission, roleSave, roleSelectList, updateRole } from '@/api/role';\nimport { getMenuAllList } from '@/api/menu';\nexport default {\n  name: 'SystemRole',\n\n  data() {\n    const validateEn = (rule, value, callback) => {\n      let reg = /^[_a-zA-Z0-9]+$/;\n\n      if (value === '') {\n        callback(new Error('角色标识不能为空'));\n      } else if (value !== '' && !reg.test(value)) {\n        callback(new Error('只允许字母、数字、下划线'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      userInfo: JSON.parse(window.localStorage.getItem('userInfo')),\n      titles: ['选择接口', '已选择接口'],\n      listStyle: {\n        width: '240px',\n        height: '500px'\n      },\n      loading: false,\n      modalVisible: false,\n      modalTitle: '',\n      saving: false,\n      current: 'form1',\n      forms: ['form1', 'form2', 'form3'],\n      selectApis: [],\n      selectMenus: [//{id: 1, menuName: 'KKKKey'},\n        //{id: 2, menuName: '斤斤计较'}\n      ],\n      selectUsers: [],\n      pageInfo: {\n        total: 0,\n        page: 1,\n        size: 10\n      },\n      formItemRules: {\n        roleCode: [{\n          required: true,\n          validator: '请输入角色标识',\n          trigger: 'blur'\n        }],\n        roleName: [{\n          required: true,\n          message: '角色名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      actionList: [//{actionDesc: 'aaa',authorityId: 1,actionName: '哈哈哈哈'},\n        //{actionDesc: 'aaa',authorityId: 2,actionName: '呵呵呵呵呵'}\n      ],\n      formRole: {\n        roleCode: null,\n        roleName: null,\n        roleType: 1,\n        //默认后台角色\n        description: null,\n        operateUserId: null,\n        userId: null\n      },\n      formItem: {\n        id: null,\n        roleCode: null,\n        roleName: null,\n        roleType: null,\n        path: '',\n        status: 1,\n        sort: '',\n        priority: 0,\n        description: '',\n        grantMenus: [],\n        grantActions: [],\n        expireTime: '',\n        isExpired: false,\n        userIds: []\n      },\n      columns: [{\n        type: 'selection',\n        width: 60,\n        align: 'center'\n      }, {\n        title: 'id',\n        key: 'id',\n        width: 300\n      }, {\n        title: '角色名称',\n        key: 'roleName',\n        width: 300\n      }, {\n        title: '角色标识',\n        key: 'roleCode'\n      }, {\n        title: '描述',\n        key: 'description',\n        width: 200\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        width: 150\n      }],\n      columns2: [{\n        title: '菜单',\n        key: 'menuName',\n        minWidth: '250px'\n      }, {\n        title: '操作',\n        type: 'template',\n        template: 'operation',\n        minWidth: '200px'\n      }],\n      data: [],\n      selectedRowKeys: []\n    };\n  },\n\n  methods: {\n    handleModal(data) {\n      if (data) {\n        this.formRole = Object.assign({}, this.formRole, data);\n      }\n\n      if (this.current === this.forms[0]) {\n        this.modalTitle = data ? '编辑角色 - ' + data.roleName : '添加角色';\n        this.modalVisible = true;\n      }\n\n      if (this.current === this.forms[1]) {\n        this.modalTitle = data ? '分配权限 - ' + data.roleName : '分配权限';\n        this.handleLoadRoleGranted();\n      }\n\n      if (this.current === this.forms[2]) {\n        this.modalTitle = data ? '角色成员 - ' + data.roleName : '角色成员';\n        this.handleLoadRoleUsers(this.formItem.roleId);\n      }\n\n      this.formItem.status = this.formItem.status + '';\n    },\n\n    handleResetForm(form) {\n      this.$refs[form].resetFields();\n    },\n\n    handleTabClick(name) {\n      this.current = name;\n      this.handleModal();\n    },\n\n    handleReset() {\n      const newData = {\n        roleCode: null,\n        roleName: null,\n        roleType: 1,\n        description: null,\n        operateUserId: null,\n        userId: null,\n        priority: 0,\n        roleDesc: '',\n        grantMenus: [],\n        grantActions: [],\n        expireTime: '',\n        isExpired: false,\n        userIds: []\n      };\n      this.formItem = newData; //重置验证\n\n      this.forms.map(form => {\n        this.handleResetForm(form);\n      });\n      this.current = this.forms[0];\n      this.formItem.grantMenus = [];\n      this.formItem.grantActions = [];\n      this.modalVisible = false;\n      this.saving = false;\n    },\n\n    deleteRole(row) {\n      //删除\n      deleteRole(row.id).then(res => {\n        if (res.code === 200) {\n          this.$Message.success(res.message);\n          this.handleSearch();\n        }\n      });\n    },\n\n    handleSelectRow() {\n      this.selectedRowKeys = this.$refs.selection.getSelection();\n    },\n\n    deleteAllSelected() {\n      //批量删除\n      let arr = [];\n\n      if (this.selectedRowKeys.length === 0) {\n        this.$Message.warning('请选择要删除的角色');\n        return false;\n      }\n\n      this.selectedRowKeys.map(item => {\n        arr.push(item.id);\n      });\n      deleteBatch({\n        ids: arr\n      }).then(rs => {\n        if (rs.code === 200) {\n          this.$Message.warning(rs.message);\n          this.handleSearch();\n        }\n      });\n    },\n\n    handleSubmit() {\n      if (this.current === this.forms[0]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n\n            if (!this.formRole.id) {\n              const params = Object.assign(this.formRole, {\n                //userId: this.userInfo.id,\n                operateUserId: this.userInfo.id\n              });\n              roleSave(this.formRole).then(res => {\n                if (res.code === 200) {\n                  this.$Message.success(res.message);\n                  this.handleReset();\n                }\n\n                this.handleSearch();\n              }).finally(() => {\n                this.saving = false;\n              });\n            } else {\n              updateRole(this.formRole).then(res => {\n                if (res.code === 200) {\n                  this.$Message.success(res.message);\n                  this.handleReset();\n                }\n\n                this.handleSearch();\n              }).finally(() => {\n                this.saving = false;\n              });\n            }\n          }\n        });\n      }\n\n      if (this.current === this.forms[1]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n            const params = {\n              id: this.formItem.grantActions.join(''),\n              //角色id\n              ids: this.formItem.grantMenus\n            };\n            console.log(params);\n            permissionSave(params).then(res => {\n              if (res.code === 200) {\n                this.$Message.success('授权成功');\n                this.handleReset();\n              }\n\n              this.handleSearch();\n            }).finally(() => {\n              this.saving = false;\n            });\n          }\n        });\n      }\n\n      if (this.current === this.forms[2]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n            addRoleUsers({\n              roleId: this.formItem.roleId,\n              userIds: this.formItem.userIds\n            }).then(res => {\n              if (res.code === 0) {\n                this.$Message.success('保存成功');\n                this.handleReset();\n              }\n\n              this.handleSearch();\n            }).finally(() => {\n              this.saving = false;\n            });\n          }\n        });\n      }\n    },\n\n    handleSearch() {\n      this.loading = true;\n      getRoleList(this.pageInfo).then(res => {\n        if (res.code === 200) {\n          this.data = res.data.records;\n          this.pageInfo.total = parseInt(res.data.total);\n        }\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n\n    handlePage(current) {\n      this.pageInfo.page = current;\n      this.handleSearch();\n    },\n\n    handlePageSize(size) {\n      this.pageInfo.limit = size;\n      this.handleSearch();\n    },\n\n    handleRemove(data) {\n      this.$Modal.confirm({\n        title: '确定删除吗？',\n        onOk: () => {\n          removeRole(data.roleId).then(res => {\n            if (res.code === 0) {\n              this.pageInfo.page = 1;\n              this.$Message.success('删除成功');\n            }\n\n            this.handleSearch();\n          });\n        }\n      });\n    },\n\n    getCheckedAuthorities() {\n      const menus = this.$refs['tree'].getCheckedProp('authorityId');\n      return menus.concat(this.formItem.grantActions);\n    },\n\n    handleLoadRoleGranted() {\n      //if (!roleId) {\n      // return\n      //}\n      const that = this;\n      const p1 = getMenuAllList();\n      const p2 = roleSelectList();\n      Promise.all([p1, p2]).then(function (values) {\n        let res1 = values[0];\n        let res2 = values[1];\n\n        if (res1.code === 200) {\n          /*let opt = {\n            primaryKey: 'menuId',\n            parentKey: 'parentId',\n            startPid: '0'\n          }*/\n          let menus = [];\n          /*if (res2.code === 200) {\n            let menus = []\n            let actions = []\n            console.log(res2.data)\n            res2.data.records.map(item => {\n              // 菜单权限\n              if (item.authority.indexOf('MENU_') != -1 && !menus.includes(item.id)) {\n                menus.push(item.id)\n              }\n              // 操作权限\n              if (item.authority.indexOf('ACTION_') != -1 && !actions.includes(item.id)) {\n                actions.push(item.id)\n              }\n            })\n            that.formItem.grantMenus = menus;\n            that.formItem.grantActions = actions;\n          }*/\n\n          res1.data.records.map(item => {\n            menus.push(item.id);\n          });\n          that.formItem.grantMenus = menus;\n          res1.data.records.map(item => {\n            // 菜单选中\n            if (that.formItem.grantMenus.includes(item.id)) {\n              item._isChecked = true;\n            }\n          });\n          that.selectMenus = res1.data.records; //listConvertTree(res1.data.records, opt)\n\n          that.actionList = res2.data;\n        }\n\n        that.modalVisible = true;\n      });\n    },\n\n    handleLoadRoleUsers(roleId) {\n      if (!roleId) {\n        return;\n      }\n\n      const that = this;\n      const p1 = getAllUsers();\n      const p2 = getRoleUsers(roleId);\n      Promise.all([p1, p2]).then(function (values) {\n        let res1 = values[0];\n        let res2 = values[1];\n\n        if (res1.code === 0) {\n          res1.data.map(item => {\n            item.key = item.userId;\n            item.label = `${item.userName}(${item.nickName})`;\n          });\n          that.selectUsers = res1.data;\n        }\n\n        if (res2.code === 0) {\n          let userIds = [];\n          res2.data.map(item => {\n            if (!userIds.includes(item.userId)) {\n              userIds.push(item.userId);\n            }\n          });\n          that.formItem.userIds = userIds;\n        }\n\n        that.modalVisible = true;\n      });\n    },\n\n    transferRender(item) {\n      return `<span  title=\"${item.label}\">${item.label}</span>`;\n    },\n\n    handleTransferChange(newTargetKeys, direction, moveKeys) {\n      this.formItem.userIds = newTargetKeys;\n    },\n\n    handleClick(name, row) {\n      switch (name) {\n        case 'remove':\n          this.handleRemove(row);\n          break;\n      }\n    }\n\n  },\n  mounted: function () {\n    this.handleSearch(); //console.log(this.actionList)\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Card shadow>\n      <Form ref=\"searchForm\"\n        :model=\"pageInfo\"\n        inline\n        :label-width=\"80\"\n      >\n        <FormItem label=\"角色名称\" prop=\"roleName\">\n          <Input type=\"text\" v-model=\"pageInfo.roleName\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"角色编码\" prop=\"roleCode\">\n          <Input type=\"text\" v-model=\"pageInfo.roleCode\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" @click=\"handleSearch(1)\">查询</Button>&nbsp;\n          <Button @click=\"handleResetForm('searchForm')\">重置</Button>\n        </FormItem>\n      </Form>\n      <div class=\"search-con search-con-top\">\n          <Button  class=\"search-btn\" type=\"primary\" @click=\"handleModal()\">\n            添加\n          </Button>\n          <!--<Button  class=\"search-btn\" type=\"primary\" @click=\"deleteAllSelected()\">\n            批量删除\n          </Button>-->\n      </div>\n      <Table border :columns=\"columns\" :data=\"data\" :loading=\"loading\" ref=\"selection\" @on-selection-change=\"handleSelectRow()\">\n        <template slot=\"status\" slot-scope=\"{ row }\">\n          <Badge v-if=\"row.status===1\" status=\"success\" text=\"启用\"/>\n          <Badge v-else=\"\" status=\"error\" text=\"禁用\"/>\n        </template>\n        <template slot=\"action\" slot-scope=\"{ row }\">\n          <a @click=\"handleModal(row)\">编辑</a>&nbsp;\n          <a @click=\"deleteRole(row)\">删除</a>&nbsp;\n        </template>\n      </Table>\n      <Page transfer :total=\"pageInfo.total\" :current=\"pageInfo.page\" :page-size=\"pageInfo.limit\" show-elevator\n            show-sizer\n            show-total\n            @on-change=\"handlePage\" @on-page-size-change='handlePageSize'></Page>\n    </Card>\n\n    <Modal\n      v-model=\"modalVisible\"\n      :title=\"modalTitle\"\n      width=\"50\"\n      @on-cancel=\"handleReset\"\n    >\n      <div>\n        <Tabs @on-click=\"handleTabClick\" :value=\"current\">\n          <TabPane label=\"角色信息\" name=\"form1\">\n            <Form v-show=\"current == 'form1'\" ref=\"form1\" :model=\"formRole\" :rules=\"formItemRules\" :label-width=\"100\">\n              <FormItem label=\"角色编码\" prop=\"roleCode\">\n                <Input type=\"number\" v-model=\"formRole.roleCode\" placeholder=\"请输入内容\" />\n              </FormItem>\n              <FormItem label=\"角色名称\" prop=\"roleName\">\n                <Input v-model=\"formRole.roleName\" placeholder=\"请输入内容\" />\n              </FormItem>\n              <FormItem label=\"描述\">\n                <Input v-model=\"formRole.description\" type=\"textarea\" placeholder=\"请输入内容\" />\n              </FormItem>\n            </Form>\n          </TabPane>\n          <TabPane label=\"分配权限\" name=\"form2\">\n            <Form v-show=\"current == 'form2'\" ref=\"form2\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n              <FormItem label=\"功能菜单\" prop=\"grantMenus\">\n                <tree-table\n                  ref=\"tree\"\n                  style=\"max-height:480px;overflow: auto\"\n                  expand-key=\"menuName\"\n                  :expand-type=\"false\"\n                  :is-fold=\"false\"\n                  :tree-type=\"true\"\n                  :selectable=\"true\"\n                  :columns=\"columns2\"\n                  @on-selection-change=\"handleSelectRow()\"\n                  :data=\"selectMenus\">\n                  <template slot=\"operation\">\n                    <CheckboxGroup v-model=\"formItem.grantActions\">\n                      <Checkbox v-for=\"(item, index) in actionList\" :label=\"item.id\" :key=\"index\">\n                        <span :title=\"item.roleName\">{{item.roleName}}</span>\n                      </Checkbox>\n                    </CheckboxGroup>\n                  </template>\n                </tree-table>\n              </FormItem>\n            </Form>\n          </TabPane>\n          <TabPane label=\"角色成员\" name=\"form3\">\n            <Form v-show=\"current == 'form3'\" ref=\"form3\" :model=\"formItem\" :rules=\"formItemRules\">\n              <FormItem prop=\"authorities\">\n                <Transfer\n                  :data=\"selectUsers\"\n                  :list-style=\"{width: '45%',height: '480px'}\"\n                  :titles=\"['选择用户', '已选择用户']\"\n                  :render-format=\"transferRender\"\n                  :target-keys=\"formItem.userIds\"\n                  @on-change=\"handleTransferChange\"\n                  filterable>\n                </Transfer>\n              </FormItem>\n            </Form>\n          </TabPane>\n        </Tabs>\n        <div class=\"drawer-footer\">\n          <Button type=\"default\" @click=\"handleReset\">取消</Button>&nbsp;\n          <Button type=\"primary\" @click=\"handleSubmit\" :loading=\"saving\">保存</Button>\n        </div>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\n  import {\n    deleteRole,\n    deleteBatch,\n    getUserInfo,\n    getRoleInfo,\n    getRoleList,\n    permissionSave,\n    getPermission,\n    roleSave,\n    roleSelectList,\n    updateRole\n  } from '@/api/role'\n   import {\n    getMenuAllList,\n  } from '@/api/menu'\n  export default {\n    name: 'SystemRole',\n    data () {\n      const validateEn = (rule, value, callback) => {\n        let reg = /^[_a-zA-Z0-9]+$/\n        if (value === '') {\n          callback(new Error('角色标识不能为空'))\n        } else if (value !== '' && !reg.test(value)) {\n          callback(new Error('只允许字母、数字、下划线'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        userInfo: JSON.parse(window.localStorage.getItem('userInfo')),\n        titles: ['选择接口', '已选择接口'],\n        listStyle: {\n          width: '240px',\n          height: '500px'\n        },\n        loading: false,\n        modalVisible: false,\n        modalTitle: '',\n        saving: false,\n        current: 'form1',\n        forms: [\n          'form1',\n          'form2',\n          'form3'\n        ],\n        selectApis: [],\n        selectMenus: [\n          //{id: 1, menuName: 'KKKKey'},\n          //{id: 2, menuName: '斤斤计较'}\n        ],\n        selectUsers: [],\n        pageInfo: {\n          total: 0,\n          page: 1,\n          size: 10\n        },\n        formItemRules: {\n          roleCode: [\n            {required: true, validator: '请输入角色标识', trigger: 'blur'}\n          ],\n          roleName: [\n            {required: true, message: '角色名称不能为空', trigger: 'blur'}\n          ]\n        },\n        actionList: [\n          //{actionDesc: 'aaa',authorityId: 1,actionName: '哈哈哈哈'},\n          //{actionDesc: 'aaa',authorityId: 2,actionName: '呵呵呵呵呵'}\n        ],\n        formRole: {\n          roleCode: null,\n          roleName: null,\n          roleType: 1, //默认后台角色\n          description: null,\n          operateUserId: null,\n          userId: null\n        },\n        formItem: {\n          id: null,\n          roleCode: null,\n          roleName: null,\n          roleType: null,\n          path: '',\n          status: 1,\n          sort: '',\n          priority: 0,\n          description: '',\n          grantMenus: [],\n          grantActions: [],\n          expireTime: '',\n          isExpired: false,\n          userIds: []\n        },\n        columns: [\n          {\n            type: 'selection',\n            width: 60,\n            align: 'center'\n          },\n          {\n            title: 'id',\n            key: 'id',\n            width: 300,\n          },\n          {\n            title: '角色名称',\n            key: 'roleName',\n            width: 300,\n          },\n          {\n            title: '角色标识',\n            key: 'roleCode'\n          },\n          {\n            title: '描述',\n            key: 'description',\n            width: 200\n          },\n          {\n            title: '操作',\n            slot: 'action',\n            fixed: 'right',\n            width: 150\n          }\n        ],\n        columns2: [\n          {\n            title: '菜单',\n            key: 'menuName',\n            minWidth: '250px',\n          },\n          {\n            title: '操作',\n            type: 'template',\n            template: 'operation',\n            minWidth: '200px'\n          }\n        ],\n        data: [],\n        selectedRowKeys: []\n      }\n    },\n    methods: {\n      handleModal (data) {\n        if (data) {\n          this.formRole = Object.assign({}, this.formRole, data)\n        }\n        if (this.current === this.forms[0]) {\n          this.modalTitle = data ? '编辑角色 - ' + data.roleName : '添加角色'\n          this.modalVisible = true\n        }\n        if (this.current === this.forms[1]) {\n          this.modalTitle = data ? '分配权限 - ' + data.roleName : '分配权限'\n          this.handleLoadRoleGranted()\n        }\n        if (this.current === this.forms[2]) {\n          this.modalTitle = data ? '角色成员 - ' + data.roleName : '角色成员'\n          this.handleLoadRoleUsers(this.formItem.roleId)\n        }\n        this.formItem.status = this.formItem.status + ''\n      },\n      handleResetForm (form) {\n        this.$refs[form].resetFields()\n      },\n      handleTabClick(name){\n        this.current = name\n        this.handleModal();\n      },\n      handleReset () {\n        const newData = {\n          roleCode: null,\n          roleName: null,\n          roleType: 1,\n          description: null,\n          operateUserId: null,\n          userId: null,\n          priority: 0,\n          roleDesc: '',\n          grantMenus: [],\n          grantActions: [],\n          expireTime: '',\n          isExpired: false,\n          userIds: []\n        }\n        this.formItem = newData\n        //重置验证\n        this.forms.map(form => {\n          this.handleResetForm(form)\n        })\n        this.current = this.forms[0]\n        this.formItem.grantMenus = []\n        this.formItem.grantActions = []\n        this.modalVisible = false\n        this.saving = false\n      },\n      deleteRole(row) {\n        //删除\n        deleteRole(row.id).then(res => {\n          if(res.code === 200) {\n            this.$Message.success(res.message)\n            this.handleSearch()\n          }\n        })\n      },\n      handleSelectRow() {\n        this.selectedRowKeys = this.$refs.selection.getSelection()\n      },\n      deleteAllSelected () {\n        //批量删除\n        let arr = []\n        if (this.selectedRowKeys.length === 0) {\n          this.$Message.warning('请选择要删除的角色')\n          return false\n        }\n        this.selectedRowKeys.map(item => {\n          arr.push(item.id)\n        })\n        deleteBatch({ids: arr}).then(rs => {\n          if (rs.code === 200) {\n            this.$Message.warning(rs.message)\n            this.handleSearch()\n          }\n        })\n      },\n      handleSubmit () {\n        if (this.current === this.forms[0]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              if (!this.formRole.id) {\n                const params = Object.assign(this.formRole, {\n                  //userId: this.userInfo.id,\n                  operateUserId: this.userInfo.id\n                })\n                roleSave(this.formRole).then(res => {\n                  if (res.code === 200) {\n                    this.$Message.success(res.message)\n                    this.handleReset()\n                  }\n                  this.handleSearch()\n                }).finally(() => {\n                  this.saving = false\n                })\n              } else {\n                updateRole(this.formRole).then(res => {\n                  if (res.code === 200) {\n                    this.$Message.success(res.message)\n                    this.handleReset()\n                  }\n                  this.handleSearch()\n                }).finally(() => {\n                  this.saving = false\n                })\n              }\n            }\n          })\n        }\n\n        if (this.current === this.forms[1]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              const params = {\n                id: this.formItem.grantActions.join(''), //角色id\n                ids: this.formItem.grantMenus\n              }\n              console.log(params)\n              permissionSave(params).then(res => {\n                if (res.code === 200) {\n                  this.$Message.success('授权成功')\n                  this.handleReset()\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          })\n        }\n\n        if (this.current === this.forms[2]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              addRoleUsers({\n                roleId: this.formItem.roleId,\n                userIds: this.formItem.userIds\n              }).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                  this.handleReset()\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          })\n        }\n      },\n      handleSearch () {\n        this.loading = true\n        getRoleList(this.pageInfo).then(res => {\n          if (res.code === 200) {\n            this.data = res.data.records\n            this.pageInfo.total = parseInt(res.data.total)\n          }\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      handlePage (current) {\n        this.pageInfo.page = current\n        this.handleSearch()\n      },\n      handlePageSize (size) {\n        this.pageInfo.limit = size\n        this.handleSearch()\n      },\n      handleRemove (data) {\n        this.$Modal.confirm({\n          title: '确定删除吗？',\n          onOk: () => {\n            removeRole(data.roleId).then(res => {\n              if (res.code === 0) {\n                this.pageInfo.page = 1\n                this.$Message.success('删除成功')\n              }\n              this.handleSearch()\n            })\n          }\n        })\n      },\n      getCheckedAuthorities () {\n        const menus = this.$refs['tree'].getCheckedProp('authorityId')\n        return menus.concat(this.formItem.grantActions)\n      },\n      handleLoadRoleGranted () {\n        //if (!roleId) {\n         // return\n        //}\n        \n        const that = this\n        const p1 = getMenuAllList()\n        const p2 = roleSelectList()\n        Promise.all([p1, p2]).then(function (values) {\n          let res1 = values[0]\n          let res2 = values[1]\n          if (res1.code === 200) {\n            /*let opt = {\n              primaryKey: 'menuId',\n              parentKey: 'parentId',\n              startPid: '0'\n            }*/\n            let menus = []\n            /*if (res2.code === 200) {\n              let menus = []\n              let actions = []\n              console.log(res2.data)\n              res2.data.records.map(item => {\n                // 菜单权限\n                if (item.authority.indexOf('MENU_') != -1 && !menus.includes(item.id)) {\n                  menus.push(item.id)\n                }\n                // 操作权限\n                if (item.authority.indexOf('ACTION_') != -1 && !actions.includes(item.id)) {\n                  actions.push(item.id)\n                }\n              })\n              that.formItem.grantMenus = menus;\n              that.formItem.grantActions = actions;\n            }*/\n            res1.data.records.map(item => {\n              menus.push(item.id)\n            })\n            that.formItem.grantMenus = menus;\n            res1.data.records.map(item => {\n              // 菜单选中\n              if (that.formItem.grantMenus.includes(item.id)) {\n                item._isChecked = true\n              }\n            })\n            that.selectMenus = res1.data.records //listConvertTree(res1.data.records, opt)\n            that.actionList = res2.data\n          }\n          that.modalVisible = true\n        })\n      },\n      handleLoadRoleUsers (roleId) {\n        if (!roleId) {\n          return\n        }\n        const that = this\n        const p1 = getAllUsers()\n        const p2 = getRoleUsers(roleId)\n        Promise.all([p1, p2]).then(function (values) {\n          let res1 = values[0]\n          let res2 = values[1]\n          if (res1.code === 0) {\n            res1.data.map(item => {\n              item.key = item.userId\n              item.label = `${item.userName}(${item.nickName})`\n            })\n            that.selectUsers = res1.data\n          }\n          if (res2.code === 0) {\n            let userIds = []\n            res2.data.map(item => {\n              if (!userIds.includes(item.userId)) {\n                userIds.push(item.userId)\n              }\n            })\n            that.formItem.userIds = userIds;\n          }\n          that.modalVisible = true\n        })\n      },\n      transferRender (item) {\n        return `<span  title=\"${item.label}\">${item.label}</span>`\n      },\n      handleTransferChange (newTargetKeys, direction, moveKeys) {\n        this.formItem.userIds = newTargetKeys\n      },\n      handleClick (name, row) {\n        switch (name) {\n          case 'remove':\n            this.handleRemove(row)\n            break\n        }\n      }\n    },\n    mounted: function () {\n      this.handleSearch()\n      //console.log(this.actionList)\n    }\n  }\n</script>\n"],"sourceRoot":"src/view/module/system/role"}]}