{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/system/role/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/system/role/index.vue","mtime":1576490822772},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { startWith, listConvertTree } from '@/libs/util';\nexport default {\n  name: 'SystemRole',\n\n  data() {\n    const validateEn = (rule, value, callback) => {\n      let reg = /^[_a-zA-Z0-9]+$/;\n\n      if (value === '') {\n        callback(new Error('角色标识不能为空'));\n      } else if (value !== '' && !reg.test(value)) {\n        callback(new Error('只允许字母、数字、下划线'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      titles: ['选择接口', '已选择接口'],\n      listStyle: {\n        width: '240px',\n        height: '500px'\n      },\n      loading: false,\n      modalVisible: false,\n      modalTitle: '',\n      saving: false,\n      current: 'form1',\n      forms: ['form1', 'form2', 'form3'],\n      selectApis: [],\n      selectMenus: [{\n        id: 1,\n        menuName: 'KKKKey'\n      }, {\n        id: 2,\n        menuName: '斤斤计较'\n      }],\n      selectUsers: [],\n      pageInfo: {\n        total: 0,\n        page: 1,\n        limit: 10,\n        roleCode: '',\n        roleName: ''\n      },\n      formItemRules: {\n        roleCode: [{\n          required: true,\n          validator: validateEn,\n          trigger: 'blur'\n        }],\n        roleName: [{\n          required: true,\n          message: '角色名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      actionList: [{\n        actionDesc: 'aaa',\n        authorityId: 1,\n        actionName: '哈哈哈哈'\n      }, {\n        actionDesc: 'aaa',\n        authorityId: 2,\n        actionName: '呵呵呵呵呵'\n      }],\n      formItem: {\n        roleId: '',\n        roleCode: '',\n        roleName: '',\n        path: '',\n        status: 1,\n        menuId: '',\n        priority: 0,\n        roleDesc: '',\n        grantMenus: [],\n        grantActions: [],\n        expireTime: '',\n        isExpired: false,\n        userIds: []\n      },\n      columns: [{\n        type: 'selection',\n        width: 60,\n        align: 'center'\n      }, {\n        title: '角色名称',\n        key: 'roleName',\n        width: 300\n      }, {\n        title: '角色标识',\n        key: 'roleCode',\n        width: 300\n      }, {\n        title: '状态',\n        slot: 'status',\n        key: 'status',\n        width: 100,\n        filters: [{\n          label: '禁用',\n          value: 0\n        }, {\n          label: '启用',\n          value: 1\n        }],\n        filterMultiple: false,\n\n        filterMethod(value, row) {\n          if (value === 0) {\n            return row.status === 0;\n          } else if (value === 1) {\n            return row.status === 1;\n          }\n        }\n\n      }, {\n        title: '最后修改时间',\n        key: 'updateTime',\n        width: 200\n      }, {\n        title: '描述',\n        key: 'roleDesc'\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        width: 150\n      }],\n      columns2: [{\n        title: '菜单',\n        key: 'menuName',\n        minWidth: '250px'\n      }, {\n        title: '操作',\n        type: 'template',\n        template: 'operation',\n        minWidth: '200px'\n      }],\n      data: []\n    };\n  },\n\n  methods: {\n    handleModal(data) {\n      if (data) {\n        this.formItem = Object.assign({}, this.formItem, data);\n      }\n\n      if (this.current === this.forms[0]) {\n        this.modalTitle = data ? '编辑角色 - ' + data.roleName : '添加角色';\n        this.modalVisible = true;\n      }\n\n      if (this.current === this.forms[1]) {\n        this.modalTitle = data ? '分配权限 - ' + data.roleName : '分配权限';\n        this.handleLoadRoleGranted(this.formItem.roleId);\n      }\n\n      if (this.current === this.forms[2]) {\n        this.modalTitle = data ? '角色成员 - ' + data.roleName : '角色成员';\n        this.handleLoadRoleUsers(this.formItem.roleId);\n      }\n\n      this.formItem.status = this.formItem.status + '';\n    },\n\n    handleResetForm(form) {\n      this.$refs[form].resetFields();\n    },\n\n    handleTabClick(name) {\n      this.current = name;\n      this.handleModal();\n    },\n\n    handleReset() {\n      const newData = {\n        roleId: '',\n        roleCode: '',\n        roleName: '',\n        path: '',\n        status: 1,\n        menuId: '',\n        priority: 0,\n        roleDesc: '',\n        grantMenus: [],\n        grantActions: [],\n        expireTime: '',\n        isExpired: false,\n        userIds: []\n      };\n      this.formItem = newData; //重置验证\n\n      this.forms.map(form => {\n        this.handleResetForm(form);\n      });\n      this.current = this.forms[0];\n      this.formItem.grantMenus = [];\n      this.formItem.grantActions = [];\n      this.modalVisible = false;\n      this.saving = false;\n    },\n\n    handleSubmit() {\n      if (this.current === this.forms[0]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n\n            if (this.formItem.roleId) {\n              updateRole(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功');\n                  this.handleReset();\n                }\n\n                this.handleSearch();\n              }).finally(() => {\n                this.saving = false;\n              });\n            } else {\n              addRole(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功');\n                  this.handleReset();\n                }\n\n                this.handleSearch();\n              }).finally(() => {\n                this.saving = false;\n              });\n            }\n          }\n        });\n      }\n\n      if (this.current === this.forms[1]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            const authorityIds = this.getCheckedAuthorities();\n            this.saving = true;\n            grantAuthorityRole({\n              roleId: this.formItem.roleId,\n              expireTime: this.formItem.expireTime ? this.formItem.expireTime.pattern('yyyy-MM-dd HH:mm:ss') : '',\n              authorityIds: authorityIds\n            }).then(res => {\n              if (res.code === 0) {\n                this.$Message.success('授权成功');\n                this.handleReset();\n              }\n\n              this.handleSearch();\n            }).finally(() => {\n              this.saving = false;\n            });\n          }\n        });\n      }\n\n      if (this.current === this.forms[2]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n            addRoleUsers({\n              roleId: this.formItem.roleId,\n              userIds: this.formItem.userIds\n            }).then(res => {\n              if (res.code === 0) {\n                this.$Message.success('保存成功');\n                this.handleReset();\n              }\n\n              this.handleSearch();\n            }).finally(() => {\n              this.saving = false;\n            });\n          }\n        });\n      }\n    },\n\n    handleSearch(page) {\n      if (page) {\n        this.pageInfo.page = page;\n      }\n\n      this.loading = true;\n      getRoles(this.pageInfo).then(res => {\n        this.data = res.data.records;\n        this.pageInfo.total = parseInt(res.data.total);\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n\n    handlePage(current) {\n      this.pageInfo.page = current;\n      this.handleSearch();\n    },\n\n    handlePageSize(size) {\n      this.pageInfo.limit = size;\n      this.handleSearch();\n    },\n\n    handleRemove(data) {\n      this.$Modal.confirm({\n        title: '确定删除吗？',\n        onOk: () => {\n          removeRole(data.roleId).then(res => {\n            if (res.code === 0) {\n              this.pageInfo.page = 1;\n              this.$Message.success('删除成功');\n            }\n\n            this.handleSearch();\n          });\n        }\n      });\n    },\n\n    getCheckedAuthorities() {\n      const menus = this.$refs['tree'].getCheckedProp('authorityId');\n      return menus.concat(this.formItem.grantActions);\n    },\n\n    handleLoadRoleGranted(roleId) {\n      if (!roleId) {\n        return;\n      }\n\n      const that = this;\n      const p1 = getAuthorityMenu();\n      const p2 = getAuthorityRole(roleId);\n      Promise.all([p1, p2]).then(function (values) {\n        let res1 = values[0];\n        let res2 = values[1];\n\n        if (res1.code === 0 && res1.data) {\n          let opt = {\n            primaryKey: 'menuId',\n            parentKey: 'parentId',\n            startPid: '0'\n          };\n\n          if (res2.code === 0 && res2.data && res2.data.length > 0) {\n            let menus = [];\n            let actions = [];\n            res2.data.map(item => {\n              // 菜单权限\n              if (item.authority.indexOf('MENU_') != -1 && !menus.includes(item.authorityId)) {\n                menus.push(item.authorityId);\n              } // 操作权限\n\n\n              if (item.authority.indexOf('ACTION_') != -1 && !actions.includes(item.authorityId)) {\n                actions.push(item.authorityId);\n              }\n            });\n            that.formItem.grantMenus = menus;\n            that.formItem.grantActions = actions; // 时间\n\n            if (res2.data.length > 0) {\n              that.formItem.expireTime = res2.data[0].expireTime;\n              that.formItem.isExpired = res2.data[0].isExpired;\n            }\n          }\n\n          res1.data.map(item => {\n            // 菜单选中\n            if (that.formItem.grantMenus.includes(item.authorityId)) {\n              item._isChecked = true;\n            }\n          });\n          that.selectMenus = listConvertTree(res1.data, opt);\n        }\n\n        that.modalVisible = true;\n      });\n    },\n\n    handleLoadRoleUsers(roleId) {\n      if (!roleId) {\n        return;\n      }\n\n      const that = this;\n      const p1 = getAllUsers();\n      const p2 = getRoleUsers(roleId);\n      Promise.all([p1, p2]).then(function (values) {\n        let res1 = values[0];\n        let res2 = values[1];\n\n        if (res1.code === 0) {\n          res1.data.map(item => {\n            item.key = item.userId;\n            item.label = `${item.userName}(${item.nickName})`;\n          });\n          that.selectUsers = res1.data;\n        }\n\n        if (res2.code === 0) {\n          let userIds = [];\n          res2.data.map(item => {\n            if (!userIds.includes(item.userId)) {\n              userIds.push(item.userId);\n            }\n          });\n          that.formItem.userIds = userIds;\n        }\n\n        that.modalVisible = true;\n      });\n    },\n\n    transferRender(item) {\n      return `<span  title=\"${item.label}\">${item.label}</span>`;\n    },\n\n    handleTransferChange(newTargetKeys, direction, moveKeys) {\n      this.formItem.userIds = newTargetKeys;\n    },\n\n    handleClick(name, row) {\n      switch (name) {\n        case 'remove':\n          this.handleRemove(row);\n          break;\n      }\n    }\n\n  },\n  mounted: function () {//this.handleSearch()\n    //console.log(this.actionList)\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Card shadow>\n      <Form ref=\"searchForm\"\n        :model=\"pageInfo\"\n        inline\n        :label-width=\"80\"\n      >\n        <FormItem label=\"角色名称\" prop=\"roleName\">\n          <Input type=\"text\" v-model=\"pageInfo.roleName\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"角色编码\" prop=\"roleCode\">\n          <Input type=\"text\" v-model=\"pageInfo.roleCode\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" @click=\"handleSearch(1)\">查询</Button>&nbsp;\n          <Button @click=\"handleResetForm('searchForm')\">重置</Button>\n        </FormItem>\n      </Form>\n      <div class=\"search-con search-con-top\">\n        <ButtonGroup>\n          <Button  class=\"search-btn\" type=\"primary\"\n                  @click=\"handleModal()\">\n            <span>添加</span>\n          </Button>\n        </ButtonGroup>\n      </div>\n      <Table border :columns=\"columns\" :data=\"data\" :loading=\"loading\">\n        <template slot=\"status\" slot-scope=\"{ row }\">\n          <Badge v-if=\"row.status===1\" status=\"success\" text=\"启用\"/>\n          <Badge v-else=\"\" status=\"error\" text=\"禁用\"/>\n        </template>\n        <template slot=\"action\" slot-scope=\"{ row }\">\n          <a @click=\"handleModal(row)\"\n             :disabled=\"row.roleCode != 'all' && hasAuthority('systemRoleEdit')?false:true\">编辑</a>&nbsp;\n          <Dropdown v-show=\"hasAuthority('systemRoleEdit')\" transfer ref=\"dropdown\" @on-click=\"handleClick($event,row)\">\n            <a href=\"javascript:void(0)\" :disabled=\"row.roleCode === 'all' ?true:false\">\n              <span>更多</span>\n              <Icon type=\"ios-arrow-down\"></Icon>\n            </a>\n            <DropdownMenu slot=\"list\">\n              <DropdownItem name=\"remove\">删除角色</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>&nbsp;\n        </template>\n      </Table>\n      <Page transfer :total=\"pageInfo.total\" :current=\"pageInfo.page\" :page-size=\"pageInfo.limit\" show-elevator\n            show-sizer\n            show-total\n            @on-change=\"handlePage\" @on-page-size-change='handlePageSize'></Page>\n    </Card>\n\n    <Modal\n      v-model=\"modalVisible\"\n      :title=\"modalTitle\"\n      width=\"50\"\n      @on-cancel=\"handleReset\"\n    >\n      <div>\n        <Tabs @on-click=\"handleTabClick\" :value=\"current\">\n          <TabPane label=\"角色信息\" name=\"form1\">\n            <Form v-show=\"current == 'form1'\" ref=\"form1\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n              <FormItem label=\"角色标识\" prop=\"roleCode\">\n                <Input v-model=\"formItem.roleCode\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"角色名称\" prop=\"roleName\">\n                <Input v-model=\"formItem.roleName\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"状态\">\n                <RadioGroup v-model=\"formItem.status\" type=\"button\">\n                  <Radio label=\"0\">禁用</Radio>\n                  <Radio label=\"1\">启用</Radio>\n                </RadioGroup>\n              </FormItem>\n              <FormItem label=\"描述\">\n                <Input v-model=\"formItem.roleDesc\" type=\"textarea\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n            </Form>\n          </TabPane>\n          <TabPane label=\"分配权限\" name=\"form2\">\n            <Form v-show=\"current == 'form2'\" ref=\"form2\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n              <FormItem label=\"过期时间\" prop=\"expireTime\">\n                <Badge v-if=\"formItem.isExpired\" text=\"授权已过期\">\n                  <DatePicker v-model=\"formItem.expireTime\" class=\"ivu-form-item-error\" type=\"datetime\"\n                              placeholder=\"设置有效期\"></DatePicker>\n                </Badge>\n                <DatePicker v-else=\"\" v-model=\"formItem.expireTime\" type=\"datetime\" placeholder=\"设置有效期\"></DatePicker>\n              </FormItem>\n              <FormItem label=\"功能菜单\" prop=\"grantMenus\">\n                <tree-table\n                  ref=\"tree\"\n                  style=\"max-height:480px;overflow: auto\"\n                  expand-key=\"menuName\"\n                  :expand-type=\"false\"\n                  :is-fold=\"false\"\n                  :tree-type=\"true\"\n                  :selectable=\"true\"\n                  :columns=\"columns2\"\n                  :data=\"selectMenus\">\n                  <template slot=\"operation\">\n                    <CheckboxGroup v-model=\"formItem.grantActions\">\n                      <Checkbox v-for=\"(item, index) in actionList\" :label=\"item.authorityId\" :key=\"index\">\n                        <span :title=\"item.actionDesc\">{{item.actionName}}</span>\n                      </Checkbox>\n                    </CheckboxGroup>\n                  </template>\n                </tree-table>\n              </FormItem>\n            </Form>\n          </TabPane>\n          <TabPane label=\"角色成员\" name=\"form3\">\n            <Form v-show=\"current == 'form3'\" ref=\"form3\" :model=\"formItem\" :rules=\"formItemRules\">\n              <FormItem prop=\"authorities\">\n                <Transfer\n                  :data=\"selectUsers\"\n                  :list-style=\"{width: '45%',height: '480px'}\"\n                  :titles=\"['选择用户', '已选择用户']\"\n                  :render-format=\"transferRender\"\n                  :target-keys=\"formItem.userIds\"\n                  @on-change=\"handleTransferChange\"\n                  filterable>\n                </Transfer>\n              </FormItem>\n            </Form>\n          </TabPane>\n        </Tabs>\n        <div class=\"drawer-footer\">\n          <Button type=\"default\" @click=\"handleReset\">取消</Button>&nbsp;\n          <Button type=\"primary\" @click=\"handleSubmit\" :loading=\"saving\">保存</Button>\n        </div>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\n\n  import {startWith, listConvertTree} from '@/libs/util'\n\n  export default {\n    name: 'SystemRole',\n    data () {\n      const validateEn = (rule, value, callback) => {\n        let reg = /^[_a-zA-Z0-9]+$/\n        if (value === '') {\n          callback(new Error('角色标识不能为空'))\n        } else if (value !== '' && !reg.test(value)) {\n          callback(new Error('只允许字母、数字、下划线'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        titles: ['选择接口', '已选择接口'],\n        listStyle: {\n          width: '240px',\n          height: '500px'\n        },\n        loading: false,\n        modalVisible: false,\n        modalTitle: '',\n        saving: false,\n        current: 'form1',\n        forms: [\n          'form1',\n          'form2',\n          'form3'\n        ],\n        selectApis: [],\n        selectMenus: [\n          {id: 1, menuName: 'KKKKey'},\n          {id: 2, menuName: '斤斤计较'}\n        ],\n        selectUsers: [],\n        pageInfo: {\n          total: 0,\n          page: 1,\n          limit: 10,\n          roleCode: '',\n          roleName: ''\n        },\n        formItemRules: {\n          roleCode: [\n            {required: true, validator: validateEn, trigger: 'blur'}\n          ],\n          roleName: [\n            {required: true, message: '角色名称不能为空', trigger: 'blur'}\n          ]\n        },\n        actionList: [\n          {actionDesc: 'aaa',authorityId: 1,actionName: '哈哈哈哈'},\n          {actionDesc: 'aaa',authorityId: 2,actionName: '呵呵呵呵呵'}\n        ],\n        formItem: {\n          roleId: '',\n          roleCode: '',\n          roleName: '',\n          path: '',\n          status: 1,\n          menuId: '',\n          priority: 0,\n          roleDesc: '',\n          grantMenus: [],\n          grantActions: [],\n          expireTime: '',\n          isExpired: false,\n          userIds: []\n        },\n        columns: [\n          {\n            type: 'selection',\n            width: 60,\n            align: 'center'\n          },\n          {\n            title: '角色名称',\n            key: 'roleName',\n            width: 300,\n          },\n          {\n            title: '角色标识',\n            key: 'roleCode',\n            width: 300,\n          },\n          {\n            title: '状态',\n            slot: 'status',\n            key: 'status',\n            width: 100,\n            filters: [\n              {\n                label: '禁用',\n                value: 0\n              },\n              {\n                label: '启用',\n                value: 1\n              }\n            ],\n            filterMultiple: false,\n            filterMethod (value, row) {\n              if (value === 0) {\n                return row.status === 0\n              } else if (value === 1) {\n                return row.status === 1\n              }\n            }\n          },\n          {\n            title: '最后修改时间',\n            key: 'updateTime',\n            width: 200,\n          },\n          {\n            title: '描述',\n            key: 'roleDesc'\n          },\n          {\n            title: '操作',\n            slot: 'action',\n            fixed: 'right',\n            width: 150\n          }\n        ],\n        columns2: [\n          {\n            title: '菜单',\n            key: 'menuName',\n            minWidth: '250px',\n          },\n          {\n            title: '操作',\n            type: 'template',\n            template: 'operation',\n            minWidth: '200px'\n          }\n        ],\n        data: []\n      }\n    },\n    methods: {\n      handleModal (data) {\n        if (data) {\n          this.formItem = Object.assign({}, this.formItem, data)\n        }\n        if (this.current === this.forms[0]) {\n          this.modalTitle = data ? '编辑角色 - ' + data.roleName : '添加角色'\n          this.modalVisible = true\n        }\n        if (this.current === this.forms[1]) {\n          this.modalTitle = data ? '分配权限 - ' + data.roleName : '分配权限'\n          this.handleLoadRoleGranted(this.formItem.roleId)\n        }\n        if (this.current === this.forms[2]) {\n          this.modalTitle = data ? '角色成员 - ' + data.roleName : '角色成员'\n          this.handleLoadRoleUsers(this.formItem.roleId)\n        }\n        this.formItem.status = this.formItem.status + ''\n      },\n      handleResetForm (form) {\n        this.$refs[form].resetFields()\n      },\n      handleTabClick(name){\n        this.current = name\n        this.handleModal();\n      },\n      handleReset () {\n        const newData = {\n          roleId: '',\n          roleCode: '',\n          roleName: '',\n          path: '',\n          status: 1,\n          menuId: '',\n          priority: 0,\n          roleDesc: '',\n          grantMenus: [],\n          grantActions: [],\n          expireTime: '',\n          isExpired: false,\n          userIds: []\n        }\n        this.formItem = newData\n        //重置验证\n        this.forms.map(form => {\n          this.handleResetForm(form)\n        })\n        this.current = this.forms[0]\n        this.formItem.grantMenus = []\n        this.formItem.grantActions = []\n        this.modalVisible = false\n        this.saving = false\n      },\n      handleSubmit () {\n        if (this.current === this.forms[0]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              if (this.formItem.roleId) {\n                updateRole(this.formItem).then(res => {\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                    this.handleReset()\n                  }\n                  this.handleSearch()\n                }).finally(() => {\n                  this.saving = false\n                })\n              } else {\n                addRole(this.formItem).then(res => {\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                    this.handleReset()\n                  }\n                  this.handleSearch()\n                }).finally(() => {\n                  this.saving = false\n                })\n              }\n            }\n          })\n        }\n\n        if (this.current === this.forms[1]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              const authorityIds = this.getCheckedAuthorities()\n              this.saving = true\n              grantAuthorityRole({\n                roleId: this.formItem.roleId,\n                expireTime: this.formItem.expireTime ? this.formItem.expireTime.pattern('yyyy-MM-dd HH:mm:ss') : '',\n                authorityIds: authorityIds\n              }).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('授权成功')\n                  this.handleReset()\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          })\n        }\n\n        if (this.current === this.forms[2]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              addRoleUsers({\n                roleId: this.formItem.roleId,\n                userIds: this.formItem.userIds\n              }).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                  this.handleReset()\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          })\n        }\n      },\n      handleSearch (page) {\n        if (page) {\n          this.pageInfo.page = page\n        }\n        this.loading = true\n        getRoles(this.pageInfo).then(res => {\n          this.data = res.data.records\n          this.pageInfo.total = parseInt(res.data.total)\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      handlePage (current) {\n        this.pageInfo.page = current\n        this.handleSearch()\n      },\n      handlePageSize (size) {\n        this.pageInfo.limit = size\n        this.handleSearch()\n      },\n      handleRemove (data) {\n        this.$Modal.confirm({\n          title: '确定删除吗？',\n          onOk: () => {\n            removeRole(data.roleId).then(res => {\n              if (res.code === 0) {\n                this.pageInfo.page = 1\n                this.$Message.success('删除成功')\n              }\n              this.handleSearch()\n            })\n          }\n        })\n      },\n      getCheckedAuthorities () {\n        const menus = this.$refs['tree'].getCheckedProp('authorityId')\n        return menus.concat(this.formItem.grantActions)\n      },\n      handleLoadRoleGranted (roleId) {\n        if (!roleId) {\n          return\n        }\n        const that = this\n        const p1 = getAuthorityMenu()\n        const p2 = getAuthorityRole(roleId)\n        Promise.all([p1, p2]).then(function (values) {\n          let res1 = values[0]\n          let res2 = values[1]\n          if (res1.code === 0 && res1.data) {\n            let opt = {\n              primaryKey: 'menuId',\n              parentKey: 'parentId',\n              startPid: '0'\n            }\n            if (res2.code === 0 && res2.data && res2.data.length > 0) {\n              let menus = []\n              let actions = []\n              res2.data.map(item => {\n                // 菜单权限\n                if (item.authority.indexOf('MENU_') != -1 && !menus.includes(item.authorityId)) {\n                  menus.push(item.authorityId)\n                }\n                // 操作权限\n                if (item.authority.indexOf('ACTION_') != -1 && !actions.includes(item.authorityId)) {\n                  actions.push(item.authorityId)\n                }\n              })\n              that.formItem.grantMenus = menus;\n              that.formItem.grantActions = actions;\n              // 时间\n              if (res2.data.length > 0) {\n                that.formItem.expireTime = res2.data[0].expireTime\n                that.formItem.isExpired = res2.data[0].isExpired\n              }\n            }\n            res1.data.map(item => {\n              // 菜单选中\n              if (that.formItem.grantMenus.includes(item.authorityId)) {\n                item._isChecked = true\n              }\n            })\n            that.selectMenus = listConvertTree(res1.data, opt)\n          }\n          that.modalVisible = true\n        })\n      },\n      handleLoadRoleUsers (roleId) {\n        if (!roleId) {\n          return\n        }\n        const that = this\n        const p1 = getAllUsers()\n        const p2 = getRoleUsers(roleId)\n        Promise.all([p1, p2]).then(function (values) {\n          let res1 = values[0]\n          let res2 = values[1]\n          if (res1.code === 0) {\n            res1.data.map(item => {\n              item.key = item.userId\n              item.label = `${item.userName}(${item.nickName})`\n            })\n            that.selectUsers = res1.data\n          }\n          if (res2.code === 0) {\n            let userIds = []\n            res2.data.map(item => {\n              if (!userIds.includes(item.userId)) {\n                userIds.push(item.userId)\n              }\n            })\n            that.formItem.userIds = userIds;\n          }\n          that.modalVisible = true\n        })\n      },\n      transferRender (item) {\n        return `<span  title=\"${item.label}\">${item.label}</span>`\n      },\n      handleTransferChange (newTargetKeys, direction, moveKeys) {\n        this.formItem.userIds = newTargetKeys\n      },\n      handleClick (name, row) {\n        switch (name) {\n          case 'remove':\n            this.handleRemove(row)\n            break\n        }\n      }\n    },\n    mounted: function () {\n      //this.handleSearch()\n      //console.log(this.actionList)\n    }\n  }\n</script>\n"],"sourceRoot":"src/view/module/system/role"}]}