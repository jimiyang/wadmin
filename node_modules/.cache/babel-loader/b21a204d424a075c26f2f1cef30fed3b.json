{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/system/developer/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/system/developer/index.vue","mtime":1577538279506},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getListDept } from '@/api/department';\nimport { province } from '@/assets/js/area';\nconsole.log(province);\nexport default {\n  name: 'SystemDeveloper',\n\n  data() {\n    const validateEn = (rule, value, callback) => {\n      let reg = /^[_a-zA-Z0-9]+$/;\n      let reg2 = /^.{4,18}$/; // 长度为6到18个字符\n\n      if (value === '') {\n        callback(new Error('登录名不能为空'));\n      } else if (value !== '' && !reg.test(value)) {\n        callback(new Error('只允许字母、数字、下划线'));\n      } else if (value !== '' && !reg2.test(value)) {\n        callback(new Error('长度6到18个字符'));\n      } else {\n        callback();\n      }\n    };\n\n    const validatePass = (rule, value, callback) => {\n      let reg2 = /^.{6,18}$/;\n\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value !== this.formItem.password) {\n        callback(new Error('两次输入密码不一致'));\n      } else if (value !== '' && !reg2.test(value)) {\n        callback(new Error('长度6到18个字符'));\n      } else {\n        callback();\n      }\n    };\n\n    const validatePassConfirm = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.formItem.password) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n\n    const validateMobile = (rule, value, callback) => {\n      let reg = /^1\\d{10}$/;\n\n      if (value !== '' && !reg.test(value)) {\n        callback(new Error('手机号码格式不正确'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      saving: false,\n      modalVisible: false,\n      modalTitle: '',\n      current: 'form1',\n      forms: ['form1', 'form2'],\n      selectMenus: [],\n      selectRoles: [],\n      pageInfo: {\n        page: 1,\n        size: 10\n      },\n      formItemRules: {\n        userType: [{\n          required: true,\n          message: '开发者类型不能为空',\n          trigger: 'blur'\n        }],\n        userName: [{\n          required: true,\n          message: '开发者名不能为空',\n          trigger: 'blur'\n        }, {\n          required: true,\n          validator: validateEn,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        passwordConfirm: [{\n          required: true,\n          validator: validatePassConfirm,\n          trigger: 'blur'\n        }],\n        nickName: [{\n          required: true,\n          message: '昵称不能为空',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: false,\n          type: 'email',\n          message: '邮箱格式不正确',\n          trigger: 'blur'\n        }],\n        mobile: [{\n          validator: validateMobile,\n          trigger: 'blur'\n        }]\n      },\n      formItem: {\n        userId: '',\n        userName: '',\n        nickName: '',\n        password: '',\n        passwordConfirm: '',\n        status: 1,\n        companyId: '',\n        email: '',\n        mobile: '',\n        userType: 'isp',\n        userDesc: '',\n        avatar: '',\n        grantRoles: [],\n        grantActions: [],\n        grantMenus: [],\n        expireTime: '',\n        isExpired: false\n      },\n      columns: [{\n        type: 'selection',\n        width: 60\n      }, {\n        title: '登录名',\n        key: 'userName',\n        width: 200\n      }, {\n        title: '昵称',\n        key: 'nickName',\n        width: 150\n      }, {\n        title: '邮箱',\n        key: 'email',\n        width: 200\n      }, {\n        title: '手机号',\n        key: 'mobile',\n        width: 200\n      }, {\n        title: '状态',\n        slot: 'status',\n        key: 'status',\n        width: 100\n      }, {\n        title: '开发者类型',\n        key: 'userType',\n        width: 150\n      }, {\n        title: '注册时间',\n        key: 'createTime',\n        width: 180\n      }, {\n        title: '描述',\n        key: 'userDesc'\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        width: 150\n      }],\n      data: []\n    };\n  },\n\n  methods: {\n    handleModal(data) {\n      if (data) {\n        this.formItem = Object.assign({}, this.formItem, data);\n      }\n\n      if (this.current === this.forms[0]) {\n        this.modalTitle = data ? '编辑开发者 - ' + data.userName : '添加开发者';\n        this.modalVisible = true;\n      }\n\n      if (this.current === this.forms[1]) {\n        this.modalTitle = data ? '修改密码 - ' + data.userName : '修改密码';\n        this.modalVisible = true;\n      }\n\n      this.formItem.status = this.formItem.status + '';\n    },\n\n    handleResetForm(form) {\n      this.$refs[form].resetFields();\n    },\n\n    handleReset() {\n      const newData = {\n        userId: '',\n        userName: '',\n        nickName: '',\n        password: '',\n        passwordConfirm: '',\n        status: 1,\n        companyId: '',\n        email: '',\n        mobile: '',\n        userType: 'isp',\n        userDesc: '',\n        avatar: '',\n        grantRoles: [],\n        grantMenus: [],\n        grantActions: [],\n        expireTime: '',\n        isExpired: false\n      };\n      this.formItem = newData; //重置验证\n\n      this.forms.map(form => {\n        this.handleResetForm(form);\n      });\n      this.current = this.forms[0];\n      this.formItem.grantMenus = [];\n      this.formItem.grantActions = [];\n      this.modalVisible = false;\n      this.saving = false;\n    },\n\n    handleSubmit() {\n      if (this.current === this.forms[0]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n\n            if (this.formItem.userId) {\n              updateDeveloper(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功');\n                  this.handleReset();\n                }\n\n                this.handleSearch();\n              }).finally(() => {\n                this.saving = false;\n              });\n            } else {\n              addDeveloper(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功');\n                  this.handleReset();\n                }\n\n                this.handleSearch();\n              }).finally(() => {\n                this.saving = false;\n              });\n            }\n          }\n        });\n      }\n\n      if (this.current === this.forms[1] && this.formItem.userId) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n            updatePassword({\n              userId: this.formItem.userId,\n              password: this.formItem.password\n            }).then(res => {\n              if (res.code === 0) {\n                this.$Message.success('修改成功');\n                this.handleReset();\n              }\n\n              this.handleSearch();\n            }).finally(() => {\n              this.saving = false;\n            });\n          }\n        });\n      }\n    },\n\n    handleSearch() {\n      //this.loading = true\n      getListDept(this.pageInfo).then(res => {\n        console.log(res); //this.data = res.data.records\n        // this.pageInfo.total = parseInt(res.data.total)\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n\n    handlePage(current) {\n      this.pageInfo.page = current;\n      this.handleSearch();\n    },\n\n    handlePageSize(size) {\n      this.pageInfo.limit = size;\n      this.handleSearch();\n    },\n\n    handleClick(name, row) {\n      switch (name) {\n        case 'sendToEmail':\n          this.$Message.warning(\"发送至密保邮箱,开发中...\");\n          break;\n      }\n    },\n\n    handleTabClick(name) {\n      this.current = name;\n      this.handleModal();\n    }\n\n  },\n  mounted: function () {\n    this.handleSearch();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Card>\n      <Form ref=\"searchForm\"\n            :model=\"pageInfo\"\n            inline\n            :label-width=\"80\">\n        <FormItem label=\"登录名\" prop=\"userName\">\n          <Input type=\"text\" v-model=\"pageInfo.userName\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"手机号\" prop=\"mobile\">\n          <Input type=\"text\" v-model=\"pageInfo.mobile\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"邮箱\" prop=\"email\">\n          <Input type=\"text\" v-model=\"pageInfo.email\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" @click=\"handleSearch(1)\">查询</Button>&nbsp;\n          <Button @click=\"handleResetForm('searchForm')\">重置</Button>\n        </FormItem>\n      </Form>\n\n      <div class=\"search-con search-con-top\">\n        <ButtonGroup>\n          <Button :disabled=\"hasAuthority('developerEdit')?false:true\" type=\"primary\"\n                  @click=\"handleModal()\">\n            <span>添加</span>\n          </Button>\n        </ButtonGroup>\n      </div>\n\n      <Table border :columns=\"columns\" :data=\"data\" :loading=\"loading\">\n        <template slot=\"status\" slot-scope=\"{ row }\">\n          <Badge v-if=\"row.status===1\" status=\"success\" text=\"正常\"/>\n          <Badge v-else-if=\"row.status===2\" status=\"warning\" text=\"锁定\"/>\n          <Badge v-else=\"\" status=\"error\" text=\"禁用\"/>\n        </template>\n        <template slot=\"action\" slot-scope=\"{ row }\">\n          <a :disabled=\"hasAuthority('developerEdit')?false:true\" @click=\"handleModal(row)\">编辑</a>&nbsp;\n          <Dropdown v-show=\"hasAuthority('developerEdit')\" transfer ref=\"dropdown\" @on-click=\"handleClick($event,row)\">\n            <a href=\"javascript:void(0)\">\n              <span>更多</span>\n              <Icon type=\"ios-arrow-down\"></Icon>\n            </a>\n            <DropdownMenu slot=\"list\">\n              <DropdownItem name=\"sendToEmail\">发送到密保邮箱</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>&nbsp;\n        </template>\n      </Table>\n      <Page transfer :total=\"pageInfo.total\" :current=\"pageInfo.page\" :page-size=\"pageInfo.limit\" show-elevator\n            show-sizer\n            show-total\n            @on-change=\"handlePage\" @on-page-size-change='handlePageSize'></Page>\n    </Card>\n    <Modal v-model=\"modalVisible\"\n           :title=\"modalTitle\"\n           width=\"40\"\n           @on-cancel=\"handleReset\">\n      <div>\n        <Tabs @on-click=\"handleTabClick\" :value=\"current\">\n          <TabPane label=\"开发者信息\" name=\"form1\">\n            <Form v-show=\"current == 'form1'\" ref=\"form1\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n              <FormItem label=\"开发者类型\" prop=\"userType\">\n                <RadioGroup v-model=\"formItem.userType\">\n                  <Radio label=\"isp\">服务提供商</Radio>\n                  <Radio label=\"normal\">自研开发者</Radio>\n                </RadioGroup>\n              </FormItem>\n              <FormItem label=\"昵称\" prop=\"nickName\">\n                <Input v-model=\"formItem.nickName\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"登录名\" prop=\"userName\">\n                <Input :disabled=\"formItem.userId?true:false\" v-model=\"formItem.userName\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem v-if=\"formItem.userId?false:true\" label=\"登录密码\" prop=\"password\">\n                <Input type=\"password\" v-model=\"formItem.password\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem v-if=\"formItem.userId?false:true\" label=\"再次确认密码\" prop=\"passwordConfirm\">\n                <Input type=\"password\" v-model=\"formItem.passwordConfirm\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"邮箱\" prop=\"email\">\n                <Input v-model=\"formItem.email\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"手机号\" prop=\"mobile\">\n                <Input v-model=\"formItem.mobile\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"状态\">\n                <RadioGroup v-model=\"formItem.status\" type=\"button\">\n                  <Radio label=\"0\">禁用</Radio>\n                  <Radio label=\"1\">正常</Radio>\n                  <Radio label=\"2\">锁定</Radio>\n                </RadioGroup>\n              </FormItem>\n              <FormItem label=\"描述\">\n                <Input v-model=\"formItem.userDesc\" type=\"textarea\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n            </Form>\n          </TabPane>\n          <TabPane :disabled=\"!formItem.userId\" label=\"修改密码\" name=\"form2\">\n            <Form v-show=\"current == 'form2'\" ref=\"form2\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n              <FormItem label=\"登录名\" prop=\"userName\">\n                <Input :disabled=\"formItem.userId?true:false\" v-model=\"formItem.userName\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"登录密码\" prop=\"password\">\n                <Input type=\"password\" v-model=\"formItem.password\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"再次确认密码\" prop=\"passwordConfirm\">\n                <Input type=\"password\" v-model=\"formItem.passwordConfirm\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n            </Form>\n          </TabPane>\n        </Tabs>\n        <div class=\"drawer-footer\">\n          <Button type=\"default\" @click=\"handleReset\">取消</Button>&nbsp;\n          <Button type=\"primary\" @click=\"handleSubmit\" :loading=\"saving\">保存</Button>\n        </div>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\n  import {getListDept} from '@/api/department'\n  import {province} from '@/assets/js/area'\n  console.log(province)\n  export default {\n    name: 'SystemDeveloper',\n    data() {\n\n      const validateEn = (rule, value, callback) => {\n        let reg = /^[_a-zA-Z0-9]+$/\n        let reg2 = /^.{4,18}$/;\n        // 长度为6到18个字符\n        if (value === '') {\n          callback(new Error('登录名不能为空'))\n        } else if (value !== '' && !reg.test(value)) {\n          callback(new Error('只允许字母、数字、下划线'))\n        } else if (value !== '' && !reg2.test(value)) {\n          callback(new Error('长度6到18个字符'))\n        } else {\n          callback()\n        }\n      }\n      const validatePass = (rule, value, callback) => {\n        let reg2 = /^.{6,18}$/;\n        if (value === '') {\n          callback(new Error('请输入密码'))\n        } else if (value !== this.formItem.password) {\n          callback(new Error('两次输入密码不一致'))\n        } else if (value !== '' && !reg2.test(value)) {\n          callback(new Error('长度6到18个字符'))\n        } else {\n          callback()\n        }\n      }\n\n      const validatePassConfirm = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'))\n        } else if (value !== this.formItem.password) {\n          callback(new Error('两次输入密码不一致'))\n        } else {\n          callback()\n        }\n      }\n      const validateMobile = (rule, value, callback) => {\n        let reg = /^1\\d{10}$/\n        if (value !== '' && !reg.test(value)) {\n          callback(new Error('手机号码格式不正确'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        loading: false,\n        saving: false,\n        modalVisible: false,\n        modalTitle: '',\n        current: 'form1',\n        forms: [\n          'form1',\n          'form2'\n        ],\n        selectMenus: [],\n        selectRoles: [],\n        pageInfo: {\n          page: 1,\n          size: 10\n        },\n        formItemRules: {\n          userType: [\n            {required: true, message: '开发者类型不能为空', trigger: 'blur'}\n          ],\n          userName: [\n            {required: true, message: '开发者名不能为空', trigger: 'blur'},\n            {required: true, validator: validateEn, trigger: 'blur'}\n          ],\n          password: [\n            {required: true, validator: validatePass, trigger: 'blur'}\n          ],\n          passwordConfirm: [\n            {required: true, validator: validatePassConfirm, trigger: 'blur'}\n          ],\n          nickName: [\n            {required: true, message: '昵称不能为空', trigger: 'blur'}\n          ],\n          email: [\n            {required: false, type: 'email', message: '邮箱格式不正确', trigger: 'blur'}\n          ]\n          ,\n          mobile: [\n            {validator: validateMobile, trigger: 'blur'}\n          ]\n        },\n        formItem: {\n          userId: '',\n          userName: '',\n          nickName: '',\n          password: '',\n          passwordConfirm: '',\n          status: 1,\n          companyId: '',\n          email: '',\n          mobile: '',\n          userType: 'isp',\n          userDesc: '',\n          avatar: '',\n          grantRoles: [],\n          grantActions: [],\n          grantMenus: [],\n          expireTime: '',\n          isExpired: false\n        },\n        columns: [\n          {\n            type: 'selection',\n            width: 60,\n          },\n          {\n            title: '登录名',\n            key: 'userName',\n            width: 200\n          },\n          {\n            title: '昵称',\n            key: 'nickName',\n            width: 150\n          },\n          {\n            title: '邮箱',\n            key: 'email',\n            width: 200\n          },\n          {\n            title: '手机号',\n            key: 'mobile',\n            width: 200\n          },\n          {\n            title: '状态',\n            slot: 'status',\n            key: 'status',\n            width: 100\n          },\n          {\n            title: '开发者类型',\n            key: 'userType',\n            width: 150\n          },\n          {\n            title: '注册时间',\n            key: 'createTime',\n            width: 180\n          },\n          {\n            title: '描述',\n            key: 'userDesc'\n          },\n          {\n            title: '操作',\n            slot: 'action',\n            fixed: 'right',\n            width: 150\n          }\n        ],\n        data: []\n      }\n    },\n    methods: {\n      handleModal(data) {\n        if (data) {\n          this.formItem = Object.assign({}, this.formItem, data)\n        }\n        if (this.current === this.forms[0]) {\n          this.modalTitle = data ? '编辑开发者 - ' + data.userName : '添加开发者'\n          this.modalVisible = true\n        }\n        if (this.current === this.forms[1]) {\n          this.modalTitle = data ? '修改密码 - ' + data.userName : '修改密码'\n          this.modalVisible = true\n        }\n        this.formItem.status = this.formItem.status + ''\n      },\n      handleResetForm(form) {\n        this.$refs[form].resetFields()\n      },\n      handleReset() {\n        const newData = {\n          userId: '',\n          userName: '',\n          nickName: '',\n          password: '',\n          passwordConfirm: '',\n          status: 1,\n          companyId: '',\n          email: '',\n          mobile: '',\n          userType: 'isp',\n          userDesc: '',\n          avatar: '',\n          grantRoles: [],\n          grantMenus: [],\n          grantActions: [],\n          expireTime: '',\n          isExpired: false\n        }\n        this.formItem = newData\n        //重置验证\n        this.forms.map(form => {\n          this.handleResetForm(form)\n        })\n        this.current = this.forms[0]\n        this.formItem.grantMenus = []\n        this.formItem.grantActions = []\n        this.modalVisible = false\n        this.saving = false\n      },\n      handleSubmit() {\n        if (this.current === this.forms[0]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              if (this.formItem.userId) {\n                updateDeveloper(this.formItem).then(res => {\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                    this.handleReset()\n                  }\n                  this.handleSearch()\n                }).finally(() => {\n                  this.saving = false\n                })\n              } else {\n                addDeveloper(this.formItem).then(res => {\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                    this.handleReset()\n                  }\n                  this.handleSearch()\n                }).finally(() => {\n                  this.saving = false\n                })\n              }\n            }\n          })\n        }\n\n        if (this.current === this.forms[1] && this.formItem.userId) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              updatePassword({\n                userId: this.formItem.userId,\n                password: this.formItem.password\n              }).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('修改成功')\n                  this.handleReset()\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          })\n        }\n      },\n      handleSearch() {\n        //this.loading = true\n        getListDept(this.pageInfo).then(res => {\n          console.log(res)\n          //this.data = res.data.records\n         // this.pageInfo.total = parseInt(res.data.total)\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      handlePage(current) {\n        this.pageInfo.page = current\n        this.handleSearch()\n      },\n      handlePageSize(size) {\n        this.pageInfo.limit = size\n        this.handleSearch()\n      },\n      handleClick(name, row) {\n        switch (name) {\n          case'sendToEmail':\n            this.$Message.warning(\"发送至密保邮箱,开发中...\")\n            break\n        }\n      },\n      handleTabClick(name){\n        this.current = name\n        this.handleModal();\n      }\n    },\n    mounted: function () {\n      this.handleSearch()\n    }\n  }\n</script>\n"],"sourceRoot":"src/view/module/system/developer"}]}