{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/src/router/routers.js","dependencies":[{"path":"/Users/yanglina/wadmin/src/router/routers.js","mtime":1576217794805},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Main from '@/components/main';\n/**\n * iview-admin中meta除了原生参数外可配置的参数:\n * meta: {\n *  title: { String|Number|Function }\n *         显示在侧边栏、面包屑和标签栏的文字\n *         使用'{{ 多语言字段 }}'形式结合多语言使用，例子看多语言的路由配置;\n *         可以传入一个回调函数，参数是当前路由对象，例子看动态路由和带参路由\n *  hideInBread: (false) 设为true后此级路由将不会出现在面包屑中，示例看QQ群路由配置\n *  hideInMenu: (false) 设为true后在左侧菜单不会显示该页面选项\n *  notCache: (false) 设为true后页面在切换标签后不会缓存，如果需要缓存，无需设置这个字段，而且需要设置页面组件name属性和路由配置的name一致\n *  access: (null) 可访问该页面的权限数组，当前路由设置的权限会影响子路由\n *  icon: (-) 该页面在左侧菜单、面包屑和标签导航处显示的图标，如果是自定义图标，需要在图标名称前加下划线'_'\n *  beforeCloseName: (-) 设置该字段，则在关闭当前tab页时会去'@/router/before-close.js'里寻找该字段名对应的方法，作为关闭前的钩子函数\n * }\n */\n\nexport default [{\n  path: '/login',\n  name: 'login',\n  meta: {\n    title: 'Login - 登录',\n    hideInMenu: true\n  },\n  component: () => new Promise(resolve => {\n    require.ensure([], require => {\n      resolve(require('@/view/login/login.vue'));\n    });\n  })\n}, {\n  path: '/',\n  name: '_home',\n  redirect: '/home',\n  component: Main,\n  meta: {\n    hideInMenu: true,\n    notCache: true,\n    requireAuth: true // 判断是否需要登录\n\n  },\n  children: [{\n    path: '/home',\n    name: 'home',\n    meta: {\n      hideInMenu: true,\n      title: '首页',\n      notCache: true,\n      icon: 'md-home',\n      requireAuth: true // 判断是否需要登录\n\n    },\n    component: () => new Promise(resolve => {\n      require.ensure([], require => {\n        resolve(require('@/view/home'));\n      });\n    })\n  }]\n}, {\n  path: '/account',\n  name: 'account',\n  component: Main,\n  meta: {\n    notCache: true,\n    hideInBread: true,\n    hideInMenu: true\n  },\n  children: [{\n    path: 'setting',\n    name: 'setting',\n    meta: {\n      icon: 'md-notifications',\n      title: '个人设置'\n    },\n    component: () => new Promise(resolve => {\n      require.ensure([], require => {\n        resolve(require('@/view/module/account/setting.vue'));\n      });\n    })\n  }]\n}, {\n  path: '/error_logger',\n  name: 'error_logger',\n  meta: {\n    hideInBread: true,\n    hideInMenu: true\n  },\n  component: Main,\n  children: [{\n    path: 'error_logger_page',\n    name: 'error_logger_page',\n    meta: {\n      icon: 'ios-bug',\n      title: '错误收集'\n    },\n    component: () => new Promise(resolve => {\n      require.ensure([], require => {\n        resolve(require('@/view/error-page/error-logger.vue'));\n      });\n    })\n  }]\n}, {\n  path: '/login/success',\n  name: 'loginSuccess',\n  meta: {\n    hideInMenu: true\n  },\n  component: () => new Promise(resolve => {\n    require.ensure([], require => {\n      resolve(require('@/view/login/login-success.vue'));\n    });\n  })\n}, {\n  path: '/401',\n  name: 'error_401',\n  meta: {\n    hideInMenu: true\n  },\n  component: () => new Promise(resolve => {\n    require.ensure([], require => {\n      resolve(require('@/view/error-page/401.vue'));\n    });\n  })\n}, {\n  path: '/500',\n  name: 'error_500',\n  meta: {\n    hideInMenu: true\n  },\n  component: () => new Promise(resolve => {\n    require.ensure([], require => {\n      resolve(require('@/view/error-page/500.vue'));\n    });\n  })\n}];",{"version":3,"sources":["/Users/yanglina/wadmin/src/router/routers.js"],"names":["Main","path","name","meta","title","hideInMenu","component","redirect","notCache","requireAuth","children","icon","hideInBread"],"mappings":"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","sourcesContent":["import Main from '@/components/main'\n/**\n * iview-admin中meta除了原生参数外可配置的参数:\n * meta: {\n *  title: { String|Number|Function }\n *         显示在侧边栏、面包屑和标签栏的文字\n *         使用'{{ 多语言字段 }}'形式结合多语言使用，例子看多语言的路由配置;\n *         可以传入一个回调函数，参数是当前路由对象，例子看动态路由和带参路由\n *  hideInBread: (false) 设为true后此级路由将不会出现在面包屑中，示例看QQ群路由配置\n *  hideInMenu: (false) 设为true后在左侧菜单不会显示该页面选项\n *  notCache: (false) 设为true后页面在切换标签后不会缓存，如果需要缓存，无需设置这个字段，而且需要设置页面组件name属性和路由配置的name一致\n *  access: (null) 可访问该页面的权限数组，当前路由设置的权限会影响子路由\n *  icon: (-) 该页面在左侧菜单、面包屑和标签导航处显示的图标，如果是自定义图标，需要在图标名称前加下划线'_'\n *  beforeCloseName: (-) 设置该字段，则在关闭当前tab页时会去'@/router/before-close.js'里寻找该字段名对应的方法，作为关闭前的钩子函数\n * }\n */\n\nexport default [\n  {\n    path: '/login',\n    name: 'login',\n    meta: {\n      title: 'Login - 登录',\n      hideInMenu: true\n    },\n    component: () => import('@/view/login/login.vue')\n  },\n  {\n    path: '/',\n    name: '_home',\n    redirect: '/home',\n    component: Main,\n    meta: {\n      hideInMenu: true,\n      notCache: true,\n\t\t\trequireAuth: true // 判断是否需要登录\n    },\n    children: [\n      {\n        path: '/home',\n        name: 'home',\n        meta: {\n          hideInMenu: true,\n          title: '首页',\n          notCache: true,\n          icon: 'md-home',\n\t\t\t\t\trequireAuth: true // 判断是否需要登录\n        },\n        component: () => import('@/view/home')\n      }\n    ]\n  },\n  {\n    path: '/account',\n    name: 'account',\n    component: Main,\n    meta: {\n      notCache: true,\n      hideInBread: true,\n      hideInMenu: true\n    },\n    children: [\n      {\n        path: 'setting',\n        name: 'setting',\n        meta: {\n          icon: 'md-notifications',\n          title: '个人设置'\n        },\n        component: () => import('@/view/module/account/setting.vue')\n      }\n    ]\n  },\n  {\n    path: '/error_logger',\n    name: 'error_logger',\n    meta: {\n      hideInBread: true,\n      hideInMenu: true\n    },\n    component: Main,\n    children: [\n      {\n        path: 'error_logger_page',\n        name: 'error_logger_page',\n        meta: {\n          icon: 'ios-bug',\n          title: '错误收集'\n        },\n        component: () => import('@/view/error-page/error-logger.vue')\n      }\n    ]\n  },\n  {\n    path: '/login/success',\n    name: 'loginSuccess',\n    meta: {\n      hideInMenu: true\n    },\n    component: () => import('@/view/login/login-success.vue')\n  },\n  {\n    path: '/401',\n    name: 'error_401',\n    meta: {\n      hideInMenu: true\n    },\n    component: () => import('@/view/error-page/401.vue')\n  },\n  {\n    path: '/500',\n    name: 'error_500',\n    meta: {\n      hideInMenu: true\n    },\n    component: () => import('@/view/error-page/500.vue')\n  }\n]\n"]}]}