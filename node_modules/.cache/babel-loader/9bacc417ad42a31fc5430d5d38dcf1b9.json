{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/system/menus/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/system/menus/index.vue","mtime":1576068404879},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { listConvertTree, updateTreeNode } from '@/libs/util'; //import {getMenus, updateMenu, addMenu, removeMenu} from '@/api/menu'\n\nimport MenuAction from './menu-action.vue';\nimport icons from './icons';\nexport default {\n  name: 'SystemMenu',\n  components: {\n    MenuAction\n  },\n\n  data() {\n    const validateEn = (rule, value, callback) => {\n      let reg = /^[_a-zA-Z0-9]+$/;\n\n      if (value === '') {\n        callback(new Error('菜单标识不能为空'));\n      } else if (value !== '' && !reg.test(value)) {\n        callback(new Error('只允许字母、数字、下划线'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      confirmModal: false,\n      saving: false,\n      visible: false,\n      selectIcons: icons,\n      selectTreeData: [{\n        menuId: 0,\n        menuName: '无'\n      }],\n      formItemRules: {\n        parentId: [{\n          required: true,\n          message: '上级菜单',\n          trigger: 'blur'\n        }],\n        menuCode: [{\n          required: true,\n          validator: validateEn,\n          trigger: 'blur'\n        }],\n        menuName: [{\n          required: true,\n          message: '菜单名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      formItem: {\n        menuId: '',\n        menuCode: '',\n        menuName: '',\n        icon: 'md-document',\n        path: '',\n        scheme: '/',\n        target: '_self',\n        status: 1,\n        parentId: '0',\n        priority: 0,\n        menuDesc: ''\n      },\n      columns: [{\n        title: '菜单名称',\n        key: 'menuName',\n        minWidth: '200px'\n      }, {\n        title: '状态',\n        key: 'status',\n        type: 'template',\n        minWidth: '100px',\n        template: 'status'\n      }],\n      data: []\n    };\n  },\n\n  methods: {\n    treeSelectNormalizer(node) {\n      return {\n        id: node.menuId,\n        label: node.menuName,\n        children: node.children\n      };\n    },\n\n    setSelectTree(data) {\n      this.selectTreeData = data;\n    },\n\n    setEnabled(enabled) {\n      if (enabled) {\n        this.handleReset();\n      }\n    },\n\n    rowClick(data) {\n      this.handleReset();\n\n      if (data) {\n        this.formItem = Object.assign({}, data.row);\n      }\n\n      this.formItem.status = this.formItem.status + '';\n    },\n\n    handleReset() {\n      const newData = {\n        menuId: '',\n        menuCode: '',\n        menuName: '',\n        icon: 'md-document',\n        path: '',\n        scheme: '/',\n        target: '_self',\n        status: '1',\n        parentId: '0',\n        priority: 0,\n        menuDesc: ''\n      };\n      this.formItem = newData;\n      this.$refs['menuForm'].resetFields();\n      this.saving = false;\n    },\n\n    handleSubmit() {\n      this.$refs['menuForm'].validate(valid => {\n        if (valid) {\n          this.saving = true;\n\n          if (this.formItem.menuId) {\n            updateMenu(this.formItem).then(res => {\n              if (res.code === 0) {\n                this.$Message.success('保存成功');\n              }\n\n              this.handleSearch();\n            }).finally(() => {\n              this.saving = false;\n            });\n          } else {\n            addMenu(this.formItem).then(res => {\n              if (res.code === 0) {\n                this.$Message.success('保存成功');\n              }\n\n              this.handleSearch();\n            }).finally(() => {\n              this.saving = false;\n            });\n          }\n        }\n      });\n    },\n\n    handleRemove() {\n      removeMenu(this.formItem.menuId).then(res => {\n        this.handleReset();\n        this.handleSearch();\n\n        if (res.code === 0) {\n          this.$Message.success('删除成功');\n        }\n      });\n    },\n\n    onIconClick(item) {\n      this.formItem.icon = item;\n    },\n\n    handleSearch() {\n      getMenus().then(res => {\n        let opt = {\n          primaryKey: 'menuId',\n          parentKey: 'parentId',\n          startPid: '0'\n        };\n        this.data = listConvertTree(res.data, opt);\n        this.setSelectTree(this.data);\n      });\n    }\n\n  },\n  mounted: function () {\n    this.handleSearch();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Row :gutter=\"8\">\n      <Col :xs=\"8\" :sm=\"8\" :md=\"8\" :lg=\"6\">\n      <Card shadow>\n        <tree-table style=\"max-height:700px;overflow: auto\"\n            expand-key=\"menuName\"\n            @radio-click=\"rowClick\"\n            :expand-type=\"false\"\n            :is-fold=\"false\"\n            :tree-type=\"true\"\n            :selectable=\"false\"\n            :columns=\"columns\"\n            :data=\"data\">\n          <template slot=\"status\" slot-scope=\"scope\">\n            <Badge v-if=\"scope.row.status===1\" status=\"success\"/>\n            <Badge v-else=\"\" status=\"error\"/>\n            <Icon :type=\"scope.row.icon\" size=\"16\"/>\n          </template>\n        </tree-table>\n      </Card>\n      </Col>\n      <Col :xs=\"16\" :sm=\"16\" :md=\"16\" :lg=\"10\">\n      <Card shadow>\n        <div class=\"search-con search-con-top\">\n          <ButtonGroup>\n            <Button type=\"primary\" :disabled=\"hasAuthority('systemMenuEdit')?false:true\" @click=\"setEnabled(true)\">添加\n            </Button>\n            <Button type=\"primary\" :disabled=\"formItem.menuId && hasAuthority('systemMenuEdit')?false:true\"\n                    @click=\"confirmModal = true\">删除\n            </Button>\n          </ButtonGroup>\n          <Modal\n            v-model=\"confirmModal\"\n            title=\"提示\"\n            @on-ok=\"handleRemove\">\n            确定删除,菜单资源【{{formItem.menuName}}】吗?{{formItem.children && formItem.children.length > 0 ?\n            '存在子菜单,将一起删除.是否继续?' : ''}}\n\n          </Modal>\n        </div>\n        <Form ref=\"menuForm\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"80\">\n          <FormItem label=\"上级菜单\" prop=\"parentId\">\n            <treeselect\n              v-model=\"formItem.parentId\"\n              :options=\"selectTreeData\"\n              :default-expand-level=\"1\"\n              :normalizer=\"treeSelectNormalizer\"/>\n          </FormItem>\n          <FormItem label=\"菜单标识\" prop=\"menuCode\">\n            <Input v-model=\"formItem.menuCode\" placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem label=\"菜单名称\" prop=\"menuName\">\n            <Input v-model=\"formItem.menuName\" placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem label=\"页面地址\" prop=\"path\">\n            <Input v-model=\"formItem.path\" placeholder=\"请输入内容\">\n            <Select v-model=\"formItem.scheme\" slot=\"prepend\" style=\"width: 80px\">\n              <Option value=\"/\">/</Option>\n              <Option value=\"http://\">http://</Option>\n              <Option value=\"https://\">https://</Option>\n            </Select>\n            <Select v-model=\"formItem.target\" slot=\"append\" style=\"width: 100px\">\n              <Option value=\"_self\">窗口内打开</Option>\n              <Option :disabled=\"formItem.scheme==='/'\" value=\"_blank\">新窗口打开</Option>\n            </Select>\n            </Input>\n            <span v-if=\"formItem.scheme === '/'\">前端组件：/view/module/{{formItem.path}}.vue</span>\n            <span v-else=\"\">跳转地址：{{formItem.scheme}}{{formItem.path}}</span>\n          </FormItem>\n          <FormItem label=\"图标\">\n            <Input v-model=\"formItem.icon\" placeholder=\"请输入内容\">\n            <Icon size=\"22\" :type=\"formItem.icon\" slot=\"prepend\"/>\n            <Poptip width=\"600\" slot=\"append\" placement=\"bottom\">\n              <Button icon=\"ios-search\"></Button>\n              <div slot=\"content\">\n                <ul class=\"icons\">\n                  <li class=\"icons-item\" :title=\"item\" @click=\"onIconClick(item)\" v-for=\"item in selectIcons\">\n                    <Icon :type=\"item\" size=\"28\"/>\n                    <p>{{item}}</p>\n                  </li>\n                </ul>\n              </div>\n            </Poptip>\n            </Input>\n          </FormItem>\n          <FormItem label=\"优先级\">\n            <InputNumber v-model=\"formItem.priority\"></InputNumber>\n          </FormItem>\n          <FormItem label=\"状态\">\n            <RadioGroup v-model=\"formItem.status\" type=\"button\">\n              <Radio label=\"0\">禁用</Radio>\n              <Radio label=\"1\">启用</Radio>\n            </RadioGroup>\n          </FormItem>\n          <FormItem label=\"描述\">\n            <Input v-model=\"formItem.menuDesc\" type=\"textarea\" placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem>\n            <Button @click=\"handleSubmit\" :loading=\"saving\" type=\"primary\">保存</Button>\n            <Button @click=\"setEnabled(true)\" style=\"margin-left: 8px\">重置</Button>\n          </FormItem>\n        </Form>\n      </Card>\n      </Col>\n      <Col :xs=\"16\" :sm=\"16\" :md=\"16\" :lg=\"8\">\n      <Card shadow>\n        <menu-action :value=\"formItem\"></menu-action>\n      </Card>\n      </Col>\n    </Row>\n  </div>\n</template>\n\n<script>\n  import {listConvertTree, updateTreeNode} from '@/libs/util'\n  //import {getMenus, updateMenu, addMenu, removeMenu} from '@/api/menu'\n  import MenuAction from './menu-action.vue'\n  import icons from './icons'\n\n  export default {\n    name: 'SystemMenu',\n    components: {\n      MenuAction\n    },\n    data () {\n      const validateEn = (rule, value, callback) => {\n        let reg = /^[_a-zA-Z0-9]+$/\n        if (value === '') {\n          callback(new Error('菜单标识不能为空'))\n        } else if (value !== '' && !reg.test(value)) {\n          callback(new Error('只允许字母、数字、下划线'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        confirmModal: false,\n        saving: false,\n        visible: false,\n        selectIcons: icons,\n        selectTreeData: [{\n          menuId: 0,\n          menuName: '无'\n        }],\n        formItemRules: {\n          parentId: [\n            {required: true, message: '上级菜单', trigger: 'blur'}\n          ],\n          menuCode: [\n            {required: true, validator: validateEn, trigger: 'blur'}\n          ],\n          menuName: [\n            {required: true, message: '菜单名称不能为空', trigger: 'blur'}\n          ]\n        },\n        formItem: {\n          menuId: '',\n          menuCode: '',\n          menuName: '',\n          icon: 'md-document',\n          path: '',\n          scheme: '/',\n          target: '_self',\n          status: 1,\n          parentId: '0',\n          priority: 0,\n          menuDesc: ''\n        },\n        columns: [\n          {\n            title: '菜单名称',\n            key: 'menuName',\n            minWidth: '200px'\n          },\n          {\n            title: '状态',\n            key: 'status',\n            type: 'template',\n            minWidth: '100px',\n            template: 'status'\n          },\n        ],\n        data: []\n      }\n    },\n    methods: {\n      treeSelectNormalizer (node) {\n        return {\n          id: node.menuId,\n          label: node.menuName,\n          children: node.children\n        }\n      },\n      setSelectTree (data) {\n        this.selectTreeData = data\n      },\n      setEnabled (enabled) {\n        if (enabled) {\n          this.handleReset()\n        }\n      },\n      rowClick (data) {\n        this.handleReset()\n        if (data) {\n          this.formItem = Object.assign({}, data.row)\n        }\n        this.formItem.status = this.formItem.status + ''\n      },\n      handleReset () {\n        const newData = {\n          menuId: '',\n          menuCode: '',\n          menuName: '',\n          icon: 'md-document',\n          path: '',\n          scheme: '/',\n          target: '_self',\n          status: '1',\n          parentId: '0',\n          priority: 0,\n          menuDesc: ''\n        }\n        this.formItem = newData\n        this.$refs['menuForm'].resetFields()\n        this.saving = false\n      },\n      handleSubmit () {\n        this.$refs['menuForm'].validate((valid) => {\n          if (valid) {\n            this.saving = true\n            if (this.formItem.menuId) {\n              updateMenu(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            } else {\n              addMenu(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          }\n        })\n      },\n      handleRemove () {\n        removeMenu(this.formItem.menuId).then(res => {\n          this.handleReset()\n          this.handleSearch()\n          if (res.code === 0) {\n            this.$Message.success('删除成功')\n          }\n        })\n      },\n      onIconClick (item) {\n        this.formItem.icon = item\n      },\n      handleSearch () {\n        getMenus().then(res => {\n          let opt = {\n            primaryKey: 'menuId',\n            parentKey: 'parentId',\n            startPid: '0'\n          }\n          this.data = listConvertTree(res.data, opt)\n          this.setSelectTree(this.data)\n        })\n      }\n    },\n    mounted: function () {\n      this.handleSearch()\n    }\n  }\n</script>\n<style>\n  .icons {\n    overflow: auto;\n    zoom: 1;\n    height: 300px;\n  }\n\n  .icons-item {\n    float: left;\n    margin: 6px;\n    width: 60px;\n    text-align: center;\n    list-style: none;\n    cursor: pointer;\n    color: #5c6b77;\n    transition: all .2s ease;\n    position: relative;\n  }\n\n  .icons-item p {\n    word-break: break-all;\n    overflow: hidden;\n  }\n</style>\n"],"sourceRoot":"src/view/module/system/menus"}]}