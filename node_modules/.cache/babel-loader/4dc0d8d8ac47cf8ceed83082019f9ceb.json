{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/src/store/module/user.js","dependencies":[{"path":"/Users/yanglina/wadmin/src/store/module/user.js","mtime":1576227583758},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { setToken, getToken } from '@/libs/util';\nexport default {\n  state: {\n    userName: '',\n    userId: '',\n    nickName: '',\n    avatarImgPath: '',\n    token: getToken(),\n    access: [],\n    hasGetInfo: false,\n    userDesc: '',\n    mobile: '',\n    email: '',\n    menus: [] // 用户菜单\n\n  },\n  mutations: {\n    setAvatar(state, avatarPath) {\n      state.avatarImgPath = avatarPath;\n    },\n\n    setNickName(state, nickName) {\n      state.nickName = nickName;\n    },\n\n    setUserId(state, id) {\n      state.userId = id;\n    },\n\n    setUserName(state, name) {\n      state.userName = name;\n    },\n\n    setAccess(state, access) {\n      state.access = access;\n    },\n\n    setToken(state, {\n      token,\n      auto\n    }) {\n      state.token = token;\n      setToken(token, auto);\n    },\n\n    setHasGetInfo(state, status) {\n      state.hasGetInfo = status;\n    },\n\n    setUserMenus(state, menus) {\n      state.menus = menus;\n    },\n\n    setMobile(state, mobile) {\n      state.mobile = mobile;\n    },\n\n    setEmail(state, email) {\n      state.email = email;\n    },\n\n    setUserDesc(state, userDesc) {\n      state.userDesc = userDesc;\n    }\n\n  },\n  actions: {\n    // 登录\n    handleLogin({\n      commit\n    }, {\n      username,\n      password,\n      auto\n    }) {\n      username = username.trim();\n      return new Promise((resolve, reject) => {\n        login({\n          username,\n          password\n        }).then(res => {\n          if (res) {\n            if (res.code === 0) {\n              let token = res.data.access_token;\n              commit('setToken', {\n                token,\n                auto\n              });\n              resolve(res);\n            }\n          }\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    },\n\n    // 退出登录\n    handleLogout({\n      state,\n      commit\n    }) {\n      console.log(111);\n      console.log(this.$router);\n    },\n\n    // 获取用户相关信息\n    getUserInfo({\n      state,\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        getUserInfo().then(res => {\n          if (res.code === 0) {\n            commit('setAvatar', res.data.avatar);\n            commit('setUserName', res.data.username);\n            commit('setNickName', res.data.nickName);\n            commit('setUserId', res.data.userId);\n            commit('setEmail', res.data.email);\n            commit('setMobile', res.data.mobile);\n            commit('setUserDesc', res.data.userDesc);\n            const access = [];\n\n            if (res.data.authorities) {\n              res.data.authorities.map(item => {\n                if (item.authority) {\n                  access.push(item.authority);\n                }\n              });\n            } // 转换权限\n\n\n            commit('setAccess', access);\n            commit('setHasGetInfo', true);\n            getCurrentUserMenu().then(res => {\n              if (res.code === 0) {\n                commit('setUserMenus', res.data);\n                resolve(state);\n              }\n            }).catch(err => {\n              reject(err);\n            });\n          }\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    }\n\n  }\n};",{"version":3,"sources":["/Users/yanglina/wadmin/src/store/module/user.js"],"names":["setToken","getToken","state","userName","userId","nickName","avatarImgPath","token","access","hasGetInfo","userDesc","mobile","email","menus","mutations","setAvatar","avatarPath","setNickName","setUserId","id","setUserName","name","setAccess","auto","setHasGetInfo","status","setUserMenus","setMobile","setEmail","setUserDesc","actions","handleLogin","commit","username","password","trim","Promise","resolve","reject","login","then","res","code","data","access_token","catch","err","handleLogout","console","log","$router","getUserInfo","avatar","authorities","map","item","authority","push","getCurrentUserMenu"],"mappings":"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","sourcesContent":["\nimport { setToken, getToken } from '@/libs/util'\n\nexport default {\n  state: {\n    userName: '',\n    userId: '',\n    nickName: '',\n    avatarImgPath: '',\n    token: getToken(),\n    access: [],\n    hasGetInfo: false,\n    userDesc: '',\n    mobile: '',\n    email: '',\n    menus: []// 用户菜单\n  },\n  mutations: {\n    setAvatar (state, avatarPath) {\n      state.avatarImgPath = avatarPath\n    },\n    setNickName (state, nickName) {\n      state.nickName = nickName\n    },\n    setUserId (state, id) {\n      state.userId = id\n    },\n    setUserName (state, name) {\n      state.userName = name\n    },\n    setAccess (state, access) {\n      state.access = access\n    },\n    setToken (state, { token, auto }) {\n      state.token = token\n      setToken(token, auto)\n    },\n    setHasGetInfo (state, status) {\n      state.hasGetInfo = status\n    },\n    setUserMenus (state, menus) {\n      state.menus = menus\n    },\n    setMobile (state, mobile) {\n      state.mobile = mobile\n    },\n    setEmail (state, email) {\n      state.email = email\n    },\n    setUserDesc (state, userDesc) {\n      state.userDesc = userDesc\n    }\n  },\n  actions: {\n    // 登录\n    handleLogin ({ commit }, { username, password, auto }) {\n      username = username.trim()\n      return new Promise((resolve, reject) => {\n        login({\n          username,\n          password\n        }).then(res => {\n          if (res) {\n            if (res.code === 0) {\n              let token = res.data.access_token\n              commit('setToken', { token, auto })\n              resolve(res)\n            }\n          }\n        }).catch(err => {\n          reject(err)\n        })\n      })\n    },\n    // 退出登录\n    handleLogout ({ state, commit }) {\n      console.log(111)\n      console.log(this.$router)\n    },\n    // 获取用户相关信息\n    getUserInfo ({ state, commit }) {\n      return new Promise((resolve, reject) => {\n        getUserInfo().then(res => {\n          if (res.code === 0) {\n            commit('setAvatar', res.data.avatar)\n            commit('setUserName', res.data.username)\n            commit('setNickName', res.data.nickName)\n            commit('setUserId', res.data.userId)\n            commit('setEmail', res.data.email)\n            commit('setMobile', res.data.mobile)\n            commit('setUserDesc', res.data.userDesc)\n            const access = []\n            if (res.data.authorities) {\n              res.data.authorities.map(item => {\n                if (item.authority) {\n                  access.push(item.authority)\n                }\n              })\n            }\n            // 转换权限\n            commit('setAccess', access)\n            commit('setHasGetInfo', true)\n            getCurrentUserMenu().then(res => {\n              if (res.code === 0) {\n                commit('setUserMenus', res.data)\n                resolve(state)\n              }\n            }).catch(err => {\n              reject(err)\n            })\n          }\n        }).catch(err => {\n          reject(err)\n        })\n      })\n    }\n  }\n}\n"]}]}