{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/src/router/index.js","dependencies":[{"path":"/Users/yanglina/wadmin/src/router/index.js","mtime":1576125167012},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from './routers';\nimport store from '@/store';\nimport iView from 'iview';\nimport { setToken, getToken, canTurnTo, formatRouters } from '@/libs/util';\nimport config from '@/config';\nconst {\n  homeName\n} = config;\nVue.use(Router); // 存放加载的动态路由\n\nlet dyncRouters = [];\nlet BASE_URL = '';\n\nswitch (process.env.NODE_ENV) {\n  case 'development':\n    BASE_URL = config.publicPath.dev; // 这里是本地的请求url\n\n    break;\n\n  case 'production':\n    BASE_URL = config.publicPath.pro; // 生产环境url\n\n    break;\n}\n\nconst router = new Router({\n  base: BASE_URL,\n  routes: routes,\n  mode: 'history'\n});\nconst LOGIN_PAGE_NAME = 'login';\nconst permitList = [LOGIN_PAGE_NAME, 'loginSuccess'];\n\nconst turnTo = (to, access, next) => {\n  if (!to.name) {\n    // 防止地址栏刷新动态路由跳转到401或404,先跳转到homeName\n    router.replace(to);\n  } else if (canTurnTo(to.name, access, routes)) {\n    next();\n  } else {\n    // 无权限，重定向到401页面\n    next({\n      replace: true,\n      name: 'error_401'\n    });\n  }\n};\n\nconst asyncRoutes = [{\n  path: '/main',\n  component: resolve => require(['@/components/main'], resolve),\n  children: [{\n    path: 't1',\n    name: 't1',\n    meta: {\n      hideInMenu: true\n    },\n    component: () => new Promise(resolve => {\n      require.ensure([], require => {\n        resolve(require('@/view/module/system/user/index.vue'));\n      });\n    })\n  }, {\n    path: 't2',\n    name: 't2',\n    component: () => new Promise(resolve => {\n      require.ensure([], require => {\n        resolve(require('@/view/module/system/role/index.vue'));\n      });\n    })\n  }, {\n    path: 't3',\n    name: 't3',\n    component: () => new Promise(resolve => {\n      require.ensure([], require => {\n        resolve(require('@/view/module/system/api/index.vue'));\n      });\n    })\n  }, {\n    path: 't4',\n    name: 't4',\n    component: () => new Promise(resolve => {\n      require.ensure([], require => {\n        resolve(require('@/view/module/system/app/index.vue'));\n      });\n    })\n  }]\n}];\nrouter.addRoutes(asyncRoutes);\nroutes.push(...dyncRouters);\nconsole.log(routes); //turnTo(to, store.state.user.access, next)\n//router.beforeEach((to, from, next) => {\n//iView.LoadingBar.start()\n\n/*if (!dyncRouters || dyncRouters.length === 0) {\n  dyncRouters = dyncRouters.concat(...formatRouters(store.state.user.menus, store.state.user.access))\n  // 防止重复添加路由报错\n  router.addRoutes(dyncRouters)\n  routes.push(...dyncRouters)\n}\nturnTo(to, store.state.user.access, next)*/\n//})\n\nrouter.afterEach(to => {\n  iView.LoadingBar.finish();\n  window.scrollTo(0, 0);\n});\nexport default router;",{"version":3,"sources":["/Users/yanglina/wadmin/src/router/index.js"],"names":["Vue","Router","routes","store","iView","setToken","getToken","canTurnTo","formatRouters","config","homeName","use","dyncRouters","BASE_URL","process","env","NODE_ENV","publicPath","dev","pro","router","base","mode","LOGIN_PAGE_NAME","permitList","turnTo","to","access","next","name","replace","asyncRoutes","path","component","resolve","require","children","meta","hideInMenu","addRoutes","push","console","log","afterEach","LoadingBar","finish","window","scrollTo"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport routes from './routers'\nimport store from '@/store'\nimport iView from 'iview'\nimport { setToken, getToken, canTurnTo, formatRouters } from '@/libs/util'\nimport config from '@/config'\n\nconst { homeName } = config\nVue.use(Router)\n// 存放加载的动态路由\nlet dyncRouters = []\n\nlet BASE_URL = ''\nswitch (process.env.NODE_ENV) {\n  case 'development':\n    BASE_URL = config.publicPath.dev // 这里是本地的请求url\n    break\n  case 'production':\n    BASE_URL = config.publicPath.pro // 生产环境url\n    break\n}\n\nconst router = new Router({\n  base: BASE_URL,\n  routes: routes,\n  mode: 'history'\n})\nconst LOGIN_PAGE_NAME = 'login'\n\nconst permitList = [LOGIN_PAGE_NAME, 'loginSuccess']\n\nconst turnTo = (to, access, next) => {\n  if (!to.name) {\n    // 防止地址栏刷新动态路由跳转到401或404,先跳转到homeName\n    router.replace(to)\n  } else if (canTurnTo(to.name, access, routes)) {\n    next()\n  } else {\n    // 无权限，重定向到401页面\n    next({ replace: true, name: 'error_401' })\n  }\n}\nconst asyncRoutes = [\n\t{\n\t  path: '/main',\n\t  component: resolve => require(['@/components/main'], resolve),\n\t  children: [\n\t\t{\n\t\t\tpath: 't1',\n\t\t\tname: 't1',\n\t\t\tmeta: {\n\t\t\t  hideInMenu: true\n\t\t\t},\n\t\t\tcomponent: () => import('@/view/module/system/user/index.vue')\n\t\t },\n\t\t{\n\t\t\tpath: 't2',\n\t\t\tname: 't2',\n\t\t\tcomponent: () => import('@/view/module/system/role/index.vue')\n\t\t},\n\t\t{\n\t\t\tpath: 't3',\n\t\t\tname: 't3',\n\t\t\tcomponent: () => import('@/view/module/system/api/index.vue')\n\t\t},\n\t\t{\n\t\t\tpath: 't4',\n\t\t\tname: 't4',\n\t\t\tcomponent: () => import('@/view/module/system/app/index.vue')\n\t\t}\n\t]\n  }\n]\nrouter.addRoutes(asyncRoutes)\nroutes.push(...dyncRouters)\nconsole.log(routes)\n//turnTo(to, store.state.user.access, next)\n//router.beforeEach((to, from, next) => {\n  //iView.LoadingBar.start()\n\t/*if (!dyncRouters || dyncRouters.length === 0) {\n\t  dyncRouters = dyncRouters.concat(...formatRouters(store.state.user.menus, store.state.user.access))\n\t  // 防止重复添加路由报错\n\t  router.addRoutes(dyncRouters)\n\t  routes.push(...dyncRouters)\n\t}\n\tturnTo(to, store.state.user.access, next)*/\n//})\n\nrouter.afterEach(to => {\n  iView.LoadingBar.finish()\n  window.scrollTo(0, 0)\n})\n\nexport default router"]}]}