{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/gateway/ip-limit/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/gateway/ip-limit/index.vue","mtime":1576046388591},{"path":"/Users/yanglina/wadmin/.babelrc","mtime":1576127290134},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'GatewayIpLimit',\n\n  data() {\n    return {\n      loading: false,\n      saving: false,\n      modalVisible: false,\n      modalTitle: '',\n      pageInfo: {\n        total: 0,\n        page: 1,\n        limit: 10,\n        policyName: ''\n      },\n      current: 'form1',\n      forms: ['form1', 'form2'],\n      selectApis: [],\n      formItemRules: {\n        policyName: [{\n          required: true,\n          message: '策略名称不能为空',\n          trigger: 'blur'\n        }],\n        policyType: [{\n          required: true,\n          message: '策略类型不能为空',\n          trigger: 'blur'\n        }],\n        ipAddress: [{\n          required: true,\n          message: 'Ip地址不能为空',\n          trigger: 'blur'\n        }]\n      },\n      formItem: {\n        policyId: '',\n        policyName: '',\n        policyType: '0',\n        ipAddress: '',\n        apiIds: []\n      },\n      columns: [{\n        title: '策略名称',\n        key: 'policyName',\n        width: 200\n      }, {\n        title: '策略类型',\n        width: 300,\n        slot: 'policyType',\n        filters: [{\n          label: '拒绝-黑名单',\n          value: 0\n        }, {\n          label: '允许-白名单',\n          value: 1\n        }],\n        filterMultiple: false,\n\n        filterMethod(value, row) {\n          if (value === 0) {\n            return row.policyType === 0;\n          } else if (value === 1) {\n            return row.policyType === 1;\n          }\n        }\n\n      }, {\n        title: '最后修改时间',\n        key: 'updateTime',\n        width: 180\n      }, {\n        title: 'IP地址/域名',\n        key: 'ipAddress'\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        width: 150\n      }],\n      data: []\n    };\n  },\n\n  methods: {\n    handleModal(data) {\n      if (data) {\n        this.formItem = Object.assign({}, this.formItem, data);\n      }\n\n      if (this.current === this.forms[0]) {\n        this.modalTitle = data ? '编辑来源限制策略 - ' + this.formItem.policyName : '添加来源限制';\n        this.modalVisible = true;\n      }\n\n      if (this.current === this.forms[1]) {\n        this.modalTitle = data ? '绑定接口 - ' + this.formItem.policyName : '绑定接口';\n        this.handleIpLimitApi(this.formItem.policyId);\n      }\n\n      this.formItem.policyType = this.formItem.policyType + '';\n    },\n\n    handleResetForm(form) {\n      this.$refs[form].resetFields();\n    },\n\n    handleTabClick(name) {\n      this.current = name;\n      this.handleModal();\n    },\n\n    handleReset() {\n      const newData = {\n        policyId: '',\n        policyName: '',\n        policyType: '0',\n        ipAddress: '',\n        apiIds: []\n      };\n      this.formItem = newData; //重置验证\n\n      this.forms.map(form => {\n        this.handleResetForm(form);\n      });\n      this.current = this.forms[0];\n      this.modalVisible = false;\n      this.saving = false;\n    },\n\n    handleSubmit() {\n      if (this.current === this.forms[0]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n\n            if (this.formItem.policyId) {\n              updateIpLimit(this.formItem).then(res => {\n                this.handleReset();\n                this.handleSearch();\n\n                if (res.code === 0) {\n                  this.$Message.success('保存成功');\n                }\n              }).finally(() => {\n                this.saving = false;\n              });\n            } else {\n              addIpLimit(this.formItem).then(res => {\n                this.handleReset();\n                this.handleSearch();\n\n                if (res.code === 0) {\n                  this.$Message.success('保存成功');\n                }\n              }).finally(() => {\n                this.saving = false;\n              });\n            }\n          }\n        });\n      }\n\n      if (this.current === this.forms[1]) {\n        this.$refs[this.current].validate(valid => {\n          if (valid) {\n            this.saving = true;\n            addIpLimitApis({\n              policyId: this.formItem.policyId,\n              apiIds: this.formItem.apiIds\n            }).then(res => {\n              this.handleReset();\n              this.handleSearch();\n\n              if (res.code === 0) {\n                this.$Message.success('绑定成功');\n              }\n            }).finally(() => {\n              this.saving = false;\n            });\n          }\n        });\n      }\n    },\n\n    handleSearch(page) {\n      if (page) {\n        this.pageInfo.page = page;\n      }\n\n      this.loading = true;\n      getIpLimits(this.pageInfo).then(res => {\n        this.data = res.data.records;\n        this.pageInfo.total = parseInt(res.data.total);\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n\n    handlePage(current) {\n      this.pageInfo.page = current;\n      this.handleSearch();\n    },\n\n    handlePageSize(size) {\n      this.pageInfo.limit = size;\n      this.handleSearch();\n    },\n\n    handleRemove(data) {\n      this.$Modal.confirm({\n        title: '确定删除吗？',\n        onOk: () => {\n          removeIpLimit(data.policyId).then(res => {\n            if (res.code === 0) {\n              this.pageInfo.page = 1;\n              this.$Message.success('删除成功');\n            }\n\n            this.handleSearch();\n          });\n        }\n      });\n    },\n\n    handleIpLimitApi(policyId) {\n      if (!policyId) {\n        return;\n      }\n\n      const that = this;\n      const p1 = getAuthorityApi('');\n      const p2 = getIpLimitApis(policyId);\n      Promise.all([p1, p2]).then(function (values) {\n        let res1 = values[0];\n        let res2 = values[1];\n\n        if (res1.code === 0) {\n          res1.data.map(item => {\n            item.key = item.apiId;\n            item.label = `${item.prefix.replace('/**', '')}${item.path} - ${item.apiName}`;\n          });\n          that.selectApis = res1.data;\n        }\n\n        if (res2.code === 0) {\n          let apiIds = [];\n          res2.data.map(item => {\n            if (!apiIds.includes(item.apiId)) {\n              apiIds.push(item.apiId);\n            }\n          });\n          that.formItem.apiIds = apiIds;\n        }\n\n        that.modalVisible = true;\n      });\n    },\n\n    transferRender(item) {\n      return `<span  title=\"${item.label}\">${item.label}</span>`;\n    },\n\n    handleTransferChange(newTargetKeys, direction, moveKeys) {\n      if (newTargetKeys.indexOf('1') != -1) {\n        this.formItem.apiIds = ['1'];\n      } else {\n        this.formItem.apiIds = newTargetKeys;\n      }\n    }\n\n  },\n  mounted: function () {\n    this.handleSearch();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Card shadow>\n      <Form ref=\"searchForm\"\n            :model=\"pageInfo\"\n            inline\n            :label-width=\"80\">\n        <FormItem label=\"策略名称\" prop=\"policyName\">\n          <Input type=\"text\" v-model=\"pageInfo.policyName\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" @click=\"handleSearch(1)\">查询</Button>&nbsp;\n          <Button @click=\"handleResetForm('searchForm')\">重置</Button>\n        </FormItem>\n      </Form>\n      <div class=\"search-con search-con-top\">\n        <ButtonGroup>\n          <Button :disabled=\"hasAuthority('gatewayIpLimitEdit')?false:true\" class=\"search-btn\" type=\"primary\"\n                  @click=\"handleModal()\">\n            <span>添加</span>\n          </Button>\n        </ButtonGroup>\n      </div>\n      <Table border :columns=\"columns\" :data=\"data\" :loading=\"loading\">\n        <template slot=\"policyType\" slot-scope=\"{ row }\">\n          <Tag color=\"green\" v-if=\"row.policyType===1\">允许-白名单</Tag>\n          <Tag color=\"red\" v-else=\"\">拒绝-黑名单</Tag>\n        </template>\n        <template slot=\"action\" slot-scope=\"{ row }\">\n          <a :disabled=\"hasAuthority('gatewayIpLimitEdit')?false:true\" @click=\"handleModal(row)\">\n            编辑</a>&nbsp;\n          <a :disabled=\"hasAuthority('gatewayIpLimitEdit')?false:true\" @click=\"handleRemove(row)\">\n            删除\n          </a>\n        </template>\n      </Table>\n      <Page :total=\"pageInfo.total\" :current=\"pageInfo.page\" :page-size=\"pageInfo.limit\" show-elevator show-sizer\n            show-total\n            @on-change=\"handlePage\" @on-page-size-change='handlePageSize'></Page>\n    </Card>\n    <Modal v-model=\"modalVisible\"\n           :title=\"modalTitle\"\n           width=\"40\"\n           @on-cancel=\"handleReset\">\n      <div>\n        <Tabs :value=\"current\" @on-click=\"handleTabClick\">\n          <TabPane label=\"策略信息\" name=\"form1\">\n            <Form ref=\"form1\" v-show=\"current=='form1'\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n              <FormItem label=\"策略名称\" prop=\"policyName\">\n                <Input v-model=\"formItem.policyName\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"策略类型\" prop=\"policyType\">\n                <Select v-model=\"formItem.policyType\">\n                  <Option value=\"0\" label=\"拒绝-黑名单\"></Option>\n                  <Option value=\"1\" label=\"允许-白名单\"></Option>\n                </Select>\n              </FormItem>\n              <FormItem label=\"IP地址/域名\" prop=\"ipAddress\">\n                <Input v-model=\"formItem.ipAddress\" type=\"textarea\"\n                       placeholder=\"192.168.0.1;192.168.0.2;baidu.com;weixin.com\"></Input> 同时支持Ip和域名,多个用分号\";\"隔开。示例：192.168.0.1;baidu.com;weixin.com\n\n              </FormItem>\n            </Form>\n          </TabPane>\n          <TabPane :disabled=\"!formItem.policyId\" label=\"绑定接口\" name=\"form2\">\n            <Form ref=\"form2\" v-show=\"current=='form2'\" :model=\"formItem\" :rules=\"formItemRules\">\n              <Alert type=\"warning\" show-icon>请注意：如果API上原来已经绑定了一个策略，则会被本策略覆盖，请慎重选择！</Alert>\n              <FormItem prop=\"authorities\">\n                <Transfer\n                  :data=\"selectApis\"\n                  :list-style=\"{width: '45%',height: '480px'}\"\n                  :titles=\"['选择接口', '已选择接口']\"\n                  :render-format=\"transferRender\"\n                  :target-keys=\"formItem.apiIds\"\n                  @on-change=\"handleTransferChange\"\n                  filterable>\n                </Transfer>\n              </FormItem>\n            </Form>\n          </TabPane>\n        </Tabs>\n        <div class=\"drawer-footer\">\n          <Button type=\"default\" @click=\"handleReset\">取消</Button>&nbsp;\n          <Button type=\"primary\" @click=\"handleSubmit\" :loading=\"saving\">保存</Button>\n        </div>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'GatewayIpLimit',\n    data () {\n      return {\n        loading: false,\n        saving: false,\n        modalVisible: false,\n        modalTitle: '',\n        pageInfo: {\n          total: 0,\n          page: 1,\n          limit: 10,\n          policyName: ''\n        },\n        current: 'form1',\n        forms: [\n          'form1',\n          'form2'\n        ],\n        selectApis: [],\n        formItemRules: {\n          policyName: [\n            {required: true, message: '策略名称不能为空', trigger: 'blur'}\n          ],\n          policyType: [\n            {required: true, message: '策略类型不能为空', trigger: 'blur'}\n          ],\n          ipAddress: [\n            {required: true, message: 'Ip地址不能为空', trigger: 'blur'}\n          ]\n        },\n        formItem: {\n          policyId: '',\n          policyName: '',\n          policyType: '0',\n          ipAddress: '',\n          apiIds: [],\n        },\n        columns: [\n          {\n            title: '策略名称',\n            key: 'policyName',\n            width: 200\n          },\n          {\n            title: '策略类型',\n            width: 300,\n            slot: 'policyType',\n            filters: [\n              {\n                label: '拒绝-黑名单',\n                value: 0\n              },\n              {\n                label: '允许-白名单',\n                value: 1\n              }\n            ],\n            filterMultiple: false,\n            filterMethod (value, row) {\n              if (value === 0) {\n                return row.policyType === 0\n              } else if (value === 1) {\n                return row.policyType === 1\n              }\n            }\n          },\n          {\n            title: '最后修改时间',\n            key: 'updateTime',\n            width: 180\n          },\n          {\n            title: 'IP地址/域名',\n            key: 'ipAddress'\n          },\n          {\n            title: '操作',\n            slot: 'action',\n            fixed: 'right',\n            width: 150\n          }\n        ],\n        data: []\n      }\n    },\n    methods: {\n      handleModal (data) {\n        if (data) {\n          this.formItem = Object.assign({}, this.formItem, data)\n        }\n        if (this.current === this.forms[0]) {\n          this.modalTitle = data ? '编辑来源限制策略 - ' + this.formItem.policyName : '添加来源限制'\n          this.modalVisible = true\n        }\n        if (this.current === this.forms[1]) {\n          this.modalTitle = data ? '绑定接口 - ' + this.formItem.policyName : '绑定接口'\n          this.handleIpLimitApi(this.formItem.policyId)\n        }\n        this.formItem.policyType = this.formItem.policyType + ''\n      },\n      handleResetForm (form) {\n        this.$refs[form].resetFields()\n      },\n      handleTabClick(name){\n        this.current = name\n        this.handleModal();\n      },\n      handleReset () {\n        const newData = {\n          policyId: '',\n          policyName: '',\n          policyType: '0',\n          ipAddress: '',\n          apiIds: []\n        }\n        this.formItem = newData\n        //重置验证\n        this.forms.map(form => {\n          this.handleResetForm(form)\n        })\n        this.current = this.forms[0]\n        this.modalVisible = false\n        this.saving = false\n      },\n      handleSubmit () {\n        if (this.current === this.forms[0]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              if (this.formItem.policyId) {\n                updateIpLimit(this.formItem).then(res => {\n                  this.handleReset()\n                  this.handleSearch()\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                  }\n                }).finally(() => {\n                  this.saving = false\n                })\n              } else {\n                addIpLimit(this.formItem).then(res => {\n                  this.handleReset()\n                  this.handleSearch()\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                  }\n                }).finally(() => {\n                  this.saving = false\n                })\n              }\n            }\n          })\n        }\n        if (this.current === this.forms[1]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              addIpLimitApis({policyId: this.formItem.policyId, apiIds: this.formItem.apiIds}).then(res => {\n                this.handleReset()\n                this.handleSearch()\n                if (res.code === 0) {\n                  this.$Message.success('绑定成功')\n                }\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          })\n        }\n      },\n      handleSearch (page) {\n        if (page) {\n          this.pageInfo.page = page\n        }\n        this.loading = true\n        getIpLimits(this.pageInfo).then(res => {\n          this.data = res.data.records\n          this.pageInfo.total = parseInt(res.data.total)\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      handlePage (current) {\n        this.pageInfo.page = current\n        this.handleSearch()\n      },\n      handlePageSize (size) {\n        this.pageInfo.limit = size\n        this.handleSearch()\n      },\n      handleRemove (data) {\n        this.$Modal.confirm({\n          title: '确定删除吗？',\n          onOk: () => {\n            removeIpLimit(data.policyId).then(res => {\n              if (res.code === 0) {\n                this.pageInfo.page = 1\n                this.$Message.success('删除成功')\n              }\n              this.handleSearch()\n            })\n          }\n        })\n      },\n      handleIpLimitApi (policyId) {\n        if (!policyId) {\n          return\n        }\n        const that = this\n        const p1 = getAuthorityApi('')\n        const p2 = getIpLimitApis(policyId)\n        Promise.all([p1, p2]).then(function (values) {\n          let res1 = values[0]\n          let res2 = values[1]\n          if (res1.code === 0) {\n            res1.data.map(item => {\n              item.key = item.apiId\n              item.label = `${item.prefix.replace('/**', '')}${item.path} - ${item.apiName}`\n            })\n            that.selectApis = res1.data\n          }\n          if (res2.code === 0) {\n            let apiIds = []\n            res2.data.map(item => {\n              if (!apiIds.includes(item.apiId)) {\n                apiIds.push(item.apiId)\n              }\n            })\n            that.formItem.apiIds = apiIds\n          }\n          that.modalVisible = true\n        })\n      },\n      transferRender (item) {\n        return `<span  title=\"${item.label}\">${item.label}</span>`\n      },\n      handleTransferChange (newTargetKeys, direction, moveKeys) {\n        if (newTargetKeys.indexOf('1') != -1) {\n          this.formItem.apiIds = ['1']\n        } else {\n          this.formItem.apiIds = newTargetKeys\n        }\n      }\n    },\n    mounted: function () {\n      this.handleSearch()\n    }\n  }\n</script>\n"],"sourceRoot":"src/view/module/gateway/ip-limit"}]}