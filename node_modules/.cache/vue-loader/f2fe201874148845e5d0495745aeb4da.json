{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/system/api/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/system/api/index.vue","mtime":1576046359414},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {listConvertTree} from '@/libs/util'\n/*import {\n  getApis,\n  updateApi,\n  addApi,\n  removeApi,\n  batchRemoveApi,\n  batchUpdateOpenApi,\n  batchUpdateStatusApi,\n  batchUpdateAuthApi\n} from '@/api/api'*/\n\n\nexport default {\n  name: 'SystemApi',\n  data () {\n    const validateEn = (rule, value, callback) => {\n      let reg = /^[_.a-zA-Z0-9]+$/\n      if (value === '') {\n        callback(new Error('接口标识不能为空'))\n      } else if (value !== '' && !reg.test(value)) {\n        callback(new Error('只允许字母、数字、点、下划线'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      loading: false,\n      modalVisible: false,\n      modalTitle: '',\n      saving: false,\n      tableSelection: [],\n      pageInfo: {\n        total: 0,\n        page: 1,\n        limit: 10,\n        path: '',\n        apiName: '',\n        apiCode: '',\n        serviceId: ''\n      },\n      selectServiceList: [],\n      formItemRules: {\n        serviceId: [\n          {required: true, message: '所属服务不能为空', trigger: 'blur'}\n        ],\n        apiCategory: [\n          {required: true, message: '接口分类不能为空', trigger: 'blur'}\n        ],\n        path: [\n          {required: true, message: '接口地址不能为空', trigger: 'blur'}\n        ],\n        apiCode: [\n          {required: true, validator: validateEn, trigger: 'blur'}\n        ],\n        apiName: [\n          {required: true, message: '接口名称不能为空', trigger: 'blur'}\n        ]\n      },\n      formItem: {\n        apiId: '',\n        apiCode: '',\n        apiName: '',\n        apiCategory: 'default',\n        path: '',\n        status: 1,\n        isAuth: 1,\n        openSwatch: false,\n        authSwatch: true,\n        serviceId: '',\n        priority: 0,\n        apiDesc: '',\n        isOpen: 1\n      },\n      columns: [\n        {\n          type: 'selection',\n          width: 60,\n          align: 'center'\n        },\n        {\n          title: '编码',\n          key: 'apiCode',\n          width: 300,\n        },\n        {\n          title: '名称',\n          key: 'apiName',\n          slot: 'apiName',\n          width: 300,\n          filters: [\n            {\n              label: '禁用',\n              value: 0\n            },\n            {\n              label: '启用',\n              value: 1\n            }\n          ],\n          filterMultiple: false,\n          filterMethod (value, row) {\n            if (value === 0) {\n              return row.status === 0\n            } else if (value === 1) {\n              return row.status === 1\n            }\n          }\n        },\n        {\n          title: '地址',\n          key: 'path',\n          width: 200,\n        },\n        {\n          title: '分类',\n          key: 'apiCategory',\n          width: 100,\n        },\n        {\n          title: '服务名称',\n          key: 'serviceId',\n          width: 200\n        },\n        {\n          title: '接口安全',\n          key: 'isAuth',\n          slot: 'isAuth',\n          width: 300\n        },\n        {\n          title: '描述',\n          key: 'apiDesc',\n          width: 200\n        },\n        {\n          title: '最后更新时间',\n          key: 'updateTime',\n          width: 180\n        },\n        {\n          title: '操作',\n          key: '',\n          slot: 'action',\n          fixed: 'right',\n          width: 120\n        }\n      ],\n      data: []\n    }\n  },\n  methods: {\n    handleModal (data) {\n      if (data) {\n        this.modalTitle = '编辑接口 - ' + data.apiName\n        this.formItem = Object.assign({}, this.formItem, data)\n      } else {\n        this.modalTitle = '添加接口'\n      }\n      this.formItem.status = this.formItem.status + ''\n      this.formItem.isAuth = this.formItem.isAuth + ''\n      this.formItem.isOpen = this.formItem.isOpen + ''\n      this.modalVisible = true\n    },\n    handleResetForm (form) {\n      this.$refs[form].resetFields()\n    },\n    handleReset () {\n      const newData = {\n        apiId: '',\n        apiCode: '',\n        apiName: '',\n        apiCategory: 'default',\n        path: '',\n        status: 1,\n        isAuth: 1,\n        serviceId: '',\n        priority: 0,\n        apiDesc: '',\n        isOpen: 1\n      }\n      this.formItem = newData\n      //重置验证\n      this.handleResetForm('form1')\n      this.modalVisible = false\n      this.saving = false\n    },\n    handleSubmit () {\n      this.$refs['form1'].validate((valid) => {\n        if (valid) {\n          this.saving = true\n          if (this.formItem.apiId) {\n            \n          } else {\n            \n          }\n        }\n      })\n    },\n    handleRemove (data) {\n      this.$Modal.confirm({\n        title: '确定删除吗？',\n        onOk: () => {\n          \n        }\n      })\n    },\n    handleSearch (page) {\n      this.tableSelection = []\n      if (page) {\n        this.pageInfo.page = page\n      }\n      this.loading = true\n      \n    },\n    handlePage (current) {\n      this.pageInfo.page = current\n      this.handleSearch()\n    },\n    handlePageSize (size) {\n      this.pageInfo.limit = size\n      this.handleSearch()\n    },\n    handleLoadServiceList () {\n      \n    },\n    handleTableSelectChange(selection){\n      this.tableSelection = selection\n    },\n    handleBatchClick(name){\n      if (name) {\n        this.$Modal.confirm({\n          title: `已勾选${this.tableSelection.length}项,是否继续执行操作？`,\n          onOk: () => {\n            let ids = []\n            this.tableSelection.map(item => {\n              if (!ids.includes(item.apiId)) {\n                ids.push(item.apiId)\n              }\n            })\n            switch (name) {\n              case'remove':\n                \n                break\n              case'open1':\n                \n                break\n              case'open2':\n                \n                break\n              case'status1':\n                \n                break\n              case'status2':\n                \n                break\n              case'status3':\n                \n                break\n              case'auth1':\n                \n                break\n              case'auth2':\n                \n                break\n            }\n          }\n        })\n      }\n    }\n  },\n  mounted: function () {\n    this.handleLoadServiceList()\n    this.handleSearch()\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/view/module/system/api","sourcesContent":["<template xmlns=\"http://www.w3.org/1999/html\">\n  <div>\n    <Card shadow>\n      <Form ref=\"searchForm\"\n            :model=\"pageInfo\"\n            inline\n            :label-width=\"80\">\n        <FormItem label=\"请求路径\" prop=\"path\">\n          <Input type=\"text\" v-model=\"pageInfo.path\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"接口名称\" prop=\"apiName\">\n          <Input type=\"text\" v-model=\"pageInfo.apiName\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"接口编码\" prop=\"apiCode\">\n          <Input type=\"text\" v-model=\"pageInfo.apiCode\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"服务名\" prop=\"serviceId\">\n          <Input type=\"text\" v-model=\"pageInfo.serviceId\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" @click=\"handleSearch(1)\">查询</Button>&nbsp;\n          <Button @click=\"handleResetForm('searchForm')\">重置</Button>\n        </FormItem>\n      </Form>\n      <div class=\"search-con search-con-top\">\n        <ButtonGroup>\n          <Button :disabled=\"hasAuthority('systemApiEdit')?false:true\" class=\"search-btn\" type=\"primary\"\n                  @click=\"handleModal()\">\n            <span>添加</span>\n          </Button>\n        </ButtonGroup>\n        <Dropdown v-if=\"tableSelection.length>0 && hasAuthority('systemApiEdit')\" @on-click=\"handleBatchClick\"\n                  style=\"margin-left: 20px\">\n          <Button>\n            <span>批量操作</span>\n            <Icon type=\"ios-arrow-down\"></Icon>\n          </Button>\n          <DropdownMenu slot=\"list\">\n            <DropdownItem name=\"remove\">删除</DropdownItem>\n            <Dropdown placement=\"right-start\">\n              <DropdownItem>\n                <span>状态</span>\n                <Icon type=\"ios-arrow-forward\"></Icon>\n              </DropdownItem>\n              <DropdownMenu slot=\"list\">\n                <DropdownItem name=\"status1\">启用</DropdownItem>\n                <DropdownItem name=\"status2\">禁用</DropdownItem>\n                <DropdownItem name=\"status3\">维护中</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n            <Dropdown placement=\"right-start\">\n              <DropdownItem>\n                <span>公开访问</span>\n                <Icon type=\"ios-arrow-forward\"></Icon>\n              </DropdownItem>\n              <DropdownMenu slot=\"list\">\n                <DropdownItem name=\"open1\">允许公开访问</DropdownItem>\n                <DropdownItem name=\"open2\">拒绝公开访问</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n            <Dropdown placement=\"right-start\">\n              <DropdownItem>\n                <span>身份认证</span>\n                <Icon type=\"ios-arrow-forward\"></Icon>\n              </DropdownItem>\n              <DropdownMenu slot=\"list\">\n                <DropdownItem name=\"auth1\">开启身份认证</DropdownItem>\n                <DropdownItem name=\"auth2\">关闭身份认证</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          </DropdownMenu>\n        </Dropdown>\n      </div>\n      <Alert show-icon>\n        <span>自动扫描<code>@EnableResourceServer</code>资源服务器接口信息,注:自动添加的接口,都是未公开的. <code>只有公开的接口,才可以通过网关访问。否则将提示:\"请求地址,拒绝访问!\"</code></span>\n      </Alert>\n      <Table @on-selection-change=\"handleTableSelectChange\" border :columns=\"columns\" :data=\"data\" :loading=\"loading\">\n        <template slot=\"apiName\" slot-scope=\"{ row }\">\n          <span>{{row.apiName}}</span>\n        </template>\n        <template slot=\"isAuth\" slot-scope=\"{ row }\">\n          <Tag color=\"green\" v-if=\"row.isOpen===1\">允许公开访问</Tag>\n          <Tag color=\"red\" v-else-if=\"row.isOpen!==1\">拒绝公开访问</Tag>\n          <Tag color=\"green\" v-if=\"row.isAuth===1\">开启身份认证</Tag>\n          <Tag color=\"red\" v-else-if=\"row.isAuth!==1\">关闭身份认证</Tag>\n          <Tag v-if=\"row.status===1\" color=\"green\">启用</Tag>\n          <Tag v-else-if=\"row.status===2\" color=\"orange\">维护中</Tag>\n          <Tag v-else=\"\" color=\"red\">禁用</Tag>\n        </template>\n        <template slot=\"action\" slot-scope=\"{ row }\">\n          <a :disabled=\"hasAuthority('systemApiEdit')?false:true\" @click=\"handleModal(row)\">\n            编辑</a>&nbsp;\n          <a :disabled=\"hasAuthority('systemApiEdit')?false:true\" @click=\"handleRemove(row)\">\n            删除</a>\n        </template>\n      </Table>\n      <Page transfer :total=\"pageInfo.total\" :current=\"pageInfo.page\" :page-size=\"pageInfo.limit\" show-elevator\n            show-sizer\n            show-total\n            @on-change=\"handlePage\" @on-page-size-change='handlePageSize'></Page>\n    </Card>\n    <Modal v-model=\"modalVisible\"\n           :title=\"modalTitle\"\n           width=\"40\"\n           @on-cancel=\"handleReset\">\n      <div>\n        <Alert show-icon v-if=\"formItem.apiId?true:false\">\n          <span>自动扫描接口swagger注解。</span>\n          <Poptip placement=\"bottom\" title=\"示例代码\">\n            <a>示例代码</a>\n            <div slot=\"content\">\n              <div v-highlight>\n                <pre>\n                      // 接口介绍\n                      @ApiOperation(value = \"接口名称\", notes = \"接口备注\")\n                      @PostMapping(\"/testApi\")\n                      // 忽略接口,将不再添加或修改次接口\n                      @ApiIgnore\n                      public ResultBody testApi() {\n                          return ResultBody.success();\n                      }\n                </pre>\n              </div>\n            </div>\n          </Poptip>\n        </Alert>\n        <Form ref=\"form1\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n          <FormItem label=\"服务名称\" prop=\"serviceId\">\n            <Select :disabled=\"formItem.apiId && formItem.isPersist === 1?true:false\" v-model=\"formItem.serviceId\"\n                    filterable clearable>\n              <Option v-for=\"item in selectServiceList\" :value=\"item.serviceId\">{{ item.serviceName }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"接口分类\" prop=\"apiCategory\">\n            <Input v-model=\"formItem.apiCategory\" placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem label=\"接口编码\" prop=\"apiCode\">\n            <Input :disabled=\"formItem.apiId && formItem.isPersist === 1?true:false\" v-model=\"formItem.apiCode\"\n                   placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem label=\"接口名称\" prop=\"apiName\">\n            <Input :disabled=\"formItem.apiId && formItem.isPersist === 1?true:false\" v-model=\"formItem.apiName\"\n                   placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem label=\"请求地址\" prop=\"path\">\n            <Input :disabled=\"formItem.apiId && formItem.isPersist === 1?true:false\" v-model=\"formItem.path\"\n                   placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem label=\"优先级\">\n            <InputNumber v-model=\"formItem.priority\"></InputNumber>\n          </FormItem>\n          <FormItem label=\"身份认证\">\n            <RadioGroup v-model=\"formItem.isAuth\" type=\"button\">\n              <Radio :disabled=\"formItem.apiId && formItem.isPersist === 1?true:false\" label=\"0\">关闭</Radio>\n              <Radio :disabled=\"formItem.apiId && formItem.isPersist === 1?true:false\" label=\"1\">开启</Radio>\n            </RadioGroup>\n            <p><code>开启：未认证登录,提示\"认证失败,请重新登录!\";关闭: 不需要认证登录</code></p>\n          </FormItem>\n          <FormItem label=\"公开访问\">\n            <RadioGroup v-model=\"formItem.isOpen\" type=\"button\">\n              <Radio label=\"0\">拒绝</Radio>\n              <Radio label=\"1\">允许</Radio>\n            </RadioGroup>\n           <p><code>拒绝:提示\"请求地址,拒绝访问!\"</code></p>\n          </FormItem>\n          <FormItem label=\"状态\">\n            <RadioGroup v-model=\"formItem.status\" type=\"button\">\n              <Radio label=\"0\">禁用</Radio>\n              <Radio label=\"1\">启用</Radio>\n              <Radio label=\"2\">维护中</Radio>\n            </RadioGroup>\n            <p><code>禁用：提示\"请求地址,禁止访问!\";维护中：提示\"正在升级维护中,请稍后再试!\";</code></p>\n          </FormItem>\n          <FormItem label=\"描述\">\n            <Input v-model=\"formItem.apiDesc\" type=\"textarea\" placeholder=\"请输入内容\"></Input>\n          </FormItem>\n        </Form>\n        <div class=\"drawer-footer\">\n          <Button type=\"default\" @click=\"handleReset\">取消</Button>&nbsp;\n          <Button type=\"primary\" @click=\"handleSubmit\" :loading=\"saving\">保存</Button>\n        </div>\n      </div>\n    </Modal>\n\n  </div>\n</template>\n\n<script>\n  import {listConvertTree} from '@/libs/util'\n  /*import {\n    getApis,\n    updateApi,\n    addApi,\n    removeApi,\n    batchRemoveApi,\n    batchUpdateOpenApi,\n    batchUpdateStatusApi,\n    batchUpdateAuthApi\n  } from '@/api/api'*/\n\n\n  export default {\n    name: 'SystemApi',\n    data () {\n      const validateEn = (rule, value, callback) => {\n        let reg = /^[_.a-zA-Z0-9]+$/\n        if (value === '') {\n          callback(new Error('接口标识不能为空'))\n        } else if (value !== '' && !reg.test(value)) {\n          callback(new Error('只允许字母、数字、点、下划线'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        loading: false,\n        modalVisible: false,\n        modalTitle: '',\n        saving: false,\n        tableSelection: [],\n        pageInfo: {\n          total: 0,\n          page: 1,\n          limit: 10,\n          path: '',\n          apiName: '',\n          apiCode: '',\n          serviceId: ''\n        },\n        selectServiceList: [],\n        formItemRules: {\n          serviceId: [\n            {required: true, message: '所属服务不能为空', trigger: 'blur'}\n          ],\n          apiCategory: [\n            {required: true, message: '接口分类不能为空', trigger: 'blur'}\n          ],\n          path: [\n            {required: true, message: '接口地址不能为空', trigger: 'blur'}\n          ],\n          apiCode: [\n            {required: true, validator: validateEn, trigger: 'blur'}\n          ],\n          apiName: [\n            {required: true, message: '接口名称不能为空', trigger: 'blur'}\n          ]\n        },\n        formItem: {\n          apiId: '',\n          apiCode: '',\n          apiName: '',\n          apiCategory: 'default',\n          path: '',\n          status: 1,\n          isAuth: 1,\n          openSwatch: false,\n          authSwatch: true,\n          serviceId: '',\n          priority: 0,\n          apiDesc: '',\n          isOpen: 1\n        },\n        columns: [\n          {\n            type: 'selection',\n            width: 60,\n            align: 'center'\n          },\n          {\n            title: '编码',\n            key: 'apiCode',\n            width: 300,\n          },\n          {\n            title: '名称',\n            key: 'apiName',\n            slot: 'apiName',\n            width: 300,\n            filters: [\n              {\n                label: '禁用',\n                value: 0\n              },\n              {\n                label: '启用',\n                value: 1\n              }\n            ],\n            filterMultiple: false,\n            filterMethod (value, row) {\n              if (value === 0) {\n                return row.status === 0\n              } else if (value === 1) {\n                return row.status === 1\n              }\n            }\n          },\n          {\n            title: '地址',\n            key: 'path',\n            width: 200,\n          },\n          {\n            title: '分类',\n            key: 'apiCategory',\n            width: 100,\n          },\n          {\n            title: '服务名称',\n            key: 'serviceId',\n            width: 200\n          },\n          {\n            title: '接口安全',\n            key: 'isAuth',\n            slot: 'isAuth',\n            width: 300\n          },\n          {\n            title: '描述',\n            key: 'apiDesc',\n            width: 200\n          },\n          {\n            title: '最后更新时间',\n            key: 'updateTime',\n            width: 180\n          },\n          {\n            title: '操作',\n            key: '',\n            slot: 'action',\n            fixed: 'right',\n            width: 120\n          }\n        ],\n        data: []\n      }\n    },\n    methods: {\n      handleModal (data) {\n        if (data) {\n          this.modalTitle = '编辑接口 - ' + data.apiName\n          this.formItem = Object.assign({}, this.formItem, data)\n        } else {\n          this.modalTitle = '添加接口'\n        }\n        this.formItem.status = this.formItem.status + ''\n        this.formItem.isAuth = this.formItem.isAuth + ''\n        this.formItem.isOpen = this.formItem.isOpen + ''\n        this.modalVisible = true\n      },\n      handleResetForm (form) {\n        this.$refs[form].resetFields()\n      },\n      handleReset () {\n        const newData = {\n          apiId: '',\n          apiCode: '',\n          apiName: '',\n          apiCategory: 'default',\n          path: '',\n          status: 1,\n          isAuth: 1,\n          serviceId: '',\n          priority: 0,\n          apiDesc: '',\n          isOpen: 1\n        }\n        this.formItem = newData\n        //重置验证\n        this.handleResetForm('form1')\n        this.modalVisible = false\n        this.saving = false\n      },\n      handleSubmit () {\n        this.$refs['form1'].validate((valid) => {\n          if (valid) {\n            this.saving = true\n            if (this.formItem.apiId) {\n              \n            } else {\n              \n            }\n          }\n        })\n      },\n      handleRemove (data) {\n        this.$Modal.confirm({\n          title: '确定删除吗？',\n          onOk: () => {\n            \n          }\n        })\n      },\n      handleSearch (page) {\n        this.tableSelection = []\n        if (page) {\n          this.pageInfo.page = page\n        }\n        this.loading = true\n        \n      },\n      handlePage (current) {\n        this.pageInfo.page = current\n        this.handleSearch()\n      },\n      handlePageSize (size) {\n        this.pageInfo.limit = size\n        this.handleSearch()\n      },\n      handleLoadServiceList () {\n        \n      },\n      handleTableSelectChange(selection){\n        this.tableSelection = selection\n      },\n      handleBatchClick(name){\n        if (name) {\n          this.$Modal.confirm({\n            title: `已勾选${this.tableSelection.length}项,是否继续执行操作？`,\n            onOk: () => {\n              let ids = []\n              this.tableSelection.map(item => {\n                if (!ids.includes(item.apiId)) {\n                  ids.push(item.apiId)\n                }\n              })\n              switch (name) {\n                case'remove':\n                  \n                  break\n                case'open1':\n                  \n                  break\n                case'open2':\n                  \n                  break\n                case'status1':\n                  \n                  break\n                case'status2':\n                  \n                  break\n                case'status3':\n                  \n                  break\n                case'auth1':\n                  \n                  break\n                case'auth2':\n                  \n                  break\n              }\n            }\n          })\n        }\n      }\n    },\n    mounted: function () {\n      this.handleLoadServiceList()\n      this.handleSearch()\n    }\n  }\n</script>\n"]}]}