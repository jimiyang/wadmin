{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/components/main/components/user/user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/components/main/components/user/user.vue","mtime":1575947821791},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport './user.less'\nimport {mapActions} from 'vuex'\nimport { sub } from '@/libs/tools'\n\nconst ColorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\nconst  rnd = ((n, m) => {\n  let random = Math.floor(Math.random()*(m-n+1)+n);\n  return random\n})\n\nexport default {\n  name: 'User',\n  props: {\n    userName: {\n      type: String,\n      default: ''\n    },\n    nickName: {\n      type: String,\n      default: ''\n    },\n    userAvatar: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      color: ColorList[rnd(0,ColorList.length-1)]\n    }\n  },\n  computed:{\n    getNicknameAt(){\n      return this.nickName?sub(this.nickName,2,false):''\n    }\n  },\n  methods: {\n    ...mapActions([\n      'handleLogout'\n    ]),\n    handleClick (name) {\n      switch (name) {\n        case 'setting':\n          this.$router.push({\n            name: 'setting'\n          })\n            break\n        case 'logout':\n          this.handleLogout().then(() => {\n            // 地址栏重新刷新\n            location.reload()\n          })\n          break\n      }\n    }\n  }\n}\n",{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user.vue","sourceRoot":"src/components/main/components/user","sourcesContent":["<template>\n  <div class=\"user-avatar-dropdown\">\n    <Dropdown @on-click=\"handleClick\">\n      <Avatar :style=\"{background: color}\" :src=\"userAvatar\">{{getNicknameAt}}</Avatar>\n      <label class=\"user-name\">{{userName}}</label>\n      <Icon :size=\"18\" type=\"md-arrow-dropdown\"></Icon>\n      <DropdownMenu slot=\"list\">\n        <DropdownItem name=\"setting\"><Icon size=\"16\" type=\"md-person\" /> 个人设置</DropdownItem>\n        <DropdownItem divided name=\"logout\"><Icon size=\"16\" type=\"md-power\" /> 退出登录</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  </div>\n</template>\n\n<script>\n  import './user.less'\n  import {mapActions} from 'vuex'\n  import { sub } from '@/libs/tools'\n\n  const ColorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\n  const  rnd = ((n, m) => {\n    let random = Math.floor(Math.random()*(m-n+1)+n);\n    return random\n  })\n\n  export default {\n    name: 'User',\n    props: {\n      userName: {\n        type: String,\n        default: ''\n      },\n      nickName: {\n        type: String,\n        default: ''\n      },\n      userAvatar: {\n        type: String,\n        default: ''\n      }\n    },\n    data () {\n      return {\n        color: ColorList[rnd(0,ColorList.length-1)]\n      }\n    },\n    computed:{\n      getNicknameAt(){\n        return this.nickName?sub(this.nickName,2,false):''\n      }\n    },\n    methods: {\n      ...mapActions([\n        'handleLogout'\n      ]),\n      handleClick (name) {\n        switch (name) {\n          case 'setting':\n            this.$router.push({\n              name: 'setting'\n            })\n              break\n          case 'logout':\n            this.handleLogout().then(() => {\n              // 地址栏重新刷新\n              location.reload()\n            })\n            break\n        }\n      }\n    }\n  }\n</script>\n"]}]}