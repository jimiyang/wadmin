{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/msg/webhook/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/msg/webhook/index.vue","mtime":1576046447677},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'MsgHttpLogs',\n  data () {\n    return {\n      drawer: false,\n      currentRow: {},\n      loading: false,\n      pageInfo: {\n        total: 0,\n        page: 1,\n        limit: 10,\n        url: '',\n        type: '',\n        result: ''\n      },\n      columns: [\n        {\n          type: 'selection',\n          width: 60,\n          align: 'center'\n        },\n        {\n          title: '通知标识',\n          key: 'msgId',\n          width: 200\n        },\n        {\n          title: '通知地址',\n          key: 'url',\n          width: 350\n        },\n        {\n          title: '业务类型',\n          key: 'type',\n          width: 150\n        },\n        {\n          title: '通知结果',\n          key: 'result',\n          slot: 'status',\n          width: 100\n        },\n        {\n          title: '重试次数',\n          key: 'retryNums',\n          width: 100\n        },\n        {\n          title: '通知次数',\n          key: 'totalNums',\n          width: 100\n        },\n        {\n          title: '当前重试时间',\n          key: 'delay',\n          render: (h, params) => {\n            return h('div', (params.row.delay ? params.row.delay / 1000 : 0) + ' s')\n          },\n          width: 200\n        },\n        {\n          title: '最后修改时间',\n          key: 'updateTime'\n        },\n        {\n          title: '详情',\n          slot: 'detail',\n          fixed: 'right',\n          width: 150\n        }\n      ],\n      data: []\n    }\n  },\n  methods: {\n    openDrawer (data) {\n      this.currentRow = data\n      this.drawer = true\n    },\n    handleSearch (page) {\n      if (page) {\n        this.pageInfo.page = page\n      }\n      this.loading = true\n      getNotifyHttpLogs(this.pageInfo).then(res => {\n        this.data = res.data.records\n        this.pageInfo.total = parseInt(res.data.total)\n      }).finally(() => {\n        this.loading = false\n      })\n    },\n    handleResetForm (form) {\n      this.$refs[form].resetFields()\n    },\n    handlePage (current) {\n      this.pageInfo.page = current\n      this.handleSearch()\n    },\n    handlePageSize (size) {\n      this.pageInfo.limit = size\n      this.handleSearch()\n    }\n  },\n  mounted: function () {\n    this.handleSearch()\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/view/module/msg/webhook","sourcesContent":["<template>\n  <div>\n    <Card shadow>\n      <Form ref=\"searchForm\"\n            :model=\"pageInfo\"\n            inline\n            :label-width=\"80\">\n        <FormItem label=\"通知地址\" prop=\"url\">\n          <Input type=\"text\" v-model=\"pageInfo.url\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"业务类型\" prop=\"type\">\n          <Input type=\"text\" v-model=\"pageInfo.type\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"通知结果\" prop=\"result\">\n          <Select v-model=\"pageInfo.result\">\n            <Option value=\"\">全部</Option>\n            <Option value=\"1\">成功</Option>\n            <Option value=\"0\">失败</Option>\n          </Select>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" @click=\"handleSearch(1)\">查询</Button>&nbsp;\n          <Button @click=\"handleResetForm('searchForm')\">重置</Button>\n        </FormItem>\n      </Form>\n\n      <Table border :columns=\"columns\" :data=\"data\" :loading=\"loading\">\n        <template slot=\"status\" slot-scope=\"{ row }\">\n          <Badge v-if=\"row.result===1\" status=\"success\" text=\"成功\"/>\n          <Badge v-else=\"\" status=\"error\" text=\"失败\"/>\n        </template>\n        <template slot=\"detail\" slot-scope=\"{ row }\">\n          <a @click=\"openDrawer(row)\">详情</a>\n        </template>\n      </Table>\n      <Page transfer :total=\"pageInfo.total\" :current=\"pageInfo.page\" :page-size=\"pageInfo.limit\" show-elevator\n            show-sizer\n            show-total\n            @on-change=\"handlePage\" @on-page-size-change='handlePageSize'></Page>\n    </Card>\n    <Drawer width=\"50\" :closable=\"false\" v-model=\"drawer\">\n      <div slot=\"header\">\n        <Badge v-if=\"currentRow.result===1\" status=\"success\"/>\n        <Badge v-else=\"\" status=\"error\"/>\n        {{currentRow.url}}\n\n      </div>\n      <div>\n        <h3>执行参数</h3>\n        <pre>\n              {{ currentRow.data ? JSON.stringify(JSON.parse(currentRow.data), null, 2) : ''}}\n        </pre>\n      </div>\n    </Drawer>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'MsgHttpLogs',\n    data () {\n      return {\n        drawer: false,\n        currentRow: {},\n        loading: false,\n        pageInfo: {\n          total: 0,\n          page: 1,\n          limit: 10,\n          url: '',\n          type: '',\n          result: ''\n        },\n        columns: [\n          {\n            type: 'selection',\n            width: 60,\n            align: 'center'\n          },\n          {\n            title: '通知标识',\n            key: 'msgId',\n            width: 200\n          },\n          {\n            title: '通知地址',\n            key: 'url',\n            width: 350\n          },\n          {\n            title: '业务类型',\n            key: 'type',\n            width: 150\n          },\n          {\n            title: '通知结果',\n            key: 'result',\n            slot: 'status',\n            width: 100\n          },\n          {\n            title: '重试次数',\n            key: 'retryNums',\n            width: 100\n          },\n          {\n            title: '通知次数',\n            key: 'totalNums',\n            width: 100\n          },\n          {\n            title: '当前重试时间',\n            key: 'delay',\n            render: (h, params) => {\n              return h('div', (params.row.delay ? params.row.delay / 1000 : 0) + ' s')\n            },\n            width: 200\n          },\n          {\n            title: '最后修改时间',\n            key: 'updateTime'\n          },\n          {\n            title: '详情',\n            slot: 'detail',\n            fixed: 'right',\n            width: 150\n          }\n        ],\n        data: []\n      }\n    },\n    methods: {\n      openDrawer (data) {\n        this.currentRow = data\n        this.drawer = true\n      },\n      handleSearch (page) {\n        if (page) {\n          this.pageInfo.page = page\n        }\n        this.loading = true\n        getNotifyHttpLogs(this.pageInfo).then(res => {\n          this.data = res.data.records\n          this.pageInfo.total = parseInt(res.data.total)\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      handleResetForm (form) {\n        this.$refs[form].resetFields()\n      },\n      handlePage (current) {\n        this.pageInfo.page = current\n        this.handleSearch()\n      },\n      handlePageSize (size) {\n        this.pageInfo.limit = size\n        this.handleSearch()\n      }\n    },\n    mounted: function () {\n      this.handleSearch()\n    }\n  }\n</script>\n"]}]}