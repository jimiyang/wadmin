{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/components/main/main.vue?vue&type=template&id=5e2104ef&","dependencies":[{"path":"/Users/yanglina/wadmin/src/components/main/main.vue","mtime":1577554020749},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"Layout\",\n    { staticClass: \"skin-blue\", staticStyle: { height: \"100%\" } },\n    [\n      _vm.layout === \"toptest\"\n        ? _c(\n            \"Layout\",\n            { staticClass: \"main-layout-top\", staticStyle: { height: \"100%\" } },\n            [\n              _c(\n                \"Header\",\n                { staticClass: \"main-layout-header\" },\n                [\n                  _c(\"div\", { staticClass: \"main-layout-logo\" }, [\n                    _c(\"img\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: !_vm.collapsed,\n                          expression: \"!collapsed\"\n                        }\n                      ],\n                      key: \"max-logo\",\n                      staticClass: \"max-logo\",\n                      attrs: { src: _vm.maxLogo }\n                    }),\n                    _c(\"img\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.collapsed,\n                          expression: \"collapsed\"\n                        }\n                      ],\n                      key: \"min-logo\",\n                      staticClass: \"min-logo\",\n                      attrs: { src: _vm.minLogo }\n                    })\n                  ]),\n                  _c(\"side-menu\", {\n                    ref: \"sideMenu\",\n                    attrs: {\n                      accordion: \"\",\n                      mode: \"horizontal\",\n                      \"active-name\": _vm.$route.name\n                    },\n                    on: { \"on-select\": _vm.turnToPage }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"Content\",\n                {\n                  class: _vm.mainClass,\n                  style: {\n                    margin: \"70px 20px\",\n                    background: \"#fff\",\n                    minHeight: \"500px\"\n                  }\n                },\n                [\n                  _c(\n                    \"Layout\",\n                    { staticClass: \"main-layout-content-wrapper\" },\n                    [\n                      _c(\"custom-bread-crumb\", {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.screenWidth > 768,\n                            expression: \"screenWidth>768\"\n                          }\n                        ],\n                        staticClass: \"main-layout-bread-crumb\",\n                        attrs: { \"show-icon\": \"\", list: _vm.breadCrumbList }\n                      }),\n                      _c(\n                        \"div\",\n                        { staticClass: \"main-layout-tag-nav-wrapper\" },\n                        [\n                          _c(\"tags-nav\", {\n                            attrs: { value: _vm.$route, list: _vm.tagNavList },\n                            on: {\n                              input: _vm.handleClick,\n                              \"on-close\": _vm.handleCloseTag\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"Content\",\n                        { staticClass: \"main-layout-view-wrapper\" },\n                        [\n                          _c(\"keep-alive\", [_c(\"router-view\")], 1),\n                          _c(\"ABackTop\", {\n                            attrs: {\n                              height: 100,\n                              bottom: 80,\n                              right: 50,\n                              container: \".main-layout-view-wrapper\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _c(\n            \"Layout\",\n            {\n              staticClass: \"main-layout-left\",\n              staticStyle: { height: \"100%\" }\n            },\n            [\n              _c(\n                \"Sider\",\n                {\n                  staticClass: \"left-sider\",\n                  style: { overflow: \"hidden\" },\n                  attrs: {\n                    \"hide-trigger\": \"\",\n                    collapsible: \"\",\n                    width: 220,\n                    \"collapsed-width\": 64\n                  },\n                  model: {\n                    value: _vm.collapsed,\n                    callback: function($$v) {\n                      _vm.collapsed = $$v\n                    },\n                    expression: \"collapsed\"\n                  }\n                },\n                [\n                  _c(\"div\", { staticClass: \"main-layout-logo\" }, [\n                    _c(\"img\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: !_vm.collapsed,\n                          expression: \"!collapsed\"\n                        }\n                      ],\n                      key: \"max-logo\",\n                      staticClass: \"max-logo\",\n                      attrs: { src: _vm.maxLogo }\n                    }),\n                    _c(\"img\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.collapsed,\n                          expression: \"collapsed\"\n                        }\n                      ],\n                      key: \"min-logo\",\n                      staticClass: \"min-logo\",\n                      attrs: { src: _vm.minLogo }\n                    })\n                  ]),\n                  _c(\"side-menu\", {\n                    ref: \"sideMenu\",\n                    attrs: {\n                      accordion: \"\",\n                      \"active-name\": _vm.$route.name,\n                      collapsed: _vm.collapsed,\n                      \"menu-list\": _vm.menuList\n                    },\n                    on: { \"on-select\": _vm.turnToPage }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"Layout\",\n                [\n                  _c(\n                    \"Header\",\n                    { staticClass: \"main-layout-header\" },\n                    [\n                      _c(\"sider-trigger\", {\n                        attrs: { collapsed: _vm.collapsed, icon: \"md-menu\" },\n                        on: { \"on-change\": _vm.handleCollapsedChange }\n                      }),\n                      _c(\"custom-bread-crumb\", {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.screenWidth > 768,\n                            expression: \"screenWidth>768\"\n                          }\n                        ],\n                        staticClass: \"main-layout-bread-crumb\",\n                        attrs: { \"show-icon\": \"\", list: _vm.breadCrumbList }\n                      }),\n                      _c(\"ul\", { staticClass: \"main-layout-header-bar\" }, [\n                        _c(\n                          \"li\",\n                          [\n                            _c(\"fullscreen\", {\n                              attrs: { screenWidth: _vm.screenWidth },\n                              model: {\n                                value: _vm.isFullscreen,\n                                callback: function($$v) {\n                                  _vm.isFullscreen = $$v\n                                },\n                                expression: \"isFullscreen\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"li\",\n                          [\n                            _vm.$config.plugin[\"error-store\"] &&\n                            _vm.$config.plugin[\"error-store\"].showInHeader\n                              ? _c(\"error-store\", {\n                                  attrs: {\n                                    \"has-read\": _vm.hasReadErrorPage,\n                                    count: _vm.errorCount\n                                  }\n                                })\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"li\",\n                          [\n                            _vm.$config.useI18n\n                              ? _c(\"language\", {\n                                  staticStyle: { \"margin-right\": \"10px\" },\n                                  attrs: { lang: _vm.local },\n                                  on: { \"on-lang-change\": _vm.setLocal }\n                                })\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"li\",\n                          [\n                            _c(\"user\", {\n                              attrs: {\n                                \"user-avatar\": _vm.userAvatar,\n                                \"user-name\": _vm.userName\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"li\",\n                          [\n                            _c(\"Icon\", {\n                              attrs: { type: \"md-settings\", size: 18 },\n                              nativeOn: {\n                                click: function($event) {\n                                  _vm.value1 = true\n                                }\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ])\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"Content\",\n                    { class: _vm.mainClass },\n                    [\n                      _c(\n                        \"Layout\",\n                        { staticClass: \"main-layout-content-wrapper\" },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"main-layout-tag-nav-wrapper\" },\n                            [\n                              _c(\"tags-nav\", {\n                                attrs: {\n                                  value: _vm.$route,\n                                  list: _vm.tagNavList\n                                },\n                                on: {\n                                  input: _vm.handleClick,\n                                  \"on-close\": _vm.handleCloseTag\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"Content\",\n                            { staticClass: \"main-layout-view-wrapper\" },\n                            [\n                              _c(\"keep-alive\", [_c(\"router-view\")], 1),\n                              _c(\"ABackTop\", {\n                                attrs: {\n                                  height: 100,\n                                  bottom: 80,\n                                  right: 50,\n                                  container: \".main-layout-view-wrapper\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n      _c(\n        \"Drawer\",\n        {\n          attrs: { closable: false, width: \"300\" },\n          model: {\n            value: _vm.value1,\n            callback: function($$v) {\n              _vm.value1 = $$v\n            },\n            expression: \"value1\"\n          }\n        },\n        [\n          _c(\"h3\", [_vm._v(\"导航布局\")]),\n          _c(\"div\", [\n            _c(\n              \"p\",\n              {\n                staticStyle: {\n                  display: \"inline-block\",\n                  \"margin-left\": \"20px\",\n                  cursor: \"pointer\"\n                },\n                on: {\n                  click: function($event) {\n                    return _vm.changeLayout(\"left\")\n                  }\n                }\n              },\n              [\n                _c(\"img\", {\n                  attrs: { src: require(\"../../assets/images/layout-left.svg\") }\n                })\n              ]\n            ),\n            _c(\n              \"p\",\n              {\n                staticStyle: {\n                  display: \"inline-block\",\n                  \"margin-left\": \"20px\",\n                  cursor: \"pointer\"\n                },\n                on: {\n                  click: function($event) {\n                    return _vm.changeLayout(\"top\")\n                  }\n                }\n              },\n              [\n                _c(\"img\", {\n                  attrs: { src: require(\"../../assets/images/layout-top.svg\") }\n                })\n              ]\n            )\n          ])\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}