{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/system/menus/index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/system/menus/index.vue","mtime":1577552875985},{"path":"/Users/yanglina/wadmin/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.icons {\n  overflow: auto;\n  zoom: 1;\n  height: 300px;\n}\n\n.icons-item {\n  float: left;\n  margin: 6px;\n  width: 60px;\n  text-align: center;\n  list-style: none;\n  cursor: pointer;\n  color: #5c6b77;\n  transition: all .2s ease;\n  position: relative;\n}\n\n.icons-item p {\n  word-break: break-all;\n  overflow: hidden;\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2RA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/view/module/system/menus","sourcesContent":["<template>\n  <div>\n    <Row :gutter=\"8\">\n      <Col :xs=\"8\" :sm=\"8\" :md=\"8\" :lg=\"6\">\n        <Card shadow>\n          <tree-table style=\"max-height:700px;overflow: auto\"\n              expand-key=\"menuName\"\n              @radio-click=\"rowClick\"\n              :expand-type=\"false\"\n              :is-fold=\"false\"\n              :tree-type=\"true\"\n              :selectable=\"false\"\n              :columns=\"columns\"\n              :data=\"data\">\n            <template slot=\"status\" slot-scope=\"scope\">\n              <Badge v-if=\"scope.row.status===1\" status=\"success\"/>\n              <Badge v-else=\"\" status=\"error\"/>\n              <Icon :type=\"scope.row.icon\" size=\"16\"/>\n            </template>\n          </tree-table>\n        </Card>\n      </Col>\n      <Col :xs=\"16\" :sm=\"16\" :md=\"16\" :lg=\"10\">\n      <Card shadow>\n        <div class=\"search-con search-con-top\">\n          <ButtonGroup>\n            <Button type=\"primary\"  @click=\"setEnabled(true)\">添加\n            </Button>\n            <Button type=\"primary\"\n                    @click=\"confirmModal = true\">删除\n            </Button>\n          </ButtonGroup>\n          <Modal\n            v-model=\"confirmModal\"\n            title=\"提示\"\n            @on-ok=\"handleRemove\">\n            确定删除,菜单资源【{{formItem.menuName}}】吗?{{formItem.children && formItem.children.length > 0 ?\n            '存在子菜单,将一起删除.是否继续?' : ''}}\n\n          </Modal>\n        </div>\n        <Form ref=\"menuForm\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"80\">\n          <FormItem label=\"上级菜单\" prop=\"parentId\">\n            <treeselect\n              v-model=\"formItem.parentId\"\n              :options=\"selectTreeData\"\n              :default-expand-level=\"1\"\n              :normalizer=\"treeSelectNormalizer\"/>\n          </FormItem>\n          <FormItem label=\"菜单标识\" prop=\"menuCode\">\n            <Input v-model=\"formItem.menuCode\" placeholder=\"请输入内容\" />\n          </FormItem>\n          <FormItem label=\"菜单名称\" prop=\"menuName\">\n            <Input v-model=\"formItem.menuName\" placeholder=\"请输入内容\" />\n          </FormItem>\n          <FormItem label=\"页面地址\" prop=\"path\">\n            <Input v-model=\"formItem.path\" placeholder=\"请输入内容\">\n            <Select v-model=\"formItem.scheme\" slot=\"prepend\" style=\"width: 80px\">\n              <Option value=\"/\">/</Option>\n              <Option value=\"http://\">http://</Option>\n              <Option value=\"https://\">https://</Option>\n            </Select>\n            <Select v-model=\"formItem.target\" slot=\"append\" style=\"width: 100px\">\n              <Option value=\"_self\">窗口内打开</Option>\n              <Option :disabled=\"formItem.scheme==='/'\" value=\"_blank\">新窗口打开</Option>\n            </Select>\n            < />\n            <span v-if=\"formItem.scheme === '/'\">前端组件：/view/module/{{formItem.path}}.vue</span>\n            <span v-else=\"\">跳转地址：{{formItem.scheme}}{{formItem.path}}</span>\n          </FormItem>\n          <FormItem label=\"图标\">\n            <Input v-model=\"formItem.icon\" placeholder=\"请输入内容\">\n            <Icon size=\"22\" :type=\"formItem.icon\" slot=\"prepend\"/>\n            <Poptip width=\"600\" slot=\"append\" placement=\"bottom\">\n              <Button icon=\"ios-search\"></Button>\n              <div slot=\"content\">\n                <ul class=\"icons\">\n                  <li class=\"icons-item\" :title=\"item\" @click=\"onIconClick(item)\" v-for=\"(item, index) in selectIcons\" :key=\"index\">\n                    <Icon :type=\"item\" size=\"28\"/>\n                    <p>{{item}}</p>\n                  </li>\n                </ul>\n              </div>\n            </Poptip>\n            </Input>\n          </FormItem>\n          <FormItem label=\"优先级\">\n            <InputNumber v-model=\"formItem.priority\"></InputNumber>\n          </FormItem>\n          <FormItem label=\"状态\">\n            <RadioGroup v-model=\"formItem.status\" type=\"button\">\n              <Radio label=\"0\">禁用</Radio>\n              <Radio label=\"1\">启用</Radio>\n            </RadioGroup>\n          </FormItem>\n          <FormItem label=\"描述\">\n            <Input v-model=\"formItem.menuDesc\" type=\"textarea\" placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem>\n            <Button @click=\"handleSubmit\" :loading=\"saving\" type=\"primary\">保存</Button>\n            <Button @click=\"setEnabled(true)\" style=\"margin-left: 8px\">重置</Button>\n          </FormItem>\n        </Form>\n      </Card>\n      </Col>\n      <Col :xs=\"16\" :sm=\"16\" :md=\"16\" :lg=\"8\">\n      <Card shadow>\n        <menu-action :value=\"formItem\"></menu-action>\n      </Card>\n      </Col>\n    </Row>\n  </div>\n</template>\n\n<script>\n  import {listConvertTree, updateTreeNode} from '@/libs/util'\n  //import {getMenus, updateMenu, addMenu, removeMenu} from '@/api/menu'\n  import MenuAction from './menu-action.vue'\n  import icons from './icons'\n\n  export default {\n    name: 'SystemMenu',\n    components: {\n      MenuAction\n    },\n    data () {\n      const validateEn = (rule, value, callback) => {\n        let reg = /^[_a-zA-Z0-9]+$/\n        if (value === '') {\n          callback(new Error('菜单标识不能为空'))\n        } else if (value !== '' && !reg.test(value)) {\n          callback(new Error('只允许字母、数字、下划线'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        confirmModal: false,\n        saving: false,\n        visible: false,\n        selectIcons: icons,\n        selectTreeData: [{\n          menuId: 0,\n          menuName: '无'\n        }],\n        formItemRules: {\n          parentId: [\n            {required: true, message: '上级菜单', trigger: 'blur'}\n          ],\n          menuCode: [\n            {required: true, validator: validateEn, trigger: 'blur'}\n          ],\n          menuName: [\n            {required: true, message: '菜单名称不能为空', trigger: 'blur'}\n          ]\n        },\n        formItem: {\n          menuId: '',\n          menuCode: '',\n          menuName: '',\n          icon: 'md-document',\n          path: '',\n          scheme: '/',\n          target: '_self',\n          status: 1,\n          parentId: '0',\n          priority: 0,\n          menuDesc: ''\n        },\n        columns: [\n          {\n            title: '菜单名称',\n            key: 'menuName',\n            minWidth: '200px'\n          },\n          {\n            title: '状态',\n            key: 'status',\n            type: 'template',\n            minWidth: '100px',\n            template: 'status'\n          },\n        ],\n        data: []\n      }\n    },\n    methods: {\n      treeSelectNormalizer (node) {\n        return {\n          id: node.menuId,\n          label: node.menuName,\n          children: node.children\n        }\n      },\n      setSelectTree (data) {\n        this.selectTreeData = data\n      },\n      setEnabled (enabled) {\n        if (enabled) {\n          this.handleReset()\n        }\n      },\n      rowClick (data) {\n        this.handleReset()\n        if (data) {\n          this.formItem = Object.assign({}, data.row)\n        }\n        this.formItem.status = this.formItem.status + ''\n      },\n      handleReset () {\n        const newData = {\n          menuId: '',\n          menuCode: '',\n          menuName: '',\n          icon: 'md-document',\n          path: '',\n          scheme: '/',\n          target: '_self',\n          status: '1',\n          parentId: '0',\n          priority: 0,\n          menuDesc: ''\n        }\n        this.formItem = newData\n        this.$refs['menuForm'].resetFields()\n        this.saving = false\n      },\n      handleSubmit () {\n        this.$refs['menuForm'].validate((valid) => {\n          if (valid) {\n            this.saving = true\n            if (this.formItem.menuId) {\n              updateMenu(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            } else {\n              addMenu(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          }\n        })\n      },\n      handleRemove () {\n        removeMenu(this.formItem.menuId).then(res => {\n          this.handleReset()\n          this.handleSearch()\n          if (res.code === 0) {\n            this.$Message.success('删除成功')\n          }\n        })\n      },\n      onIconClick (item) {\n        this.formItem.icon = item\n      },\n      handleSearch () {\n        getMenus().then(res => {\n          let opt = {\n            primaryKey: 'menuId',\n            parentKey: 'parentId',\n            startPid: '0'\n          }\n          this.data = listConvertTree(res.data, opt)\n          this.setSelectTree(this.data)\n        })\n      }\n    },\n    mounted: function () {\n      //this.handleSearch()\n    }\n  }\n</script>\n<style>\n  .icons {\n    overflow: auto;\n    zoom: 1;\n    height: 300px;\n  }\n\n  .icons-item {\n    float: left;\n    margin: 6px;\n    width: 60px;\n    text-align: center;\n    list-style: none;\n    cursor: pointer;\n    color: #5c6b77;\n    transition: all .2s ease;\n    position: relative;\n  }\n\n  .icons-item p {\n    word-break: break-all;\n    overflow: hidden;\n  }\n</style>\n"]}]}