{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/components/main/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/components/main/main.vue","mtime":1577554025212},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import SideMenu from './components/side-menu/side-menu'\n  import HeaderBar from './components/header-bar'\n  import TagsNav from './components/tags-nav'\n  import User from './components/user'\n  import ABackTop from './components/a-back-top'\n  import Fullscreen from './components/fullscreen'\n  import Language from './components/language'\n  import ErrorStore from './components/error-store'\n  import siderTrigger from './components/header-bar/sider-trigger'\n  import customBreadCrumb from './components/header-bar/custom-bread-crumb'\n  import {mapMutations, mapActions, mapGetters} from 'vuex'\n  import {getNewTagList, getNextRoute, routeEqual} from '@/libs/util'\n  import minLogo from '@/assets/images/logo-min.png'\n  import maxLogo from '@/assets/images/logo.png'\n  import './main.less'\n  import Layout from \"../../../node_modules/iview/src/components/layout/layout\";\n  export default {\n    name: 'Main',\n    components: {\n      Layout, \n\t\t\tSideMenu,\n      HeaderBar,\n      Language,\n      TagsNav,\n      Fullscreen,\n      ErrorStore,\n      User,\n      ABackTop,\n      customBreadCrumb,\n      siderTrigger\n    },\n    data () {\n      return {\n        value1: false,\n        collapsed: false,\n        layout:'',\n        minLogo,\n        maxLogo,\n        isFullscreen: false,\n        screenWidth: 0,\n        userInfo: JSON.parse(window.localStorage.getItem('userInfo')),\n      }\n    },\n    computed: {\n      ...mapGetters([\n        'errorCount'\n      ]),\n      breadCrumbList () {\n        return this.$store.state.app.breadCrumbList\n      },\n      headerLogoClass () {\n        return [\n          'main-layout-header-logo',\n          this.collapsed ? 'main-layout-header-logo-collapsed' : ''\n        ]\n      },\n      mainClass () {\n        return [\n          'main-layout-content',\n          this.collapsed ? 'main-layout-content-collapsed' : ''\n        ]\n      },\n      tagNavList () {\n        return this.$store.state.app.tagNavList\n      },\n      tagRouter () {\n        return this.$store.state.app.tagRouter\n      },\n      userAvatar () {\n        return this.$store.state.user.avatarImgPath\n      },\n      userName () {\n        return this.userInfo.username //'我是吉米小绵羊啊'\n      },\n      menuList () {\n        return this.$store.getters.menuList\n      },\n      local () {\n        return this.$store.state.app.local\n      },\n      hasReadErrorPage () {\n        return this.$store.state.app.hasReadErrorPage\n      }\n    },\n    methods: {\n      ...mapMutations([\n        'setBreadCrumb',\n        'setTagNavList',\n        'addTag',\n        'setLocal'\n      ]),\n      ...mapActions([\n        'handleLogin'\n      ]),\n      turnToPage (route) {\n        let {name, params, query} = {}\n        if (typeof route === 'string') name = route\n        else {\n          name = route.name\n          params = route.params\n          query = route.query\n        }\n        if (name.indexOf('isTurnByHref_') > -1) {\n          window.open(name.split('_')[1])\n          return\n        }\n        this.$router.push({\n          name,\n          params,\n          query\n        })\n      },\n      changeLayout(layout){\n        if(!layout){\n          layout = 'left'\n        }\n        localStorage.setItem(\"layout\",layout);\n        this.$Message.info(\"选择布局:\"+layout)\n        this.layout = layout\n      },\n      handleCollapsedChange (state) {\n        this.collapsed = state\n      },\n      handleCloseTag (res, type, route) {\n        if (type === 'all') {\n          this.turnToPage(this.$config.homeName)\n        } else if (routeEqual(this.$route, route)) {\n          if (type !== 'others') {\n            const nextRoute = getNextRoute(this.tagNavList, route)\n            this.$router.push(nextRoute)\n          }\n        }\n        this.setTagNavList(res)\n      },\n      handleClick (item) {\n        this.turnToPage(item)\n      },\n      setLayout(){\n        let layout = localStorage.getItem(\"layout\");\n        if(!layout){\n          layout = 'left'\n          localStorage.setItem(\"layout\",layout);\n        }\n        this.layout = layout\n      }\n    },\n    watch: {\n      screenWidth(val) {\n        const  that = this;\n        if (val < 768) {\n          // 小于768强制折叠\n          that.handleCollapsedChange(true)\n        } else {\n          that.handleCollapsedChange(false)\n        }\n      },\n      '$route' (newRoute) {\n        const {name, query, params, meta} = newRoute\n        this.addTag({\n          route: {name, query, params, meta},\n          type: 'push'\n        })\n        this.setBreadCrumb(newRoute)\n        this.setTagNavList(getNewTagList(this.tagNavList, newRoute))\n        //this.$refs['sideMenu'].updateOpenName(newRoute.name)\n      }\n    },\n    mounted () {\n      const that = this\n      // 宽度适应\n      that.screenWidth = document.body.clientWidth\n      window.onresize = () => {\n        return (() => {\n          that.screenWidth = document.body.clientWidth\n        })()\n      }\n      // 设置布局\n      this.setLayout()\n      // 初始化设置面包屑导航和标签导航\n      this.setTagNavList()\n      this.addTag({\n        route: this.$store.state.app.homeRoute\n      })\n      this.setBreadCrumb(this.$route)\n      // 设置初始语言\n      //this.setLocal(this.$i18n.locale)\n      // 如果当前打开页面不在标签栏中，跳到homeName页\n      if (!this.tagNavList.find(item => item.name === this.$route.name)) {\n        this.$router.push({\n          name: this.$config.homeName\n        })\n      }\n    }\n  }\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"main.vue","sourceRoot":"src/components/main","sourcesContent":["<template >\n  <Layout style=\"height: 100%\" class=\"skin-blue\">\n    <Layout v-if=\"layout === 'toptest'\" style=\"height: 100%\" class=\"main-layout-top\">\n      <Header class=\"main-layout-header\">\n        <div class=\"main-layout-logo\">\n          <img v-show=\"!collapsed\" class=\"max-logo\" :src=\"maxLogo\"  key=\"max-logo\" />\n          <img v-show=\"collapsed\" class=\"min-logo\" :src=\"minLogo\" key=\"min-logo\" />\n        </div>\n        <side-menu accordion ref=\"sideMenu\"  mode=\"horizontal\" :active-name=\"$route.name\"  @on-select=\"turnToPage\"\n         ></side-menu>\n      </Header>\n        <Content :class=\"mainClass\" :style=\"{margin: '70px 20px', background: '#fff', minHeight: '500px'}\">\n          <Layout class=\"main-layout-content-wrapper\">\n            <custom-bread-crumb class=\"main-layout-bread-crumb\" v-show=\"screenWidth>768\" show-icon :list=\"breadCrumbList\"></custom-bread-crumb>\n            <div class=\"main-layout-tag-nav-wrapper\">\n              <tags-nav :value=\"$route\" @input=\"handleClick\" :list=\"tagNavList\" @on-close=\"handleCloseTag\"/>\n            </div>\n            <Content class=\"main-layout-view-wrapper\">\n              <keep-alive>\n                <router-view/>\n              </keep-alive>\n              <ABackTop :height=\"100\" :bottom=\"80\" :right=\"50\" container=\".main-layout-view-wrapper\"></ABackTop>\n            </Content>\n          </Layout>\n        </Content>\n    </Layout>\n\n    <Layout v-else=\"\" style=\"height: 100%\" class=\"main-layout-left\">\n      <Sider hide-trigger collapsible :width=\"220\" :collapsed-width=\"64\" v-model=\"collapsed\" class=\"left-sider\"\n             :style=\"{overflow: 'hidden'}\">\n        <div class=\"main-layout-logo\">\n          <img v-show=\"!collapsed\" class=\"max-logo\" :src=\"maxLogo\"  key=\"max-logo\" />\n          <img v-show=\"collapsed\" class=\"min-logo\" :src=\"minLogo\" key=\"min-logo\" />\n        </div>\n        <side-menu accordion ref=\"sideMenu\" :active-name=\"$route.name\" :collapsed=\"collapsed\" @on-select=\"turnToPage\"\n          :menu-list=\"menuList\">\n        </side-menu>\n      </Sider>\n      <Layout>\n      <Header class=\"main-layout-header\">\n          <sider-trigger :collapsed=\"collapsed\" icon=\"md-menu\" @on-change=\"handleCollapsedChange\"></sider-trigger>\n          <custom-bread-crumb class=\"main-layout-bread-crumb\" v-show=\"screenWidth>768\" show-icon :list=\"breadCrumbList\"></custom-bread-crumb>\n          <ul class=\"main-layout-header-bar\">\n            <li>\n              <fullscreen :screenWidth=\"screenWidth\" v-model=\"isFullscreen\"/>\n            </li>\n            <li>\n              <error-store v-if=\"$config.plugin['error-store'] && $config.plugin['error-store'].showInHeader\"  :has-read=\"hasReadErrorPage\" :count=\"errorCount\"></error-store>\n            </li>\n            <li>\n              <language v-if=\"$config.useI18n\" @on-lang-change=\"setLocal\" style=\"margin-right: 10px;\" :lang=\"local\"/>\n            </li>\n            <li>\n              <user :user-avatar=\"userAvatar\" :user-name=\"userName\"/>\n            </li>\n            <li>\n              <Icon @click.native=\"value1 = true\" type=\"md-settings\" :size=\"18\"></Icon>\n            </li>\n          </ul>\n        </Header>\n        <Content :class=\"mainClass\">\n          <Layout class=\"main-layout-content-wrapper\">\n              <div class=\"main-layout-tag-nav-wrapper\">\n                <tags-nav :value=\"$route\" @input=\"handleClick\" :list=\"tagNavList\" @on-close=\"handleCloseTag\"/>\n              </div>\n              <Content class=\"main-layout-view-wrapper\">\n                <keep-alive>\n                  <router-view/>\n                </keep-alive>\n                <ABackTop :height=\"100\" :bottom=\"80\" :right=\"50\" container=\".main-layout-view-wrapper\"></ABackTop>\n              </Content>\n          </Layout>\n        </Content>\n      </Layout>\n    </Layout>\n    <Drawer :closable=\"false\" width=\"300\" v-model=\"value1\">\n      <h3>导航布局</h3>\n      <div>\n        <p @click=\"changeLayout('left')\" style=\"display: inline-block;margin-left: 20px;cursor: pointer\"><img src=\"../../assets/images/layout-left.svg\"/></p>\n        <p @click=\"changeLayout('top')\" style=\"display: inline-block;margin-left: 20px;cursor: pointer\"><img src=\"../../assets/images/layout-top.svg\"/></p>\n      </div>\n    </Drawer>\n  </Layout>\n</template>\n<script>\n  import SideMenu from './components/side-menu/side-menu'\n  import HeaderBar from './components/header-bar'\n  import TagsNav from './components/tags-nav'\n  import User from './components/user'\n  import ABackTop from './components/a-back-top'\n  import Fullscreen from './components/fullscreen'\n  import Language from './components/language'\n  import ErrorStore from './components/error-store'\n  import siderTrigger from './components/header-bar/sider-trigger'\n  import customBreadCrumb from './components/header-bar/custom-bread-crumb'\n  import {mapMutations, mapActions, mapGetters} from 'vuex'\n  import {getNewTagList, getNextRoute, routeEqual} from '@/libs/util'\n  import minLogo from '@/assets/images/logo-min.png'\n  import maxLogo from '@/assets/images/logo.png'\n  import './main.less'\n  import Layout from \"../../../node_modules/iview/src/components/layout/layout\";\n  export default {\n    name: 'Main',\n    components: {\n      Layout, \n\t\t\tSideMenu,\n      HeaderBar,\n      Language,\n      TagsNav,\n      Fullscreen,\n      ErrorStore,\n      User,\n      ABackTop,\n      customBreadCrumb,\n      siderTrigger\n    },\n    data () {\n      return {\n        value1: false,\n        collapsed: false,\n        layout:'',\n        minLogo,\n        maxLogo,\n        isFullscreen: false,\n        screenWidth: 0,\n        userInfo: JSON.parse(window.localStorage.getItem('userInfo')),\n      }\n    },\n    computed: {\n      ...mapGetters([\n        'errorCount'\n      ]),\n      breadCrumbList () {\n        return this.$store.state.app.breadCrumbList\n      },\n      headerLogoClass () {\n        return [\n          'main-layout-header-logo',\n          this.collapsed ? 'main-layout-header-logo-collapsed' : ''\n        ]\n      },\n      mainClass () {\n        return [\n          'main-layout-content',\n          this.collapsed ? 'main-layout-content-collapsed' : ''\n        ]\n      },\n      tagNavList () {\n        return this.$store.state.app.tagNavList\n      },\n      tagRouter () {\n        return this.$store.state.app.tagRouter\n      },\n      userAvatar () {\n        return this.$store.state.user.avatarImgPath\n      },\n      userName () {\n        return this.userInfo.username //'我是吉米小绵羊啊'\n      },\n      menuList () {\n        return this.$store.getters.menuList\n      },\n      local () {\n        return this.$store.state.app.local\n      },\n      hasReadErrorPage () {\n        return this.$store.state.app.hasReadErrorPage\n      }\n    },\n    methods: {\n      ...mapMutations([\n        'setBreadCrumb',\n        'setTagNavList',\n        'addTag',\n        'setLocal'\n      ]),\n      ...mapActions([\n        'handleLogin'\n      ]),\n      turnToPage (route) {\n        let {name, params, query} = {}\n        if (typeof route === 'string') name = route\n        else {\n          name = route.name\n          params = route.params\n          query = route.query\n        }\n        if (name.indexOf('isTurnByHref_') > -1) {\n          window.open(name.split('_')[1])\n          return\n        }\n        this.$router.push({\n          name,\n          params,\n          query\n        })\n      },\n      changeLayout(layout){\n        if(!layout){\n          layout = 'left'\n        }\n        localStorage.setItem(\"layout\",layout);\n        this.$Message.info(\"选择布局:\"+layout)\n        this.layout = layout\n      },\n      handleCollapsedChange (state) {\n        this.collapsed = state\n      },\n      handleCloseTag (res, type, route) {\n        if (type === 'all') {\n          this.turnToPage(this.$config.homeName)\n        } else if (routeEqual(this.$route, route)) {\n          if (type !== 'others') {\n            const nextRoute = getNextRoute(this.tagNavList, route)\n            this.$router.push(nextRoute)\n          }\n        }\n        this.setTagNavList(res)\n      },\n      handleClick (item) {\n        this.turnToPage(item)\n      },\n      setLayout(){\n        let layout = localStorage.getItem(\"layout\");\n        if(!layout){\n          layout = 'left'\n          localStorage.setItem(\"layout\",layout);\n        }\n        this.layout = layout\n      }\n    },\n    watch: {\n      screenWidth(val) {\n        const  that = this;\n        if (val < 768) {\n          // 小于768强制折叠\n          that.handleCollapsedChange(true)\n        } else {\n          that.handleCollapsedChange(false)\n        }\n      },\n      '$route' (newRoute) {\n        const {name, query, params, meta} = newRoute\n        this.addTag({\n          route: {name, query, params, meta},\n          type: 'push'\n        })\n        this.setBreadCrumb(newRoute)\n        this.setTagNavList(getNewTagList(this.tagNavList, newRoute))\n        //this.$refs['sideMenu'].updateOpenName(newRoute.name)\n      }\n    },\n    mounted () {\n      const that = this\n      // 宽度适应\n      that.screenWidth = document.body.clientWidth\n      window.onresize = () => {\n        return (() => {\n          that.screenWidth = document.body.clientWidth\n        })()\n      }\n      // 设置布局\n      this.setLayout()\n      // 初始化设置面包屑导航和标签导航\n      this.setTagNavList()\n      this.addTag({\n        route: this.$store.state.app.homeRoute\n      })\n      this.setBreadCrumb(this.$route)\n      // 设置初始语言\n      //this.setLocal(this.$i18n.locale)\n      // 如果当前打开页面不在标签栏中，跳到homeName页\n      if (!this.tagNavList.find(item => item.name === this.$route.name)) {\n        this.$router.push({\n          name: this.$config.homeName\n        })\n      }\n    }\n  }\n</script>\n"]}]}