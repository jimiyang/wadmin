{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/system/developer/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/system/developer/index.vue","mtime":1576046339435},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nexport default {\n  name: 'SystemDeveloper',\n  data() {\n\n    const validateEn = (rule, value, callback) => {\n      let reg = /^[_a-zA-Z0-9]+$/\n      let reg2 = /^.{4,18}$/;\n      // 长度为6到18个字符\n      if (value === '') {\n        callback(new Error('登录名不能为空'))\n      } else if (value !== '' && !reg.test(value)) {\n        callback(new Error('只允许字母、数字、下划线'))\n      } else if (value !== '' && !reg2.test(value)) {\n        callback(new Error('长度6到18个字符'))\n      } else {\n        callback()\n      }\n    }\n    const validatePass = (rule, value, callback) => {\n      let reg2 = /^.{6,18}$/;\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else if (value !== this.formItem.password) {\n        callback(new Error('两次输入密码不一致'))\n      } else if (value !== '' && !reg2.test(value)) {\n        callback(new Error('长度6到18个字符'))\n      } else {\n        callback()\n      }\n    }\n\n    const validatePassConfirm = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.formItem.password) {\n        callback(new Error('两次输入密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    const validateMobile = (rule, value, callback) => {\n      let reg = /^1\\d{10}$/\n      if (value !== '' && !reg.test(value)) {\n        callback(new Error('手机号码格式不正确'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      loading: false,\n      saving: false,\n      modalVisible: false,\n      modalTitle: '',\n      current: 'form1',\n      forms: [\n        'form1',\n        'form2'\n      ],\n      selectMenus: [],\n      selectRoles: [],\n      pageInfo: {\n        page: 1,\n        pageSize: 10,\n        sort: \"createTime\",\n        order: \"desc\"\n      },\n      formItemRules: {\n        userType: [\n          {required: true, message: '开发者类型不能为空', trigger: 'blur'}\n        ],\n        userName: [\n          {required: true, message: '开发者名不能为空', trigger: 'blur'},\n          {required: true, validator: validateEn, trigger: 'blur'}\n        ],\n        password: [\n          {required: true, validator: validatePass, trigger: 'blur'}\n        ],\n        passwordConfirm: [\n          {required: true, validator: validatePassConfirm, trigger: 'blur'}\n        ],\n        nickName: [\n          {required: true, message: '昵称不能为空', trigger: 'blur'}\n        ],\n        email: [\n          {required: false, type: 'email', message: '邮箱格式不正确', trigger: 'blur'}\n        ]\n        ,\n        mobile: [\n          {validator: validateMobile, trigger: 'blur'}\n        ]\n      },\n      formItem: {\n        userId: '',\n        userName: '',\n        nickName: '',\n        password: '',\n        passwordConfirm: '',\n        status: 1,\n        companyId: '',\n        email: '',\n        mobile: '',\n        userType: 'isp',\n        userDesc: '',\n        avatar: '',\n        grantRoles: [],\n        grantActions: [],\n        grantMenus: [],\n        expireTime: '',\n        isExpired: false\n      },\n      columns: [\n        {\n          type: 'selection',\n          width: 60,\n        },\n        {\n          title: '登录名',\n          key: 'userName',\n          width: 200\n        },\n        {\n          title: '昵称',\n          key: 'nickName',\n          width: 150\n        },\n        {\n          title: '邮箱',\n          key: 'email',\n          width: 200\n        },\n        {\n          title: '手机号',\n          key: 'mobile',\n          width: 200\n        },\n        {\n          title: '状态',\n          slot: 'status',\n          key: 'status',\n          width: 100\n        },\n        {\n          title: '开发者类型',\n          key: 'userType',\n          width: 150\n        },\n        {\n          title: '注册时间',\n          key: 'createTime',\n          width: 180\n        },\n        {\n          title: '描述',\n          key: 'userDesc'\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          width: 150\n        }\n      ],\n      data: []\n    }\n  },\n  methods: {\n    handleModal(data) {\n      if (data) {\n        this.formItem = Object.assign({}, this.formItem, data)\n      }\n      if (this.current === this.forms[0]) {\n        this.modalTitle = data ? '编辑开发者 - ' + data.userName : '添加开发者'\n        this.modalVisible = true\n      }\n      if (this.current === this.forms[1]) {\n        this.modalTitle = data ? '修改密码 - ' + data.userName : '修改密码'\n        this.modalVisible = true\n      }\n      this.formItem.status = this.formItem.status + ''\n    },\n    handleResetForm(form) {\n      this.$refs[form].resetFields()\n    },\n    handleReset() {\n      const newData = {\n        userId: '',\n        userName: '',\n        nickName: '',\n        password: '',\n        passwordConfirm: '',\n        status: 1,\n        companyId: '',\n        email: '',\n        mobile: '',\n        userType: 'isp',\n        userDesc: '',\n        avatar: '',\n        grantRoles: [],\n        grantMenus: [],\n        grantActions: [],\n        expireTime: '',\n        isExpired: false\n      }\n      this.formItem = newData\n      //重置验证\n      this.forms.map(form => {\n        this.handleResetForm(form)\n      })\n      this.current = this.forms[0]\n      this.formItem.grantMenus = []\n      this.formItem.grantActions = []\n      this.modalVisible = false\n      this.saving = false\n    },\n    handleSubmit() {\n      if (this.current === this.forms[0]) {\n        this.$refs[this.current].validate((valid) => {\n          if (valid) {\n            this.saving = true\n            if (this.formItem.userId) {\n              updateDeveloper(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                  this.handleReset()\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            } else {\n              addDeveloper(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                  this.handleReset()\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          }\n        })\n      }\n\n      if (this.current === this.forms[1] && this.formItem.userId) {\n        this.$refs[this.current].validate((valid) => {\n          if (valid) {\n            this.saving = true\n            updatePassword({\n              userId: this.formItem.userId,\n              password: this.formItem.password\n            }).then(res => {\n              if (res.code === 0) {\n                this.$Message.success('修改成功')\n                this.handleReset()\n              }\n              this.handleSearch()\n            }).finally(() => {\n              this.saving = false\n            })\n          }\n        })\n      }\n    },\n    handleSearch(page) {\n      if (page) {\n        this.pageInfo.page = page\n      }\n      this.loading = true\n      getDevelopers(this.pageInfo).then(res => {\n        this.data = res.data.records\n        this.pageInfo.total = parseInt(res.data.total)\n      }).finally(() => {\n        this.loading = false\n      })\n    },\n    handlePage(current) {\n      this.pageInfo.page = current\n      this.handleSearch()\n    },\n    handlePageSize(size) {\n      this.pageInfo.limit = size\n      this.handleSearch()\n    },\n    handleClick(name, row) {\n      switch (name) {\n        case'sendToEmail':\n          this.$Message.warning(\"发送至密保邮箱,开发中...\")\n          break\n      }\n    },\n    handleTabClick(name){\n      this.current = name\n      this.handleModal();\n    }\n  },\n  mounted: function () {\n    this.handleSearch()\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/view/module/system/developer","sourcesContent":["<template>\n  <div>\n    <Card>\n      <Form ref=\"searchForm\"\n            :model=\"pageInfo\"\n            inline\n            :label-width=\"80\">\n        <FormItem label=\"登录名\" prop=\"userName\">\n          <Input type=\"text\" v-model=\"pageInfo.userName\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"手机号\" prop=\"mobile\">\n          <Input type=\"text\" v-model=\"pageInfo.mobile\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem label=\"邮箱\" prop=\"email\">\n          <Input type=\"text\" v-model=\"pageInfo.email\" placeholder=\"请输入关键字\"/>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" @click=\"handleSearch(1)\">查询</Button>&nbsp;\n          <Button @click=\"handleResetForm('searchForm')\">重置</Button>\n        </FormItem>\n      </Form>\n\n      <div class=\"search-con search-con-top\">\n        <ButtonGroup>\n          <Button :disabled=\"hasAuthority('developerEdit')?false:true\" type=\"primary\"\n                  @click=\"handleModal()\">\n            <span>添加</span>\n          </Button>\n        </ButtonGroup>\n      </div>\n\n      <Table border :columns=\"columns\" :data=\"data\" :loading=\"loading\">\n        <template slot=\"status\" slot-scope=\"{ row }\">\n          <Badge v-if=\"row.status===1\" status=\"success\" text=\"正常\"/>\n          <Badge v-else-if=\"row.status===2\" status=\"warning\" text=\"锁定\"/>\n          <Badge v-else=\"\" status=\"error\" text=\"禁用\"/>\n        </template>\n        <template slot=\"action\" slot-scope=\"{ row }\">\n          <a :disabled=\"hasAuthority('developerEdit')?false:true\" @click=\"handleModal(row)\">编辑</a>&nbsp;\n          <Dropdown v-show=\"hasAuthority('developerEdit')\" transfer ref=\"dropdown\" @on-click=\"handleClick($event,row)\">\n            <a href=\"javascript:void(0)\">\n              <span>更多</span>\n              <Icon type=\"ios-arrow-down\"></Icon>\n            </a>\n            <DropdownMenu slot=\"list\">\n              <DropdownItem name=\"sendToEmail\">发送到密保邮箱</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>&nbsp;\n        </template>\n      </Table>\n      <Page transfer :total=\"pageInfo.total\" :current=\"pageInfo.page\" :page-size=\"pageInfo.limit\" show-elevator\n            show-sizer\n            show-total\n            @on-change=\"handlePage\" @on-page-size-change='handlePageSize'></Page>\n    </Card>\n    <Modal v-model=\"modalVisible\"\n           :title=\"modalTitle\"\n           width=\"40\"\n           @on-cancel=\"handleReset\">\n      <div>\n        <Tabs @on-click=\"handleTabClick\" :value=\"current\">\n          <TabPane label=\"开发者信息\" name=\"form1\">\n            <Form v-show=\"current == 'form1'\" ref=\"form1\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n              <FormItem label=\"开发者类型\" prop=\"userType\">\n                <RadioGroup v-model=\"formItem.userType\">\n                  <Radio label=\"isp\">服务提供商</Radio>\n                  <Radio label=\"normal\">自研开发者</Radio>\n                </RadioGroup>\n              </FormItem>\n              <FormItem label=\"昵称\" prop=\"nickName\">\n                <Input v-model=\"formItem.nickName\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"登录名\" prop=\"userName\">\n                <Input :disabled=\"formItem.userId?true:false\" v-model=\"formItem.userName\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem v-if=\"formItem.userId?false:true\" label=\"登录密码\" prop=\"password\">\n                <Input type=\"password\" v-model=\"formItem.password\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem v-if=\"formItem.userId?false:true\" label=\"再次确认密码\" prop=\"passwordConfirm\">\n                <Input type=\"password\" v-model=\"formItem.passwordConfirm\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"邮箱\" prop=\"email\">\n                <Input v-model=\"formItem.email\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"手机号\" prop=\"mobile\">\n                <Input v-model=\"formItem.mobile\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"状态\">\n                <RadioGroup v-model=\"formItem.status\" type=\"button\">\n                  <Radio label=\"0\">禁用</Radio>\n                  <Radio label=\"1\">正常</Radio>\n                  <Radio label=\"2\">锁定</Radio>\n                </RadioGroup>\n              </FormItem>\n              <FormItem label=\"描述\">\n                <Input v-model=\"formItem.userDesc\" type=\"textarea\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n            </Form>\n          </TabPane>\n          <TabPane :disabled=\"!formItem.userId\" label=\"修改密码\" name=\"form2\">\n            <Form v-show=\"current == 'form2'\" ref=\"form2\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n              <FormItem label=\"登录名\" prop=\"userName\">\n                <Input :disabled=\"formItem.userId?true:false\" v-model=\"formItem.userName\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"登录密码\" prop=\"password\">\n                <Input type=\"password\" v-model=\"formItem.password\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n              <FormItem label=\"再次确认密码\" prop=\"passwordConfirm\">\n                <Input type=\"password\" v-model=\"formItem.passwordConfirm\" placeholder=\"请输入内容\"></Input>\n              </FormItem>\n            </Form>\n          </TabPane>\n        </Tabs>\n        <div class=\"drawer-footer\">\n          <Button type=\"default\" @click=\"handleReset\">取消</Button>&nbsp;\n          <Button type=\"primary\" @click=\"handleSubmit\" :loading=\"saving\">保存</Button>\n        </div>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\n\n\n  export default {\n    name: 'SystemDeveloper',\n    data() {\n\n      const validateEn = (rule, value, callback) => {\n        let reg = /^[_a-zA-Z0-9]+$/\n        let reg2 = /^.{4,18}$/;\n        // 长度为6到18个字符\n        if (value === '') {\n          callback(new Error('登录名不能为空'))\n        } else if (value !== '' && !reg.test(value)) {\n          callback(new Error('只允许字母、数字、下划线'))\n        } else if (value !== '' && !reg2.test(value)) {\n          callback(new Error('长度6到18个字符'))\n        } else {\n          callback()\n        }\n      }\n      const validatePass = (rule, value, callback) => {\n        let reg2 = /^.{6,18}$/;\n        if (value === '') {\n          callback(new Error('请输入密码'))\n        } else if (value !== this.formItem.password) {\n          callback(new Error('两次输入密码不一致'))\n        } else if (value !== '' && !reg2.test(value)) {\n          callback(new Error('长度6到18个字符'))\n        } else {\n          callback()\n        }\n      }\n\n      const validatePassConfirm = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'))\n        } else if (value !== this.formItem.password) {\n          callback(new Error('两次输入密码不一致'))\n        } else {\n          callback()\n        }\n      }\n      const validateMobile = (rule, value, callback) => {\n        let reg = /^1\\d{10}$/\n        if (value !== '' && !reg.test(value)) {\n          callback(new Error('手机号码格式不正确'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        loading: false,\n        saving: false,\n        modalVisible: false,\n        modalTitle: '',\n        current: 'form1',\n        forms: [\n          'form1',\n          'form2'\n        ],\n        selectMenus: [],\n        selectRoles: [],\n        pageInfo: {\n          page: 1,\n          pageSize: 10,\n          sort: \"createTime\",\n          order: \"desc\"\n        },\n        formItemRules: {\n          userType: [\n            {required: true, message: '开发者类型不能为空', trigger: 'blur'}\n          ],\n          userName: [\n            {required: true, message: '开发者名不能为空', trigger: 'blur'},\n            {required: true, validator: validateEn, trigger: 'blur'}\n          ],\n          password: [\n            {required: true, validator: validatePass, trigger: 'blur'}\n          ],\n          passwordConfirm: [\n            {required: true, validator: validatePassConfirm, trigger: 'blur'}\n          ],\n          nickName: [\n            {required: true, message: '昵称不能为空', trigger: 'blur'}\n          ],\n          email: [\n            {required: false, type: 'email', message: '邮箱格式不正确', trigger: 'blur'}\n          ]\n          ,\n          mobile: [\n            {validator: validateMobile, trigger: 'blur'}\n          ]\n        },\n        formItem: {\n          userId: '',\n          userName: '',\n          nickName: '',\n          password: '',\n          passwordConfirm: '',\n          status: 1,\n          companyId: '',\n          email: '',\n          mobile: '',\n          userType: 'isp',\n          userDesc: '',\n          avatar: '',\n          grantRoles: [],\n          grantActions: [],\n          grantMenus: [],\n          expireTime: '',\n          isExpired: false\n        },\n        columns: [\n          {\n            type: 'selection',\n            width: 60,\n          },\n          {\n            title: '登录名',\n            key: 'userName',\n            width: 200\n          },\n          {\n            title: '昵称',\n            key: 'nickName',\n            width: 150\n          },\n          {\n            title: '邮箱',\n            key: 'email',\n            width: 200\n          },\n          {\n            title: '手机号',\n            key: 'mobile',\n            width: 200\n          },\n          {\n            title: '状态',\n            slot: 'status',\n            key: 'status',\n            width: 100\n          },\n          {\n            title: '开发者类型',\n            key: 'userType',\n            width: 150\n          },\n          {\n            title: '注册时间',\n            key: 'createTime',\n            width: 180\n          },\n          {\n            title: '描述',\n            key: 'userDesc'\n          },\n          {\n            title: '操作',\n            slot: 'action',\n            fixed: 'right',\n            width: 150\n          }\n        ],\n        data: []\n      }\n    },\n    methods: {\n      handleModal(data) {\n        if (data) {\n          this.formItem = Object.assign({}, this.formItem, data)\n        }\n        if (this.current === this.forms[0]) {\n          this.modalTitle = data ? '编辑开发者 - ' + data.userName : '添加开发者'\n          this.modalVisible = true\n        }\n        if (this.current === this.forms[1]) {\n          this.modalTitle = data ? '修改密码 - ' + data.userName : '修改密码'\n          this.modalVisible = true\n        }\n        this.formItem.status = this.formItem.status + ''\n      },\n      handleResetForm(form) {\n        this.$refs[form].resetFields()\n      },\n      handleReset() {\n        const newData = {\n          userId: '',\n          userName: '',\n          nickName: '',\n          password: '',\n          passwordConfirm: '',\n          status: 1,\n          companyId: '',\n          email: '',\n          mobile: '',\n          userType: 'isp',\n          userDesc: '',\n          avatar: '',\n          grantRoles: [],\n          grantMenus: [],\n          grantActions: [],\n          expireTime: '',\n          isExpired: false\n        }\n        this.formItem = newData\n        //重置验证\n        this.forms.map(form => {\n          this.handleResetForm(form)\n        })\n        this.current = this.forms[0]\n        this.formItem.grantMenus = []\n        this.formItem.grantActions = []\n        this.modalVisible = false\n        this.saving = false\n      },\n      handleSubmit() {\n        if (this.current === this.forms[0]) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              if (this.formItem.userId) {\n                updateDeveloper(this.formItem).then(res => {\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                    this.handleReset()\n                  }\n                  this.handleSearch()\n                }).finally(() => {\n                  this.saving = false\n                })\n              } else {\n                addDeveloper(this.formItem).then(res => {\n                  if (res.code === 0) {\n                    this.$Message.success('保存成功')\n                    this.handleReset()\n                  }\n                  this.handleSearch()\n                }).finally(() => {\n                  this.saving = false\n                })\n              }\n            }\n          })\n        }\n\n        if (this.current === this.forms[1] && this.formItem.userId) {\n          this.$refs[this.current].validate((valid) => {\n            if (valid) {\n              this.saving = true\n              updatePassword({\n                userId: this.formItem.userId,\n                password: this.formItem.password\n              }).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('修改成功')\n                  this.handleReset()\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          })\n        }\n      },\n      handleSearch(page) {\n        if (page) {\n          this.pageInfo.page = page\n        }\n        this.loading = true\n        getDevelopers(this.pageInfo).then(res => {\n          this.data = res.data.records\n          this.pageInfo.total = parseInt(res.data.total)\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      handlePage(current) {\n        this.pageInfo.page = current\n        this.handleSearch()\n      },\n      handlePageSize(size) {\n        this.pageInfo.limit = size\n        this.handleSearch()\n      },\n      handleClick(name, row) {\n        switch (name) {\n          case'sendToEmail':\n            this.$Message.warning(\"发送至密保邮箱,开发中...\")\n            break\n        }\n      },\n      handleTabClick(name){\n        this.current = name\n        this.handleModal();\n      }\n    },\n    mounted: function () {\n      this.handleSearch()\n    }\n  }\n</script>\n"]}]}