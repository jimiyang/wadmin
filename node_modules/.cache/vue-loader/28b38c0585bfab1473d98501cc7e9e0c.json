{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/gateway/route/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/gateway/route/index.vue","mtime":1576046483809},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'GatewayRoute',\n  data () {\n    return {\n      loading: false,\n      saving: false,\n      modalVisible: false,\n      modalTitle: '',\n      pageInfo: {\n        total: 0,\n        page: 1,\n        limit: 10\n      },\n      selectType: 'service',\n      selectServiceList: [],\n      formItemRules: {\n        routeDesc: [\n          {required: true, message: '路由名称不能为空', trigger: 'blur'}\n        ],\n        routeName: [\n          {required: true, message: '路由标识不能为空', trigger: 'blur'}\n        ],\n        path: [\n          {required: true, message: '路由前缀不能为空', trigger: 'blur'}\n        ]\n      },\n      formItem: {\n        routeId: '',\n        path: '',\n        serviceId: '',\n        url: '',\n        stripPrefix: 0,\n        retryable: 0,\n        status: 1,\n        routeName: '',\n        routeDesc: ''\n      },\n      columns: [\n        {\n          title: '路由名称',\n          key: 'routeDesc',\n          width: 300\n        },\n        {\n          title: '路由标识',\n          key: 'routeName',\n          width: 300\n\n        },\n        {\n          title: '路由前缀',\n          key: 'path',\n          width: 200\n        },\n        {\n          title: '路由方式',\n          slot: 'routeType',\n          width: 300\n        },\n        {\n          title: '忽略前缀',\n          key: 'stripPrefix'\n        },\n        {\n          title: '失败重试',\n          key: 'retryable'\n        },\n        {\n          title: '状态',\n          key: 'status',\n          slot: 'status'\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          width: 120\n        }\n      ],\n      data: []\n    }\n  },\n  methods: {\n    handleModal (data) {\n      if (data) {\n        this.modalTitle = '编辑路由'\n        this.formItem = Object.assign({}, this.formItem, data)\n      } else {\n        this.modalTitle = '添加路由'\n      }\n      this.formItem.status = this.formItem.status + ''\n      this.formItem.stripPrefix = this.formItem.stripPrefix + ''\n      this.formItem.retryable = this.formItem.retryable + ''\n      this.formItem.url = this.formItem.service ? '' : this.formItem.url\n      this.formItem.service = this.formItem.url ? '' : this.formItem.service\n      this.selectType = this.formItem.url ? 'url' : 'service'\n      this.modalVisible = true\n    },\n    handleReset () {\n      const newData = {\n        routeId: '',\n        path: '',\n        serviceId: '',\n        url: '',\n        stripPrefix: 0,\n        retryable: 0,\n        status: 1,\n        routeName: '',\n        routeDesc: ''\n      }\n      this.formItem = newData\n      //重置验证\n      this.$refs['routeForm'].resetFields()\n      this.modalVisible = false\n      this.saving = false\n    },\n    handleSubmit () {\n      this.$refs['routeForm'].validate((valid) => {\n        if (valid) {\n          this.saving = true\n          if (this.formItem.routeId) {\n            updateRoute(this.formItem).then(res => {\n              if (res.code === 0) {\n                this.$Message.success('保存成功')\n                this.handleReset()\n              }\n              this.handleSearch()\n            }).finally(() => {\n              this.saving = false\n            })\n          } else {\n            addRoute(this.formItem).then(res => {\n              this.handleReset()\n              this.handleSearch()\n              if (res.code === 0) {\n                this.$Message.success('保存成功')\n              }\n            }).finally(() => {\n              this.saving = false\n            })\n          }\n        }\n      })\n    },\n    handleSearch (page) {\n      if (page) {\n        this.pageInfo.page = page\n      }\n      this.loading = true\n      getRoutes({page: this.pageInfo.page, limit: this.pageInfo.limit}).then(res => {\n        this.data = res.data.records\n        this.pageInfo.total = parseInt(res.data.total)\n      }).finally(() => {\n        this.loading = false\n      })\n    },\n    handlePage (current) {\n      this.pageInfo.page = current\n      this.handleSearch()\n    },\n    handlePageSize (size) {\n      this.pageInfo.limit = size\n      this.handleSearch()\n    },\n    handleRemove (data) {\n      this.$Modal.confirm({\n        title: '确定删除吗？',\n        onOk: () => {\n          removeRoute(data.routeId).then(res => {\n            if (res.code === 0) {\n              this.pageInfo.page = 1\n              this.$Message.success('删除成功')\n            }\n            this.handleSearch()\n          })\n        }\n      })\n    },\n    handleClick (name, row) {\n      switch (name) {\n        case 'remove':\n          this.handleRemove(row)\n          break\n      }\n    },\n    handleRefreshGateway () {\n      this.$Modal.confirm({\n        title: '提示',\n        content: '将重新加载所有网关实例包括（访问权限、流量限制、IP访问限制、路由缓存），是否继续？',\n        onOk: () => {\n          refreshGateway().then(res => {\n            if (res.code === 0) {\n              this.$Message.success('刷新成功')\n            }\n          })\n        }\n      })\n    }\n  },\n  mounted: function () {\n    this.handleSearch()\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/view/module/gateway/route","sourcesContent":["<template>\n  <div>\n    <Card shadow>\n      <div class=\"search-con search-con-top\">\n        <ButtonGroup>\n          <Button :disabled=\"hasAuthority('gatewayRouteEdit')?false:true\" class=\"search-btn\" type=\"primary\"\n                  @click=\"handleModal()\">\n            <span>添加</span>\n          </Button>\n        </ButtonGroup>\n      </div>\n      <Alert show-icon>谨慎添加或修改路由,如果修改不当,将影响正常访问！&nbsp;<a @click=\"handleRefreshGateway\">手动刷新网关</a></Alert>\n      <Table border :columns=\"columns\" :data=\"data\" :loading=\"loading\">\n        <template slot=\"status\" slot-scope=\"{ row }\">\n          <Badge v-if=\"row.status===1\" status=\"success\" text=\"启用\"/>\n          <Badge v-else=\"\" status=\"error\" text=\"禁用\"/>\n        </template>\n        <template slot=\"routeType\" slot-scope=\"{ row }\">\n          <span v-if=\"row.serviceId?true:false\"><Tag color=\"green\">负载均衡</Tag>{{row.serviceId}}</span>\n          <span v-else-if=\"row.url?true:false\"><Tag color=\"blue\">反向代理</Tag>{{row.url}}</span>\n        </template>\n\n        <template slot=\"action\" slot-scope=\"{ row }\">\n          <a :disabled=\"hasAuthority('gatewayRouteEdit')?false:true\" @click=\"handleModal(row)\">\n            编辑</a>&nbsp;\n          <Dropdown v-show=\"hasAuthority('gatewayRouteEdit')\" transfer ref=\"dropdown\"\n                    @on-click=\"handleClick($event,row)\">\n            <a href=\"javascript:void(0)\">\n              <span>更多</span>\n              <Icon type=\"ios-arrow-down\"></Icon>\n            </a>\n            <DropdownMenu slot=\"list\">\n              <DropdownItem name=\"remove\">删除</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>&nbsp;\n        </template>\n      </Table>\n      <Page :total=\"pageInfo.total\" :current=\"pageInfo.page\" :page-size=\"pageInfo.limit\" show-elevator show-sizer\n            show-total\n            @on-change=\"handlePage\" @on-page-size-change='handlePageSize'></Page>\n    </Card>\n    <Modal v-model=\"modalVisible\"\n           :title=\"modalTitle\"\n           width=\"40\"\n           @on-cancel=\"handleReset\">\n      <div>\n        <Form ref=\"routeForm\" :model=\"formItem\" :rules=\"formItemRules\" :label-width=\"100\">\n          <FormItem label=\"路由名称\" prop=\"routeDesc\">\n            <Input v-model=\"formItem.routeDesc\" placeholder=\"请输入内容\"></Input>\n          </FormItem>\n          <FormItem label=\"路由标识\" prop=\"routeName\">\n            <Input v-model=\"formItem.routeName\" placeholder=\"默认使用服务名称{application.name}\"></Input>\n          </FormItem>\n          <FormItem label=\"路由前缀\" prop=\"path\">\n            <Input v-model=\"formItem.path\" placeholder=\"/{path}/**\"></Input>\n          </FormItem>\n          <FormItem label=\"路由方式\">\n            <Select v-model=\"selectType\">\n              <Option value=\"service\" label=\"负载均衡(serviceId)\"></Option>\n              <Option value=\"url\" label=\"反向代理(url)\"></Option>\n            </Select>\n          </FormItem>\n          <FormItem v-if=\"selectType==='service'\" label=\"负载均衡\" prop=\"serviceId\"\n                    :rules=\"{required: true, message: '服务名称不能为空', trigger: 'blur'}\">\n            <Input v-model=\"formItem.serviceId\" placeholder=\"服务名称application.name\"></Input>\n          </FormItem>\n          <FormItem v-if=\"selectType==='url'\" label=\"反向代理\" prop=\"url\"\n                    :rules=\"[{required: true, message: '服务地址不能为空', trigger: 'blur'},{type: 'url', message: '请输入有效网址', trigger: 'blur'}]\">\n            <Input v-model=\"formItem.url\" placeholder=\"http://localhost:8080\"></Input>\n          </FormItem>\n          <FormItem label=\"忽略前缀\">\n            <RadioGroup v-model=\"formItem.stripPrefix\" type=\"button\">\n              <Radio label=\"0\">否</Radio>\n              <Radio label=\"1\">是</Radio>\n            </RadioGroup>\n          </FormItem>\n          <FormItem label=\"失败重试\">\n            <RadioGroup v-model=\"formItem.retryable\" type=\"button\">\n              <Radio label=\"0\">否</Radio>\n              <Radio label=\"1\">是</Radio>\n            </RadioGroup>\n          </FormItem>\n          <FormItem label=\"状态\">\n            <RadioGroup v-model=\"formItem.status\" type=\"button\">\n              <Radio label=\"0\">禁用</Radio>\n              <Radio label=\"1\">启用</Radio>\n            </RadioGroup>\n          </FormItem>\n        </Form>\n        <div class=\"drawer-footer\">\n          <Button type=\"default\" @click=\"handleReset\">取消</Button>&nbsp;\n          <Button type=\"primary\" @click=\"handleSubmit\" :loading=\"saving\">保存</Button>\n        </div>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'GatewayRoute',\n    data () {\n      return {\n        loading: false,\n        saving: false,\n        modalVisible: false,\n        modalTitle: '',\n        pageInfo: {\n          total: 0,\n          page: 1,\n          limit: 10\n        },\n        selectType: 'service',\n        selectServiceList: [],\n        formItemRules: {\n          routeDesc: [\n            {required: true, message: '路由名称不能为空', trigger: 'blur'}\n          ],\n          routeName: [\n            {required: true, message: '路由标识不能为空', trigger: 'blur'}\n          ],\n          path: [\n            {required: true, message: '路由前缀不能为空', trigger: 'blur'}\n          ]\n        },\n        formItem: {\n          routeId: '',\n          path: '',\n          serviceId: '',\n          url: '',\n          stripPrefix: 0,\n          retryable: 0,\n          status: 1,\n          routeName: '',\n          routeDesc: ''\n        },\n        columns: [\n          {\n            title: '路由名称',\n            key: 'routeDesc',\n            width: 300\n          },\n          {\n            title: '路由标识',\n            key: 'routeName',\n            width: 300\n\n          },\n          {\n            title: '路由前缀',\n            key: 'path',\n            width: 200\n          },\n          {\n            title: '路由方式',\n            slot: 'routeType',\n            width: 300\n          },\n          {\n            title: '忽略前缀',\n            key: 'stripPrefix'\n          },\n          {\n            title: '失败重试',\n            key: 'retryable'\n          },\n          {\n            title: '状态',\n            key: 'status',\n            slot: 'status'\n          },\n          {\n            title: '操作',\n            slot: 'action',\n            fixed: 'right',\n            width: 120\n          }\n        ],\n        data: []\n      }\n    },\n    methods: {\n      handleModal (data) {\n        if (data) {\n          this.modalTitle = '编辑路由'\n          this.formItem = Object.assign({}, this.formItem, data)\n        } else {\n          this.modalTitle = '添加路由'\n        }\n        this.formItem.status = this.formItem.status + ''\n        this.formItem.stripPrefix = this.formItem.stripPrefix + ''\n        this.formItem.retryable = this.formItem.retryable + ''\n        this.formItem.url = this.formItem.service ? '' : this.formItem.url\n        this.formItem.service = this.formItem.url ? '' : this.formItem.service\n        this.selectType = this.formItem.url ? 'url' : 'service'\n        this.modalVisible = true\n      },\n      handleReset () {\n        const newData = {\n          routeId: '',\n          path: '',\n          serviceId: '',\n          url: '',\n          stripPrefix: 0,\n          retryable: 0,\n          status: 1,\n          routeName: '',\n          routeDesc: ''\n        }\n        this.formItem = newData\n        //重置验证\n        this.$refs['routeForm'].resetFields()\n        this.modalVisible = false\n        this.saving = false\n      },\n      handleSubmit () {\n        this.$refs['routeForm'].validate((valid) => {\n          if (valid) {\n            this.saving = true\n            if (this.formItem.routeId) {\n              updateRoute(this.formItem).then(res => {\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                  this.handleReset()\n                }\n                this.handleSearch()\n              }).finally(() => {\n                this.saving = false\n              })\n            } else {\n              addRoute(this.formItem).then(res => {\n                this.handleReset()\n                this.handleSearch()\n                if (res.code === 0) {\n                  this.$Message.success('保存成功')\n                }\n              }).finally(() => {\n                this.saving = false\n              })\n            }\n          }\n        })\n      },\n      handleSearch (page) {\n        if (page) {\n          this.pageInfo.page = page\n        }\n        this.loading = true\n        getRoutes({page: this.pageInfo.page, limit: this.pageInfo.limit}).then(res => {\n          this.data = res.data.records\n          this.pageInfo.total = parseInt(res.data.total)\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      handlePage (current) {\n        this.pageInfo.page = current\n        this.handleSearch()\n      },\n      handlePageSize (size) {\n        this.pageInfo.limit = size\n        this.handleSearch()\n      },\n      handleRemove (data) {\n        this.$Modal.confirm({\n          title: '确定删除吗？',\n          onOk: () => {\n            removeRoute(data.routeId).then(res => {\n              if (res.code === 0) {\n                this.pageInfo.page = 1\n                this.$Message.success('删除成功')\n              }\n              this.handleSearch()\n            })\n          }\n        })\n      },\n      handleClick (name, row) {\n        switch (name) {\n          case 'remove':\n            this.handleRemove(row)\n            break\n        }\n      },\n      handleRefreshGateway () {\n        this.$Modal.confirm({\n          title: '提示',\n          content: '将重新加载所有网关实例包括（访问权限、流量限制、IP访问限制、路由缓存），是否继续？',\n          onOk: () => {\n            refreshGateway().then(res => {\n              if (res.code === 0) {\n                this.$Message.success('刷新成功')\n              }\n            })\n          }\n        })\n      }\n    },\n    mounted: function () {\n      this.handleSearch()\n    }\n  }\n</script>\n"]}]}