{"remainingRequest":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/yanglina/wadmin/src/view/module/system/api/index.vue?vue&type=template&id=31e69fef&xmlns=http%3A%2F%2Fwww.w3.org%2F1999%2Fhtml&","dependencies":[{"path":"/Users/yanglina/wadmin/src/view/module/system/api/index.vue","mtime":1577426275083},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglina/wadmin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"Card\",\n        { attrs: { shadow: \"\" } },\n        [\n          _c(\n            \"Form\",\n            {\n              ref: \"searchForm\",\n              attrs: { model: _vm.pageInfo, inline: \"\", \"label-width\": 80 }\n            },\n            [\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"请求路径\", prop: \"path\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: { type: \"text\", placeholder: \"请输入关键字\" },\n                    model: {\n                      value: _vm.pageInfo.path,\n                      callback: function($$v) {\n                        _vm.$set(_vm.pageInfo, \"path\", $$v)\n                      },\n                      expression: \"pageInfo.path\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"接口名称\", prop: \"apiName\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: { type: \"text\", placeholder: \"请输入关键字\" },\n                    model: {\n                      value: _vm.pageInfo.apiName,\n                      callback: function($$v) {\n                        _vm.$set(_vm.pageInfo, \"apiName\", $$v)\n                      },\n                      expression: \"pageInfo.apiName\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"接口编码\", prop: \"apiCode\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: { type: \"text\", placeholder: \"请输入关键字\" },\n                    model: {\n                      value: _vm.pageInfo.apiCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.pageInfo, \"apiCode\", $$v)\n                      },\n                      expression: \"pageInfo.apiCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"服务名\", prop: \"serviceId\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: { type: \"text\", placeholder: \"请输入关键字\" },\n                    model: {\n                      value: _vm.pageInfo.serviceId,\n                      callback: function($$v) {\n                        _vm.$set(_vm.pageInfo, \"serviceId\", $$v)\n                      },\n                      expression: \"pageInfo.serviceId\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                [\n                  _c(\n                    \"Button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.handleSearch(1)\n                        }\n                      }\n                    },\n                    [_vm._v(\"查询\")]\n                  ),\n                  _vm._v(\" \\n        \"),\n                  _c(\n                    \"Button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          return _vm.handleResetForm(\"searchForm\")\n                        }\n                      }\n                    },\n                    [_vm._v(\"重置\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"search-con search-con-top\" },\n            [\n              _c(\n                \"ButtonGroup\",\n                [\n                  _c(\n                    \"Button\",\n                    {\n                      staticClass: \"search-btn\",\n                      attrs: {\n                        disabled: _vm.hasAuthority(\"systemApiEdit\")\n                          ? false\n                          : true,\n                        type: \"primary\"\n                      },\n                      on: {\n                        click: function($event) {\n                          return _vm.handleModal()\n                        }\n                      }\n                    },\n                    [_c(\"span\", [_vm._v(\"添加\")])]\n                  )\n                ],\n                1\n              ),\n              _vm.tableSelection.length > 0 && _vm.hasAuthority(\"systemApiEdit\")\n                ? _c(\n                    \"Dropdown\",\n                    {\n                      staticStyle: { \"margin-left\": \"20px\" },\n                      on: { \"on-click\": _vm.handleBatchClick }\n                    },\n                    [\n                      _c(\n                        \"Button\",\n                        [\n                          _c(\"span\", [_vm._v(\"批量操作\")]),\n                          _c(\"Icon\", { attrs: { type: \"ios-arrow-down\" } })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"DropdownMenu\",\n                        { attrs: { slot: \"list\" }, slot: \"list\" },\n                        [\n                          _c(\"DropdownItem\", { attrs: { name: \"remove\" } }, [\n                            _vm._v(\"删除\")\n                          ]),\n                          _c(\n                            \"Dropdown\",\n                            { attrs: { placement: \"right-start\" } },\n                            [\n                              _c(\n                                \"DropdownItem\",\n                                [\n                                  _c(\"span\", [_vm._v(\"状态\")]),\n                                  _c(\"Icon\", {\n                                    attrs: { type: \"ios-arrow-forward\" }\n                                  })\n                                ],\n                                1\n                              ),\n                              _c(\n                                \"DropdownMenu\",\n                                { attrs: { slot: \"list\" }, slot: \"list\" },\n                                [\n                                  _c(\n                                    \"DropdownItem\",\n                                    { attrs: { name: \"status1\" } },\n                                    [_vm._v(\"启用\")]\n                                  ),\n                                  _c(\n                                    \"DropdownItem\",\n                                    { attrs: { name: \"status2\" } },\n                                    [_vm._v(\"禁用\")]\n                                  ),\n                                  _c(\n                                    \"DropdownItem\",\n                                    { attrs: { name: \"status3\" } },\n                                    [_vm._v(\"维护中\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"Dropdown\",\n                            { attrs: { placement: \"right-start\" } },\n                            [\n                              _c(\n                                \"DropdownItem\",\n                                [\n                                  _c(\"span\", [_vm._v(\"公开访问\")]),\n                                  _c(\"Icon\", {\n                                    attrs: { type: \"ios-arrow-forward\" }\n                                  })\n                                ],\n                                1\n                              ),\n                              _c(\n                                \"DropdownMenu\",\n                                { attrs: { slot: \"list\" }, slot: \"list\" },\n                                [\n                                  _c(\n                                    \"DropdownItem\",\n                                    { attrs: { name: \"open1\" } },\n                                    [_vm._v(\"允许公开访问\")]\n                                  ),\n                                  _c(\n                                    \"DropdownItem\",\n                                    { attrs: { name: \"open2\" } },\n                                    [_vm._v(\"拒绝公开访问\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"Dropdown\",\n                            { attrs: { placement: \"right-start\" } },\n                            [\n                              _c(\n                                \"DropdownItem\",\n                                [\n                                  _c(\"span\", [_vm._v(\"身份认证\")]),\n                                  _c(\"Icon\", {\n                                    attrs: { type: \"ios-arrow-forward\" }\n                                  })\n                                ],\n                                1\n                              ),\n                              _c(\n                                \"DropdownMenu\",\n                                { attrs: { slot: \"list\" }, slot: \"list\" },\n                                [\n                                  _c(\n                                    \"DropdownItem\",\n                                    { attrs: { name: \"auth1\" } },\n                                    [_vm._v(\"开启身份认证\")]\n                                  ),\n                                  _c(\n                                    \"DropdownItem\",\n                                    { attrs: { name: \"auth2\" } },\n                                    [_vm._v(\"关闭身份认证\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          ),\n          _c(\"Alert\", { attrs: { \"show-icon\": \"\" } }, [\n            _c(\"span\", [\n              _vm._v(\"自动扫描\"),\n              _c(\"code\", [_vm._v(\"@EnableResourceServer\")]),\n              _vm._v(\"资源服务器接口信息,注:自动添加的接口,都是未公开的. \"),\n              _c(\"code\", [\n                _vm._v(\n                  '只有公开的接口,才可以通过网关访问。否则将提示:\"请求地址,拒绝访问!\"'\n                )\n              ])\n            ])\n          ]),\n          _c(\"Table\", {\n            attrs: {\n              border: \"\",\n              columns: _vm.columns,\n              data: _vm.data,\n              loading: _vm.loading\n            },\n            on: { \"on-selection-change\": _vm.handleTableSelectChange },\n            scopedSlots: _vm._u([\n              {\n                key: \"apiName\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [_c(\"span\", [_vm._v(_vm._s(row.apiName))])]\n                }\n              },\n              {\n                key: \"isAuth\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [\n                    row.isOpen === 1\n                      ? _c(\"Tag\", { attrs: { color: \"green\" } }, [\n                          _vm._v(\"允许公开访问\")\n                        ])\n                      : row.isOpen !== 1\n                      ? _c(\"Tag\", { attrs: { color: \"red\" } }, [\n                          _vm._v(\"拒绝公开访问\")\n                        ])\n                      : _vm._e(),\n                    row.isAuth === 1\n                      ? _c(\"Tag\", { attrs: { color: \"green\" } }, [\n                          _vm._v(\"开启身份认证\")\n                        ])\n                      : row.isAuth !== 1\n                      ? _c(\"Tag\", { attrs: { color: \"red\" } }, [\n                          _vm._v(\"关闭身份认证\")\n                        ])\n                      : _vm._e(),\n                    row.status === 1\n                      ? _c(\"Tag\", { attrs: { color: \"green\" } }, [\n                          _vm._v(\"启用\")\n                        ])\n                      : row.status === 2\n                      ? _c(\"Tag\", { attrs: { color: \"orange\" } }, [\n                          _vm._v(\"维护中\")\n                        ])\n                      : _c(\"Tag\", { attrs: { color: \"red\" } }, [_vm._v(\"禁用\")])\n                  ]\n                }\n              },\n              {\n                key: \"action\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [\n                    _c(\n                      \"a\",\n                      {\n                        attrs: {\n                          disabled: _vm.hasAuthority(\"systemApiEdit\")\n                            ? false\n                            : true\n                        },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleModal(row)\n                          }\n                        }\n                      },\n                      [_vm._v(\"\\n          编辑\")]\n                    ),\n                    _vm._v(\" \\n        \"),\n                    _c(\n                      \"a\",\n                      {\n                        attrs: {\n                          disabled: _vm.hasAuthority(\"systemApiEdit\")\n                            ? false\n                            : true\n                        },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleRemove(row)\n                          }\n                        }\n                      },\n                      [_vm._v(\"\\n          删除\")]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"Page\", {\n            attrs: {\n              transfer: \"\",\n              total: _vm.pageInfo.total,\n              current: _vm.pageInfo.page,\n              \"page-size\": _vm.pageInfo.limit,\n              \"show-elevator\": \"\",\n              \"show-sizer\": \"\",\n              \"show-total\": \"\"\n            },\n            on: {\n              \"on-change\": _vm.handlePage,\n              \"on-page-size-change\": _vm.handlePageSize\n            }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"Modal\",\n        {\n          attrs: { title: _vm.modalTitle, width: \"40\" },\n          on: { \"on-cancel\": _vm.handleReset },\n          model: {\n            value: _vm.modalVisible,\n            callback: function($$v) {\n              _vm.modalVisible = $$v\n            },\n            expression: \"modalVisible\"\n          }\n        },\n        [\n          _c(\n            \"div\",\n            [\n              (_vm.formItem.apiId\n              ? true\n              : false)\n                ? _c(\n                    \"Alert\",\n                    { attrs: { \"show-icon\": \"\" } },\n                    [\n                      _c(\"span\", [_vm._v(\"自动扫描接口swagger注解。\")]),\n                      _c(\n                        \"Poptip\",\n                        { attrs: { placement: \"bottom\", title: \"示例代码\" } },\n                        [\n                          _c(\"a\", [_vm._v(\"示例代码\")]),\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"content\" }, slot: \"content\" },\n                            [\n                              _c(\n                                \"div\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"highlight\",\n                                      rawName: \"v-highlight\"\n                                    }\n                                  ]\n                                },\n                                [\n                                  _c(\"pre\", [\n                                    _vm._v(\n                                      '                    // 接口介绍\\n                    @ApiOperation(value = \"接口名称\", notes = \"接口备注\")\\n                    @PostMapping(\"/testApi\")\\n                    // 忽略接口,将不再添加或修改次接口\\n                    @ApiIgnore\\n                    public ResultBody testApi() {\\n                        return ResultBody.success();\\n                    }\\n              '\n                                    )\n                                  ])\n                                ]\n                              )\n                            ]\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\n                \"Form\",\n                {\n                  ref: \"form1\",\n                  attrs: {\n                    model: _vm.formItem,\n                    rules: _vm.formItemRules,\n                    \"label-width\": 100\n                  }\n                },\n                [\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"服务名称\", prop: \"serviceId\" } },\n                    [\n                      _c(\n                        \"Select\",\n                        {\n                          attrs: {\n                            disabled:\n                              _vm.formItem.apiId && _vm.formItem.isPersist === 1\n                                ? true\n                                : false,\n                            filterable: \"\",\n                            clearable: \"\"\n                          },\n                          model: {\n                            value: _vm.formItem.serviceId,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"serviceId\", $$v)\n                            },\n                            expression: \"formItem.serviceId\"\n                          }\n                        },\n                        _vm._l(_vm.selectServiceList, function(item, index) {\n                          return _c(\n                            \"Option\",\n                            { key: index, attrs: { value: item.serviceId } },\n                            [_vm._v(_vm._s(item.serviceName))]\n                          )\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"接口分类\", prop: \"apiCategory\" } },\n                    [\n                      _c(\"Input\", {\n                        attrs: { placeholder: \"请输入内容\" },\n                        model: {\n                          value: _vm.formItem.apiCategory,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formItem, \"apiCategory\", $$v)\n                          },\n                          expression: \"formItem.apiCategory\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"接口编码\", prop: \"apiCode\" } },\n                    [\n                      _c(\"Input\", {\n                        attrs: {\n                          disabled:\n                            _vm.formItem.apiId && _vm.formItem.isPersist === 1\n                              ? true\n                              : false,\n                          placeholder: \"请输入内容\"\n                        },\n                        model: {\n                          value: _vm.formItem.apiCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formItem, \"apiCode\", $$v)\n                          },\n                          expression: \"formItem.apiCode\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"接口名称\", prop: \"apiName\" } },\n                    [\n                      _c(\"Input\", {\n                        attrs: {\n                          disabled:\n                            _vm.formItem.apiId && _vm.formItem.isPersist === 1\n                              ? true\n                              : false,\n                          placeholder: \"请输入内容\"\n                        },\n                        model: {\n                          value: _vm.formItem.apiName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formItem, \"apiName\", $$v)\n                          },\n                          expression: \"formItem.apiName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"请求地址\", prop: \"path\" } },\n                    [\n                      _c(\"Input\", {\n                        attrs: {\n                          disabled:\n                            _vm.formItem.apiId && _vm.formItem.isPersist === 1\n                              ? true\n                              : false,\n                          placeholder: \"请输入内容\"\n                        },\n                        model: {\n                          value: _vm.formItem.path,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formItem, \"path\", $$v)\n                          },\n                          expression: \"formItem.path\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"优先级\" } },\n                    [\n                      _c(\"InputNumber\", {\n                        model: {\n                          value: _vm.formItem.priority,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formItem, \"priority\", $$v)\n                          },\n                          expression: \"formItem.priority\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"身份认证\" } },\n                    [\n                      _c(\n                        \"RadioGroup\",\n                        {\n                          attrs: { type: \"button\" },\n                          model: {\n                            value: _vm.formItem.isAuth,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"isAuth\", $$v)\n                            },\n                            expression: \"formItem.isAuth\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"Radio\",\n                            {\n                              attrs: {\n                                disabled:\n                                  _vm.formItem.apiId &&\n                                  _vm.formItem.isPersist === 1\n                                    ? true\n                                    : false,\n                                label: \"0\"\n                              }\n                            },\n                            [_vm._v(\"关闭\")]\n                          ),\n                          _c(\n                            \"Radio\",\n                            {\n                              attrs: {\n                                disabled:\n                                  _vm.formItem.apiId &&\n                                  _vm.formItem.isPersist === 1\n                                    ? true\n                                    : false,\n                                label: \"1\"\n                              }\n                            },\n                            [_vm._v(\"开启\")]\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\"p\", [\n                        _c(\"code\", [\n                          _vm._v(\n                            '开启：未认证登录,提示\"认证失败,请重新登录!\";关闭: 不需要认证登录'\n                          )\n                        ])\n                      ])\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"公开访问\" } },\n                    [\n                      _c(\n                        \"RadioGroup\",\n                        {\n                          attrs: { type: \"button\" },\n                          model: {\n                            value: _vm.formItem.isOpen,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"isOpen\", $$v)\n                            },\n                            expression: \"formItem.isOpen\"\n                          }\n                        },\n                        [\n                          _c(\"Radio\", { attrs: { label: \"0\" } }, [\n                            _vm._v(\"拒绝\")\n                          ]),\n                          _c(\"Radio\", { attrs: { label: \"1\" } }, [\n                            _vm._v(\"允许\")\n                          ])\n                        ],\n                        1\n                      ),\n                      _c(\"p\", [\n                        _c(\"code\", [_vm._v('拒绝:提示\"请求地址,拒绝访问!\"')])\n                      ])\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"状态\" } },\n                    [\n                      _c(\n                        \"RadioGroup\",\n                        {\n                          attrs: { type: \"button\" },\n                          model: {\n                            value: _vm.formItem.status,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"status\", $$v)\n                            },\n                            expression: \"formItem.status\"\n                          }\n                        },\n                        [\n                          _c(\"Radio\", { attrs: { label: \"0\" } }, [\n                            _vm._v(\"禁用\")\n                          ]),\n                          _c(\"Radio\", { attrs: { label: \"1\" } }, [\n                            _vm._v(\"启用\")\n                          ]),\n                          _c(\"Radio\", { attrs: { label: \"2\" } }, [\n                            _vm._v(\"维护中\")\n                          ])\n                        ],\n                        1\n                      ),\n                      _c(\"p\", [\n                        _c(\"code\", [\n                          _vm._v(\n                            '禁用：提示\"请求地址,禁止访问!\";维护中：提示\"正在升级维护中,请稍后再试!\";'\n                          )\n                        ])\n                      ])\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"FormItem\",\n                    { attrs: { label: \"描述\" } },\n                    [\n                      _c(\"Input\", {\n                        attrs: { type: \"textarea\", placeholder: \"请输入内容\" },\n                        model: {\n                          value: _vm.formItem.apiDesc,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formItem, \"apiDesc\", $$v)\n                          },\n                          expression: \"formItem.apiDesc\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"drawer-footer\" },\n                [\n                  _c(\n                    \"Button\",\n                    {\n                      attrs: { type: \"default\" },\n                      on: { click: _vm.handleReset }\n                    },\n                    [_vm._v(\"取消\")]\n                  ),\n                  _vm._v(\" \\n        \"),\n                  _c(\n                    \"Button\",\n                    {\n                      attrs: { type: \"primary\", loading: _vm.saving },\n                      on: { click: _vm.handleSubmit }\n                    },\n                    [_vm._v(\"保存\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}